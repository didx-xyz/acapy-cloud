# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Build

on:
  push:
    branches: [development, main]
  pull_request:
    branches: [development]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
      - name: Install test dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Pylint
        run: |
          pylint app --rcfile=.pylintrc -r n --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" --exit-zero > pylintreport.txt
      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          # version: v2.1.0 # defaults to 'latest'
          legacy: true # will also install in PATH as `docker-compose`
      - name: Start Test Harness
        run: |
          set -x
          docker compose version
          rm -rf ./data
          mkdir ./data
          sudo chown -R $(id -u):$(id -g) ./data
          chmod 777 ./data -R
          chmod u+x manage
          i=0
          echo waiting for aca-py container to startup
          ./manage up-daemon-usecache
        shell: bash
      - name: Test with pytest
        id: test
        # continue-on-error: true
        run: |
          pytest --durations=0 --cov=app --cov=endorser --cov=trustregistry --cov=webhooks app endorser trustregistry webhooks
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
          echo done
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }} # Needed for Codacy reporting
      - name: Tear down test harness
        run: ./manage down || true
