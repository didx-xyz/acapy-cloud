name: Update OpenAPI

on:
  workflow_call:
    inputs:
      image-version:
        description: Image version to run
        required: true
        type: string
      pr-number:
        description: Pull request number (if triggered by a PR)
        required: false
        type: number

permissions: {}

jobs:
  diff:
    name: Diff
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    services:
      tenant-admin:
        image: ghcr.io/didx-xyz/acapy-cloud/app:${{ inputs.image-version }}
        ports:
          - 8080:8000
        env:
          OPENAPI_NAME: CloudAPI Multitenant Admin
          ROLE: tenant-admin
          ROOT_PATH: /tenant-admin
      tenant:
        image: ghcr.io/didx-xyz/acapy-cloud/app:${{ inputs.image-version }}
        ports:
          - 8181:8000
        env:
          OPENAPI_NAME: CloudAPI Tenant
          ROLE: tenant
          ROOT_PATH: /tenant

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Check if services are up
        run: |
          for i in {1..10}; do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/tenant-admin/openapi.json; then
              echo "Tenant Admin service is up"
              break
            fi
            sleep 5
          done

          for i in {1..10}; do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:8181/tenant/openapi.json; then
              echo "Tenant service is up"
              break
            fi
            sleep 5
          done

      - name: Download OpenAPI Specs
        run: |
          mkdir -p ./tmp

          curl -s http://localhost:8080/tenant-admin/openapi.json | jq . > ./tmp/tenant-admin-openapi.json
          curl -s http://localhost:8080/tenant-admin/openapi.yaml | yq . > ./tmp/tenant-admin-openapi.yaml

          curl -s http://localhost:8181/tenant/openapi.json | jq . > ./tmp/tenant-openapi.json
          curl -s http://localhost:8181/tenant/openapi.yaml | yq . > ./tmp/tenant-openapi.yaml

      - name: Debug
        run: |
          ls -la ./tmp
          ls -la ./docs/openapi

      - name: Running OpenAPI Spec diff action (Tenant Admin JSON)
        uses: oasdiff/oasdiff-action/diff@d68e4d01cb0ba24b6811df1e190f2a640169ea6d # main
        id: tenant-admin-json
        with:
          base: ./docs/openapi/tenant-admin-openapi.json
          revision: ./tmp/tenant-admin-openapi.json
          format: markdown
          include-path-params: true

      - name: Running OpenAPI Spec diff action (Tenant Admin YAML)
        uses: oasdiff/oasdiff-action/diff@d68e4d01cb0ba24b6811df1e190f2a640169ea6d # main
        id: tenant-admin-yaml
        with:
          base: ./docs/openapi/tenant-admin-openapi.yaml
          revision: ./tmp/tenant-admin-openapi.yaml
          format: markdown
          include-path-params: true

      - name: Running OpenAPI Spec diff action (Tenant JSON)
        uses: oasdiff/oasdiff-action/diff@d68e4d01cb0ba24b6811df1e190f2a640169ea6d # main
        id: tenant-json
        with:
          base: ./docs/openapi/tenant-openapi.json
          revision: ./tmp/tenant-openapi.json
          format: markdown
          include-path-params: true

      - name: Running OpenAPI Spec diff action (Tenant YAML)
        uses: oasdiff/oasdiff-action/diff@d68e4d01cb0ba24b6811df1e190f2a640169ea6d # main
        id: tenant-yaml
        with:
          base: ./docs/openapi/tenant-openapi.yaml
          revision: ./tmp/tenant-openapi.yaml
          format: markdown
          include-path-params: true

      - name: Create OpenAPI diff PR review
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: inputs.pr-number != ''
        with:
          script: |
            const tenantAdminJsonDiff = `${{ steps.tenant-admin-json.outputs.diff }}`;
            const tenantAdminYamlDiff = `${{ steps.tenant-admin-yaml.outputs.diff }}`;
            const tenantJsonDiff = `${{ steps.tenant-json.outputs.diff }}`;
            const tenantYamlDiff = `${{ steps.tenant-yaml.outputs.diff }}`;

            // Unique identifier for our comment
            const COMMENT_IDENTIFIER = "<!-- openapi-diff-check -->";

            // Spec information
            const specs = [
              {
                name: 'Tenant Admin API (JSON)',
                path: 'docs/openapi/tenant-admin-openapi.json',
                diff: tenantAdminJsonDiff,
                hasChanges: tenantAdminJsonDiff !== 'No changes'
              },
              {
                name: 'Tenant Admin API (YAML)',
                path: 'docs/openapi/tenant-admin-openapi.yaml',
                diff: tenantAdminYamlDiff,
                hasChanges: tenantAdminYamlDiff !== 'No changes'
              },
              {
                name: 'Tenant API (JSON)',
                path: 'docs/openapi/tenant-openapi.json',
                diff: tenantJsonDiff,
                hasChanges: tenantJsonDiff !== 'No changes'
              },
              {
                name: 'Tenant API (YAML)',
                path: 'docs/openapi/tenant-openapi.yaml',
                diff: tenantYamlDiff,
                hasChanges: tenantYamlDiff !== 'No changes'
              }
            ];

            // Always create a step summary
            const fs = require('fs');
            let summaryContent = '## OpenAPI Specification Changes\n\n';

            // Count changed and resolved specs
            const specsWithChanges = specs.filter(spec => spec.hasChanges);

            // Generate detailed summary
            specs.forEach(spec => {
              if (spec.hasChanges) {
                summaryContent += `### ${spec.name}\n\n${spec.diff}\n\n`;
              }
            });

            if (specsWithChanges.length === 0) {
              summaryContent += 'No changes detected in any OpenAPI specification.\n';
            }

            fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, summaryContent);
            console.log('Added OpenAPI diff results to the step summary');

            // Check if PR number is provided
            const prNumber = parseInt('${{ inputs.pr-number }}', 10);
            if (!prNumber) {
              console.log('PR number not provided, skipping PR comment creation');
              return;
            }

            // Get existing comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            // Find our existing comment
            const existingComment = comments.data.find(comment =>
              comment.body.includes(COMMENT_IDENTIFIER)
            );

            // Create comment body
            let commentBody = `${COMMENT_IDENTIFIER}\n## OpenAPI Specification Changes\n\n`;

            if (specsWithChanges.length > 0) {
              // Add details for specs with changes
              commentBody += `### ‚ö†Ô∏è The following OpenAPI specifications have differences that need to be addressed:\n\n`;

              specsWithChanges.forEach(spec => {
                commentBody += `<details>\n<summary><strong>üîç ${spec.name}</strong> - Changes detected</summary>\n\n`;
                commentBody += `${spec.diff}\n\n`;
                commentBody += `</details>\n\n`;
              });

              commentBody += `\nPlease update the OpenAPI specifications to resolve these differences.\n`;
            } else {
              // All specs are in sync
              commentBody = `${COMMENT_IDENTIFIER}\n## ‚úÖ All OpenAPI Specifications are in sync\n\n`;
              commentBody += `No differences were detected in the OpenAPI specifications.`;
            }

            // Either update the existing comment or create a new one
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log('Updated existing OpenAPI diff comment');
            } else if (specsWithChanges.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log(`Created OpenAPI diff comment on PR #${prNumber}`);
            }
