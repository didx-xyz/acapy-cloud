name: CICD

on:
  workflow_dispatch:
    inputs:
      helm-version:
        description: Helm version
        required: false
        default: 3.13.3
        type: string
      helmfile-version:
        description: Helmfile version
        required: false
        default: 1.0.0
        type: string
      mise-version:
        description: Mise version
        required: false
        default: 2025.4.12
        type: string
      reset-deployments:
        description: Reset deployment - Clean start
        required: false
        default: false
        type: boolean
      regression-tests:
        description: Run regression tests step
        required: false
        default: true
        type: boolean
      run-tests:
        description: Run tests step
        required: false
        default: true
        type: boolean

  push:
    branches:
      - master
    tags:
      - "v*"
    paths:
      - "**"
      - "!docs/**" # Ignore changes in the docs folder
      - "!**.md" # Ignore changes to any markdown file
      - "!.github/dependabot.yml" # Ignore changes to Dependabot config
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - "**"
      - "!docs/**" # Ignore changes in the docs folder
      - "!**.md" # Ignore changes to any markdown file
      - "!.github/dependabot.yml" # Ignore changes to Dependabot config

permissions: {}

jobs:
  format:
    name: Format Check
    uses: ./.github/workflows/format.yml
    with:
      mise-version: ${{ inputs.mise-version }}
    concurrency:
      group: format-check-${{ github.ref_name }}
      cancel-in-progress: true

  unit:
    name: Unit Tests
    uses: ./.github/workflows/unit.yml
    with:
      mise-version: ${{ inputs.mise-version }}
    concurrency:
      group: unit-test-${{ github.ref_name }}
      cancel-in-progress: true

  build:
    name: Docker Build
    uses: ./.github/workflows/docker-build.yml
    needs:
      - format
      - unit
    permissions:
      packages: write

  test:
    name: Local Test
    needs:
      - build
    uses: ./.github/workflows/local-tests.yml
    with:
      image-version: ${{ needs.build.outputs.image_version }}
      mise-version: ${{ inputs.mise-version }}
    secrets:
      codacy-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
    concurrency:
      group: local-tests-${{ github.ref_name }}
      cancel-in-progress: true

  deploy-test-eks:
    if: github.actor != 'dependabot[bot]' && github.event.pull_request.draft == false
    name: Deploy and Test EKS
    uses: ./.github/workflows/deploy-test-eks.yml
    needs:
      - build
    with:
      environment: dev
      helm-version: ${{ inputs.helm-version }}
      helmfile-version: ${{ inputs.helmfile-version }}
      image-version: ${{ needs.build.outputs.image_version }}
      mise-version: ${{ inputs.mise-version }}
    secrets:
      tailscale-authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

    permissions:
      id-token: write # Required to authenticate with AWS
      checks: write # Required for action-junit-report
      pull-requests: write # Required to comment on PRs for Pytest coverage comment

  notify-didx-cloud:
    name: Notify didx-cloud

    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'

    needs:
      - build
      - deploy-test-eks
      - test

    uses: ./.github/workflows/notify.yml
    with:
      acapy-cloud-ref: ${{ github.sha }}
      image-version: ${{ needs.build.outputs.image_version }}
      regression-tests: ${{ inputs.regression-tests }}
      reset-deployments: ${{ inputs.reset-deployments }}
      run-tests: ${{ inputs.run-tests }}
    secrets:
      devops-app-id: ${{ secrets.DEVOPS_APP_ID }}
      devops-private-key: ${{ secrets.DEVOPS_PRIVATE_KEY }}
