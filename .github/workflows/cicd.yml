name: CICD

on:
  workflow_dispatch:
    inputs:
      regression-tests:
        description: Run Regression Tests on EKS
        required: false
        default: true
        type: boolean
      reset-deployments:
        description: Reset deployment - Clean start
        required: false
        default: false
        type: boolean
      run-k6:
        description: Run K6 Tests on EKS
        required: false
        default: true
        type: boolean
      run-tests:
        description: Run End-to-End Tests on EKS
        required: false
        default: true
        type: boolean

  push:
    branches:
      - master
    tags:
      - "v*"
    paths:
      - "**"
      - "!docs/**" # Ignore changes in the docs folder
      - "!**.md" # Ignore changes to any markdown file
      - "!.github/dependabot.yml" # Ignore changes to Dependabot config
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - "**"
      - "!docs/**" # Ignore changes in the docs folder
      - "!**.md" # Ignore changes to any markdown file
      - "!.github/dependabot.yml" # Ignore changes to Dependabot config

permissions: {}

env:
  HELM_VERSION: v3.17.3
  HELMFILE_VERSION: v1.0.0
  MISE_VERSION: 2025.5.0

jobs:
  export-versions:
    name: Export tool versions
    runs-on: ubuntu-latest

    ###
    # Needed because we can't pass env vars (`${{ env.HELM_VERSION }}`) to `workflow_call`
    ###

    outputs:
      HELM_VERSION: ${{ steps.export.outputs.HELM_VERSION }}
      HELMFILE_VERSION: ${{ steps.export.outputs.HELMFILE_VERSION }}
      MISE_VERSION: ${{ steps.export.outputs.MISE_VERSION }}

    steps:
      - name: Export tool versions
        id: export
        run: |
          echo "HELM_VERSION=${HELM_VERSION}" >> $GITHUB_OUTPUT
          echo "HELMFILE_VERSION=${HELMFILE_VERSION}" >> $GITHUB_OUTPUT
          echo "MISE_VERSION=${MISE_VERSION}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    needs: export-versions
    uses: ./.github/workflows/format.yml
    with:
      mise-version: ${{ needs.export-versions.outputs.MISE_VERSION }}
    concurrency:
      group: format-check-${{ github.ref_name }}
      cancel-in-progress: true

  unit-test:
    name: Tests
    needs: export-versions
    uses: ./.github/workflows/unit.yml
    with:
      mise-version: ${{ needs.export-versions.outputs.MISE_VERSION }}
    concurrency:
      group: unit-test-${{ github.ref_name }}
      cancel-in-progress: true

  docker:
    name: Docker
    uses: ./.github/workflows/docker-build.yml
    needs:
      - lint
      - unit-test
    permissions:
      packages: write
    concurrency:
      group: docker-${{ github.ref_name }}
      cancel-in-progress: true

  openapi:
    name: OpenAPI
    needs: docker
    uses: ./.github/workflows/update-openapi.yml
    if: (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') || github.ref_name == github.event.repository.default_branch
    with:
      image-version: ${{ needs.docker.outputs.image_version }}
    secrets:
      devops-app-id: ${{ secrets.DEVOPS_APP_ID }}
      devops-private-key: ${{ secrets.DEVOPS_PRIVATE_KEY }}
    concurrency:
      group: update-openapi-${{ github.ref_name }}
      cancel-in-progress: true
    permissions:
      contents: write # Required to push changes to the repository
      pull-requests: write # Required to comment on PRs about OpenAPI spec changes

  local-test:
    name: Tests
    needs:
      - docker
      - export-versions
    uses: ./.github/workflows/local-tests.yml
    with:
      image-version: ${{ needs.docker.outputs.image_version }}
      mise-version: ${{ needs.export-versions.outputs.MISE_VERSION }}
    secrets:
      codacy-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
    concurrency:
      group: local-tests-${{ github.ref_name }}
      cancel-in-progress: true

  eks:
    if: github.actor != 'dependabot[bot]' && github.event.pull_request.draft == false
    name: EKS
    uses: ./.github/workflows/deploy-test-eks.yml
    needs:
      - docker
      - export-versions
    with:
      acapy-helmfile-path: ./helm/acapy-cloud.yaml.gotmpl
      acapy-test-helmfile-path: ./helm/acapy-test.yaml.gotmpl
      connect-configs-dir: ./resources/connect-processors/cloud
      helm-plugins: https://github.com/databus23/helm-diff
      helm-version: ${{ needs.export-versions.outputs.HELM_VERSION }}
      helmfile-version: ${{ needs.export-versions.outputs.HELMFILE_VERSION }}
      image-version: ${{ needs.docker.outputs.image_version }}
      namespace: acapy-cloud-dev
      regression-tests: ${{ github.event.inputs.regression-tests || true }}
      reset-deployments: ${{ github.event.inputs.reset-deployments || false }}
      run-k6: ${{ github.event.inputs.run-k6 || true }}
      run-tests: ${{ github.event.inputs.run-tests || true }}
    secrets:
      tailscale-authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

    permissions:
      id-token: write # Required to authenticate with AWS
      checks: write # Required for action-junit-report
      pull-requests: write # Required to comment on PRs for Pytest coverage comment

  notify:
    name: Notify

    if: github.actor != 'dependabot[bot]' && github.event_name != 'pull_request'

    needs:
      - docker
      - eks
      - export-versions
      - local-test

    uses: ./.github/workflows/notify.yml
    with:
      acapy-cloud-ref: ${{ github.sha }}
      image-version: ${{ needs.docker.outputs.image_version }}
      regression-tests: ${{ inputs.regression-tests || true }}
      reset-deployments: ${{ inputs.reset-deployments || false }}
      run-k6: ${{ inputs.run-k6 || true }}
      run-tests: ${{ inputs.run-tests || true }}
    secrets:
      devops-app-id: ${{ secrets.DEVOPS_APP_ID }}
      devops-private-key: ${{ secrets.DEVOPS_PRIVATE_KEY }}
