{
  "openapi": "3.1.0",
  "info": {
    "title": "CloudAPI Multitenant Admin",
    "description": "\nWelcome to the Aries CloudAPI Python project!\n\nFor detailed guidance on using the API, please visit our official documentation:\nhttps://www.didx.co.za/ssi-dev-portal/docs/Welcome.\n",
    "version": "1.0.0"
  },
  "servers": [{ "url": "/tenant-admin" }],
  "paths": {
    "/v1/tenants": {
      "post": {
        "tags": ["admin: tenants"],
        "summary": "Create Tenant",
        "description": "Create a new tenant.",
        "operationId": "create_tenant_v1_tenants_post",
        "security": [{ "APIKeyHeader": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTenantRequest" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTenantResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Tenants",
        "description": "Get all tenants, or fetch by wallet name.",
        "operationId": "get_tenants_v1_tenants_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "wallet_name",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Wallet Name" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer", "maximum": 10000, "minimum": 1 }, { "type": "null" }],
              "description": "Number of results to return",
              "default": 1000,
              "title": "Limit"
            },
            "description": "Number of results to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer", "minimum": 0 }, { "type": "null" }],
              "description": "Offset for pagination",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset for pagination"
          },
          {
            "name": "descending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to return results in descending order. Results are ordered by record created time.",
              "default": true,
              "title": "Descending"
            },
            "description": "Whether to return results in descending order. Results are ordered by record created time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Tenant" },
                  "title": "Response Get Tenants V1 Tenants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/tenants/{wallet_id}": {
      "delete": {
        "tags": ["admin: tenants"],
        "summary": "Delete Tenant By Id",
        "description": "Delete tenant by id.",
        "operationId": "delete_tenant_by_id_v1_tenants__wallet_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "put": {
        "tags": ["admin: tenants"],
        "summary": "Update Tenant",
        "description": "Update tenant by id.",
        "operationId": "update_tenant_v1_tenants__wallet_id__put",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateTenantRequest" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Tenant" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Tenant",
        "description": "Get tenant by id.",
        "operationId": "get_tenant_v1_tenants__wallet_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Tenant" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/tenants/{wallet_id}/access-token": {
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Wallet Auth Token",
        "operationId": "get_wallet_auth_token_v1_tenants__wallet_id__access_token_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TenantAuth" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{field}/{field_id}/{desired_state}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To A Wallet Event By Topic, Field, And Desired State",
        "description": "Subscribe to SSE events wait for a desired state with a field filter.\n---\n***This endpoint can't be called on the swagger UI, as it requires a stream response.***\n\nWait for a desired state to be reached for some event for this wallet and topic,\nfiltering for payloads that contain `field:field_id`.\n\nexample: `/{wallet_id}/credentials/connection_id/some-uuid/done` will stream a credential exchange event on a\nspecific connection with state done.\nThe field and field ID pair must be present in the payload (other than state) for the event to be streamed.\nThe stream will be closed after the event is returned.\n\nParameters:\n-----------\n    wallet_id:\n        The ID of the wallet subscribing to the events.\n    topic:\n        The topic to which the wallet is subscribing.\n    field:\n        The field to which the wallet is subscribing.\n    field_id:\n        The ID of the field subscribing to the events.\n    desired_state:\n        The desired state to be reached.\n    look_back:\n        Number of seconds to look back for events before subscribing.",
        "operationId": "Subscribe_to_a_Wallet_Event_by_Topic__Field__and_Desired_State_v1_sse__wallet_id___topic___field___field_id___desired_state__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          { "name": "field", "in": "path", "required": true, "schema": { "type": "string", "title": "Field" } },
          { "name": "field_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Field Id" } },
          {
            "name": "desired_state",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Desired State" }
          },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "description": "Number of seconds to look back for events",
              "default": 60,
              "title": "Look Back"
            },
            "description": "Number of seconds to look back for events"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTenantRequest": {
        "properties": {
          "wallet_label": {
            "type": "string",
            "title": "Wallet Label",
            "description": "A required alias for the tenant, publicized to other agents when forming a connection. If the tenant is an issuer or verifier, this label will be displayed on the trust registry and must be unique. Allowable special characters: .!@$*()~_-",
            "examples": ["Tenant Label"]
          },
          "wallet_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wallet Name",
            "description": "An optional wallet name. Useful with `get_tenants` to fetch wallets by wallet name. If selected, must be unique. Otherwise, randomly generated.",
            "examples": ["Unique name"]
          },
          "roles": {
            "anyOf": [
              { "items": { "type": "string", "enum": ["issuer", "verifier"] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Roles"
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "extra_settings": {
            "anyOf": [{ "additionalProperties": { "type": "boolean" }, "type": "object" }, { "type": "null" }],
            "title": "Extra Settings",
            "description": "Optional per-tenant settings to configure wallet behaviour for advanced users.",
            "examples": [{ "ACAPY_AUTO_ACCEPT_INVITES": false }]
          }
        },
        "type": "object",
        "required": ["wallet_label"],
        "title": "CreateTenantRequest"
      },
      "CreateTenantResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token", "examples": ["ey..."] },
          "wallet_id": { "type": "string", "title": "Wallet Id", "examples": ["545135a4-ecbc-4400-8594-bdb74c51c88d"] },
          "wallet_label": { "type": "string", "title": "Wallet Label", "examples": ["Alice"] },
          "wallet_name": { "type": "string", "title": "Wallet Name", "examples": ["SomeWalletName"] },
          "created_at": { "type": "string", "title": "Created At" },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          }
        },
        "type": "object",
        "required": ["access_token", "wallet_id", "wallet_label", "wallet_name", "created_at"],
        "title": "CreateTenantResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": { "items": { "$ref": "#/components/schemas/ValidationError" }, "type": "array", "title": "Detail" }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Tenant": {
        "properties": {
          "wallet_id": { "type": "string", "title": "Wallet Id", "examples": ["545135a4-ecbc-4400-8594-bdb74c51c88d"] },
          "wallet_label": { "type": "string", "title": "Wallet Label", "examples": ["Alice"] },
          "wallet_name": { "type": "string", "title": "Wallet Name", "examples": ["SomeWalletName"] },
          "created_at": { "type": "string", "title": "Created At" },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          }
        },
        "type": "object",
        "required": ["wallet_id", "wallet_label", "wallet_name", "created_at"],
        "title": "Tenant"
      },
      "TenantAuth": {
        "properties": { "access_token": { "type": "string", "title": "Access Token", "examples": ["ey..."] } },
        "type": "object",
        "required": ["access_token"],
        "title": "TenantAuth"
      },
      "UpdateTenantRequest": {
        "properties": {
          "wallet_label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wallet Label",
            "description": "A required alias for the tenant, publicized to other agents when forming a connection. If the tenant is an issuer or verifier, this label will be displayed on the trust registry and must be unique. Allowable special characters: .!@$*()~_-",
            "examples": ["Tenant Label"]
          },
          "roles": {
            "anyOf": [
              { "items": { "type": "string", "enum": ["issuer", "verifier"] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Roles"
          },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "extra_settings": {
            "anyOf": [{ "additionalProperties": { "type": "boolean" }, "type": "object" }, { "type": "null" }],
            "title": "Extra Settings",
            "description": "Optional per-tenant settings to configure wallet behaviour for advanced users.",
            "examples": [{ "ACAPY_AUTO_ACCEPT_INVITES": false }]
          }
        },
        "type": "object",
        "title": "UpdateTenantRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "x-api-key" } }
  }
}
