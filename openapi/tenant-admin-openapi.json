{
  "openapi": "3.1.0",
  "info": {
    "title": "CloudAPI-Multitenant-Admin",
    "description": "\nWelcome to the Aries CloudAPI Python project.\n\nIn addition to the traditional HTTP-based endpoints described below, we also offer WebSocket endpoints for\nreal-time interfacing with webhook events.\n\nWebSocket endpoints are authenticated. This means that only users with valid authentication tokens can establish\na WebSocket connection, and they can only subscribe to their own wallet's events. However, Admin users have the\nability to subscribe by topic, or to any wallet in their group.\n\nOur WebSocket endpoints are as follows:\n\n1. `/v1/ws/`: This endpoint allows admins to receive all webhook events for their group.\n\n2. `/v1/ws/{wallet_id}`: This endpoint allows admins (or authenticated users holding this wallet) to receive webhook\nevents for a specific wallet ID.\n\n3. `/v1/ws/{wallet_id}/{topic}`: Similar to above, but subscribing to a specific topic.\n\n4. `/v1/ws/topic/{topic}`: This endpoint allows admins to receive all webhook events on a specific topic (e.g.\n`connections`, `credentials`, `proofs`, `endorsements`).\n\nFor authentication, the WebSocket headers should include `x-api-key`: `<your key>`.\n\nPlease refer to our API documentation for more details about our authentication mechanism, as well as for information\nabout the available topics.\n",
    "version": "0.11.0"
  },
  "servers": [{ "url": "/tenant-admin" }],
  "paths": {
    "/v1/tenants": {
      "post": {
        "tags": ["admin: tenants"],
        "summary": "Create Tenant",
        "description": "Create a new tenant.",
        "operationId": "create_tenant_v1_tenants_post",
        "security": [{ "APIKeyHeader": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTenantRequest" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTenantResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Tenants",
        "description": "Get all tenants, or fetch by wallet name.",
        "operationId": "get_tenants_v1_tenants_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "wallet_name",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Wallet Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Tenant" },
                  "title": "Response Get Tenants V1 Tenants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/tenants/{wallet_id}": {
      "delete": {
        "tags": ["admin: tenants"],
        "summary": "Delete Tenant By Id",
        "description": "Delete tenant by id.",
        "operationId": "delete_tenant_by_id_v1_tenants__wallet_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "put": {
        "tags": ["admin: tenants"],
        "summary": "Update Tenant",
        "description": "Update tenant by id.",
        "operationId": "update_tenant_v1_tenants__wallet_id__put",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateTenantRequest" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Tenant" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Tenant",
        "description": "Get tenant by id.",
        "operationId": "get_tenant_v1_tenants__wallet_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Tenant" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/tenants/{wallet_id}/access-token": {
      "get": {
        "tags": ["admin: tenants"],
        "summary": "Get Wallet Auth Token",
        "operationId": "get_wallet_auth_token_v1_tenants__wallet_id__access_token_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TenantAuth" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/webhooks": {
      "get": {
        "tags": ["webhooks"],
        "summary": "Get Webhooks For Wallet",
        "description": "**Deprecated**: Fetching bulk webhook events is set to be removed.\nWe recommend monitoring webhook events live, using the SSE endpoint instead, or websockets if preferred.\n\nReturns 100 most recent webhooks for this wallet\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the caller's wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet",
        "operationId": "get_webhooks_for_wallet_v1_webhooks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/CloudApiWebhookEventGeneric" },
                  "type": "array",
                  "title": "Response Get Webhooks For Wallet V1 Webhooks Get"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/webhooks/{topic}": {
      "get": {
        "tags": ["webhooks"],
        "summary": "Get Webhooks For Wallet By Topic",
        "description": "**Deprecated**: Fetching bulk webhook events is set to be removed.\nWe recommend monitoring webhook events live, using the SSE endpoint instead, or websockets if preferred.\n\nReturns 100 most recent webhooks for this wallet / topic pair\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the caller's wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet",
        "operationId": "get_webhooks_for_wallet_by_topic_v1_webhooks__topic__get",
        "deprecated": true,
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "basic-messages",
                "connections",
                "proofs",
                "credentials",
                "credentials_indy",
                "credentials_ld",
                "endorsements",
                "oob",
                "revocation",
                "issuer_cred_rev",
                "problem_report"
              ],
              "type": "string",
              "title": "Topic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CloudApiWebhookEventGeneric" },
                  "title": "Response Get Webhooks For Wallet By Topic V1 Webhooks  Topic  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events",
        "description": "Subscribe to server-side events for a specific wallet ID.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_v1_sse__wallet_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events By Topic",
        "description": "Subscribe to server-side events for a specific wallet ID and topic.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_by_Topic_v1_sse__wallet_id___topic__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{desired_state}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To A Wallet Event By Topic And Desired State",
        "description": "Subscribe to server-side events for a specific wallet ID and topic,\nand wait for an event that matches the desired state.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    desired_state: The desired state to be reached.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_a_Wallet_Event_by_Topic_and_Desired_State_v1_sse__wallet_id___topic___desired_state__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          {
            "name": "desired_state",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Desired State" }
          },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{field}/{field_id}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events By Topic And Field",
        "description": "Subscribe to server-side events for a specific wallet ID and topic, and\nfilter the events for payloads containing a specific field and field ID pair.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_by_Topic_and_Field_v1_sse__wallet_id___topic___field___field_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          { "name": "field", "in": "path", "required": true, "schema": { "type": "string", "title": "Field" } },
          { "name": "field_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Field Id" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{field}/{field_id}/{desired_state}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To A Wallet Event By Topic, Field, And Desired State",
        "description": "Wait for a desired state to be reached for some event for this wallet and topic,\nfiltering for payloads that contain `field:field_id`.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events.\n    desired_state: The desired state to be reached.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_a_Wallet_Event_by_Topic__Field__and_Desired_State_v1_sse__wallet_id___topic___field___field_id___desired_state__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          { "name": "field", "in": "path", "required": true, "schema": { "type": "string", "title": "Field" } },
          { "name": "field_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Field Id" } },
          {
            "name": "desired_state",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Desired State" }
          },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CloudApiWebhookEventGeneric": {
        "properties": {
          "wallet_id": { "type": "string", "title": "Wallet Id" },
          "topic": { "type": "string", "title": "Topic" },
          "origin": { "type": "string", "title": "Origin" },
          "group_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Group Id" },
          "payload": { "type": "object", "title": "Payload" }
        },
        "type": "object",
        "required": ["wallet_id", "topic", "origin", "payload"],
        "title": "CloudApiWebhookEventGeneric"
      },
      "CreateTenantRequest": {
        "properties": {
          "wallet_label": {
            "type": "string",
            "title": "Wallet Label",
            "description": "A required alias for the tenant, publicized to other agents when forming a connection. If the tenant is an issuer or verifier, this label will be displayed on the trust registry and must be unique. Allowable special characters: .!@$*()~_-",
            "examples": ["Tenant Label"]
          },
          "wallet_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wallet Name",
            "description": "An optional wallet name. Useful with `get_tenants` to fetch wallets by wallet name. If selected, must be unique. Otherwise, randomly generated.",
            "examples": ["Unique name"]
          },
          "roles": {
            "anyOf": [
              { "items": { "type": "string", "enum": ["issuer", "verifier"] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Roles"
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "extra_settings": {
            "anyOf": [{ "additionalProperties": { "type": "boolean" }, "type": "object" }, { "type": "null" }],
            "title": "Extra Settings",
            "description": "Optional per-tenant settings to configure wallet behaviour for advanced users.",
            "examples": [{ "ACAPY_AUTO_PING_CONNECTION": true }]
          }
        },
        "type": "object",
        "required": ["wallet_label"],
        "title": "CreateTenantRequest"
      },
      "CreateTenantResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token", "examples": ["ey..."] },
          "wallet_id": { "type": "string", "title": "Wallet Id", "examples": ["545135a4-ecbc-4400-8594-bdb74c51c88d"] },
          "wallet_label": { "type": "string", "title": "Wallet Label", "examples": ["Alice"] },
          "wallet_name": { "type": "string", "title": "Wallet Name", "examples": ["SomeWalletName"] },
          "created_at": { "type": "string", "title": "Created At" },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          }
        },
        "type": "object",
        "required": ["access_token", "wallet_id", "wallet_label", "wallet_name", "created_at"],
        "title": "CreateTenantResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": { "items": { "$ref": "#/components/schemas/ValidationError" }, "type": "array", "title": "Detail" }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Tenant": {
        "properties": {
          "wallet_id": { "type": "string", "title": "Wallet Id", "examples": ["545135a4-ecbc-4400-8594-bdb74c51c88d"] },
          "wallet_label": { "type": "string", "title": "Wallet Label", "examples": ["Alice"] },
          "wallet_name": { "type": "string", "title": "Wallet Name", "examples": ["SomeWalletName"] },
          "created_at": { "type": "string", "title": "Created At" },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "group_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Group Id",
            "description": "An optional group identifier. Useful with `get_tenants` to fetch wallets by group id.",
            "examples": ["Some Group Id"]
          }
        },
        "type": "object",
        "required": ["wallet_id", "wallet_label", "wallet_name", "created_at"],
        "title": "Tenant"
      },
      "TenantAuth": {
        "properties": { "access_token": { "type": "string", "title": "Access Token", "examples": ["ey..."] } },
        "type": "object",
        "required": ["access_token"],
        "title": "TenantAuth"
      },
      "UpdateTenantRequest": {
        "properties": {
          "wallet_label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wallet Label",
            "description": "A required alias for the tenant, publicized to other agents when forming a connection. If the tenant is an issuer or verifier, this label will be displayed on the trust registry and must be unique. Allowable special characters: .!@$*()~_-",
            "examples": ["Tenant Label"]
          },
          "roles": {
            "anyOf": [
              { "items": { "type": "string", "enum": ["issuer", "verifier"] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Roles"
          },
          "image_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Image Url",
            "examples": ["https://upload.wikimedia.org/wikipedia/commons/7/70/Example.png"]
          },
          "extra_settings": {
            "anyOf": [{ "additionalProperties": { "type": "boolean" }, "type": "object" }, { "type": "null" }],
            "title": "Extra Settings",
            "description": "Optional per-tenant settings to configure wallet behaviour for advanced users.",
            "examples": [{ "ACAPY_AUTO_PING_CONNECTION": true }]
          }
        },
        "type": "object",
        "title": "UpdateTenantRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "x-api-key" } }
  }
}
