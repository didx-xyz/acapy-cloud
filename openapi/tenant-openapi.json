{
  "openapi": "3.1.0",
  "info": {
    "title": "CloudAPI-Tenant",
    "description": "\nWelcome to the Aries CloudAPI Python project.\n\nIn addition to the traditional HTTP-based endpoints described below, we also offer WebSocket endpoints for\nreal-time interfacing with webhook events.\n\nWebSocket endpoints are authenticated. This means that only users with valid authentication tokens can establish\na WebSocket connection, and they can only subscribe to their own wallet's events. However, Admin users have the\nability to subscribe by topic, or to any wallet in their group.\n\nOur WebSocket endpoints are as follows:\n\n1. `/v1/ws/`: This endpoint allows admins to receive all webhook events for their group.\n\n2. `/v1/ws/{wallet_id}`: This endpoint allows admins (or authenticated users holding this wallet) to receive webhook\nevents for a specific wallet ID.\n\n3. `/v1/ws/{wallet_id}/{topic}`: Similar to above, but subscribing to a specific topic.\n\n4. `/v1/ws/topic/{topic}`: This endpoint allows admins to receive all webhook events on a specific topic (e.g.\n`connections`, `credentials`, `proofs`, `endorsements`).\n\nFor authentication, the WebSocket headers should include `x-api-key`: `<your key>`.\n\nPlease refer to our API documentation for more details about our authentication mechanism, as well as for information\nabout the available topics.\n",
    "version": "0.11.0"
  },
  "paths": {
    "/v1/connections/create-invitation": {
      "post": {
        "tags": ["connections"],
        "summary": "Create Invitation",
        "description": "Create connection invitation.",
        "operationId": "create_invitation_v1_connections_create_invitation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [{ "$ref": "#/components/schemas/CreateInvitation" }, { "type": "null" }],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvitationResult" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/connections/accept-invitation": {
      "post": {
        "tags": ["connections"],
        "summary": "Accept Invitation",
        "description": "Accept connection invitation.\n\nParameters:\n------------\ninvitation: AcceptInvitation\n    the invitation object obtained from create_invitation.",
        "operationId": "accept_invitation_v1_connections_accept_invitation_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AcceptInvitation" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Connection" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/connections": {
      "get": {
        "tags": ["connections"],
        "summary": "Get Connections",
        "description": "Retrieve list of connections.\n\nParameters:\n-----------\n    alias: Optional[str]\n    connection_protocol: Optional[Protocol]: \"connections/1.0\", \"didexchange/1.0\"\n    invitation_key: Optional[str]\n    invitation_msg_id: Optional[str]\n    my_did: Optional[str]\n    state: Optional[State]: \"active\", \"response\", \"request\", \"start\",\n                            \"completed\", \"init\", \"error\", \"invitation\", \"abandoned\"\n    their_did: Optional[str]\n    their_public_did: Optional[str]\n    their_role: Optional[Role]: \"invitee\", \"requester\", \"inviter\", \"responder\"\n\nReturns:\n---------\n    List[Connection]\n        A list of connection objects.",
        "operationId": "get_connections_v1_connections_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" }
          },
          {
            "name": "connection_protocol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "enum": ["connections/1.0", "didexchange/1.0"], "type": "string" }, { "type": "null" }],
              "title": "Connection Protocol"
            }
          },
          {
            "name": "invitation_key",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Invitation Key" }
          },
          {
            "name": "invitation_msg_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Invitation Msg Id" }
          },
          {
            "name": "my_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "My Did" }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "active",
                    "response",
                    "request",
                    "start",
                    "completed",
                    "init",
                    "error",
                    "invitation",
                    "abandoned"
                  ],
                  "type": "string"
                },
                { "type": "null" }
              ],
              "title": "State"
            }
          },
          {
            "name": "their_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Their Did" }
          },
          {
            "name": "their_public_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Their Public Did" }
          },
          {
            "name": "their_role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "enum": ["invitee", "requester", "inviter", "responder"], "type": "string" },
                { "type": "null" }
              ],
              "title": "Their Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Connection" },
                  "title": "Response Get Connections V1 Connections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/connections/{connection_id}": {
      "get": {
        "tags": ["connections"],
        "summary": "Get Connection By Id",
        "description": "Retrieve connection by id.\n\nParameters:\n-----------\nconnection_id: str\n\nReturns:\n---------\nConnection.\n    A connection object.",
        "operationId": "get_connection_by_id_v1_connections__connection_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Connection Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Connection" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "delete": {
        "tags": ["connections"],
        "summary": "Delete Connection By Id",
        "description": "Delete connection by id.\n\nParameters:\n-----------\nconnection_id: str",
        "operationId": "delete_connection_by_id_v1_connections__connection_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Connection Id" }
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/definitions/credentials": {
      "get": {
        "tags": ["definitions"],
        "summary": "Get Credential Definitions",
        "description": "Get agent-created credential definitions\n\nParameters:\n---\n    issuer_did: Optional[str]\n    credential_definition_id: Optional[str]\n    schema_id: Optional[str]\n    schema_issuer_id: Optional[str]\n    schema_version: Optional[str]\n\nReturns:\n---\n    Created credential definitions",
        "operationId": "get_credential_definitions_v1_definitions_credentials_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "issuer_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Issuer Did" }
          },
          {
            "name": "credential_definition_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Credential Definition Id" }
          },
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Id" }
          },
          {
            "name": "schema_issuer_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Issuer Did" }
          },
          {
            "name": "schema_name",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Name" }
          },
          {
            "name": "schema_version",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Version" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CredentialDefinition" },
                  "title": "Response Get Credential Definitions V1 Definitions Credentials Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "post": {
        "tags": ["definitions"],
        "summary": "Create Credential Definition",
        "description": "Create a credential definition.\n\nIf revocation is supported (\"support_revocation\": true), revocation registries will be created.\n\n**NB**: The creation of these revocation registries can take up to one minute.\n\nIt is recommended to use the max (default) revocation registry size of 32767,\nas this will allow for minimal ledger writes (lower cost).\n\nParameters:\n-----------\n    credential_definition: CreateCredentialDefinition\n        Payload for creating a credential definition.\n\nReturns:\n--------\n    Credential Definition",
        "operationId": "create_credential_definition_v1_definitions_credentials_post",
        "security": [{ "APIKeyHeader": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateCredentialDefinition" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialDefinition" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/definitions/credentials/{credential_definition_id}": {
      "get": {
        "tags": ["definitions"],
        "summary": "Get Credential Definition By Id",
        "description": "Get credential definition by id.\n\nParameters:\n-----------\n    credential_definition_id: str\n        credential definition id",
        "operationId": "get_credential_definition_by_id_v1_definitions_credentials__credential_definition_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_definition_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Definition Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialDefinition" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/definitions/schemas": {
      "get": {
        "tags": ["definitions"],
        "summary": "Get Schemas",
        "description": "Retrieve schemas that the current agent created.\n\nParameters:\n-----------\n    schema_id: str (Optional)\n    schema_issuer_did: str (Optional)\n    schema_name: str (Optional)\n    schema_version: str (Optional)\n\nReturns:\n--------\n    son response with created schemas from ledger.",
        "operationId": "get_schemas_v1_definitions_schemas_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "schema_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Id" }
          },
          {
            "name": "schema_issuer_did",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Issuer Did" }
          },
          {
            "name": "schema_name",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Name" }
          },
          {
            "name": "schema_version",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Version" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CredentialSchema" },
                  "title": "Response Get Schemas V1 Definitions Schemas Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "post": {
        "tags": ["definitions"],
        "summary": "Create Schema",
        "description": "Create a new schema.\n\nParameters:\n------------\n    schema: CreateSchema\n        Payload for creating a schema.\n\nReturns:\n--------\n    The response object from creating a schema.",
        "operationId": "create_schema_v1_definitions_schemas_post",
        "security": [{ "APIKeyHeader": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateSchema" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialSchema" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/definitions/schemas/{schema_id}": {
      "get": {
        "tags": ["definitions"],
        "summary": "Get Schema",
        "description": "Retrieve schema by id.\n\nParameters:\n-----------\n    schema_id: str\n        schema id",
        "operationId": "get_schema_v1_definitions_schemas__schema_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "schema_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Schema Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialSchema" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials": {
      "get": {
        "tags": ["issuer"],
        "summary": "Get Credentials",
        "description": "Get a list of credential records.\n\nParameters:\n------------\n    connection_id: str (Optional)\n    role: Role (Optional): \"issuer\", \"holder\"\n    state: State (Optional): \"proposal-sent\", \"proposal-received\", \"offer-sent\", \"offer-received\",\n                             \"request-sent\", \"request-received\", \"credential-issued\", \"credential-received\",\n                             \"credential-revoked\",\"abandoned\", \"done\"\n    thread_id: UUID (Optional)\nReturns:\n--------\n    payload: List[CredentialExchange]\n        A list of credential exchange records",
        "operationId": "get_credentials_v1_issuer_credentials_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "connection_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Connection Id" }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "enum": ["issuer", "holder"], "type": "string" }, { "type": "null" }],
              "title": "Role"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "proposal-sent",
                    "proposal-received",
                    "offer-sent",
                    "offer-received",
                    "request-sent",
                    "request-received",
                    "credential-issued",
                    "credential-received",
                    "credential-revoked",
                    "abandoned",
                    "done",
                    "deleted"
                  ],
                  "type": "string"
                },
                { "type": "null" }
              ],
              "title": "State"
            }
          },
          {
            "name": "thread_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string", "format": "uuid" }, { "type": "null" }], "title": "Thread Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CredentialExchange" },
                  "title": "Response Get Credentials V1 Issuer Credentials Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "post": {
        "tags": ["issuer"],
        "summary": "Send Credential",
        "description": "Create and send a credential. Automating the entire flow.\n\nParameters:\n------------\n    credential: Credential\n        payload for sending a credential\n\nReturns:\n--------\n    payload: CredentialExchange\n        The response object from sending a credential\n    status_code: 200",
        "operationId": "send_credential_v1_issuer_credentials_post",
        "security": [{ "APIKeyHeader": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendCredential" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials/{credential_id}": {
      "get": {
        "tags": ["issuer"],
        "summary": "Get Credential",
        "description": "Get a credential by credential id.\n\nParameters:\n-----------\n    credential_id: str\n        credential identifier\n\nReturns:\n--------\n    payload: CredentialExchange\n        The credential exchange record",
        "operationId": "get_credential_v1_issuer_credentials__credential_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials/create-offer": {
      "post": {
        "tags": ["issuer"],
        "summary": "Create Offer",
        "description": "Create a credential offer not bound to any connection.\n\nParameters:\n------------\n    credential: Credential\n        payload for sending a credential\n\nReturns:\n--------\n    The response object from sending a credential",
        "operationId": "create_offer_v1_issuer_credentials_create_offer_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateOffer" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/issuer/credentials/{credential_exchange_id}": {
      "delete": {
        "tags": ["issuer"],
        "summary": "Remove Credential Exchange Record",
        "description": "Remove a credential exchange record.\n\nParameters:\n-----------\n    credential_exchange_id: str\n        credential exchange record identifier\n\nReturns:\n--------\n    payload: None\n    status_code: 204",
        "operationId": "remove_credential_exchange_record_v1_issuer_credentials__credential_exchange_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_exchange_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Exchange Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials/revoke": {
      "post": {
        "tags": ["issuer"],
        "summary": "Revoke Credential",
        "description": "Revoke a credential.\n\nParameters:\n-----------\n    credential_exchange_id: str\n        The credential exchange id\n\nReturns:\n--------\n    payload: None\n    status_code: 204",
        "operationId": "revoke_credential_v1_issuer_credentials_revoke_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RevokeCredential" } } },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/issuer/credentials/publish-revocations": {
      "post": {
        "tags": ["issuer"],
        "summary": "Publish Revocations",
        "description": "Write batch of pending revocations to ledger.\n\n    If no revocation registry id is provided, all pending revocations\n    will be published.\n\n    If no credential revocation id is provided, all pending revocations\n    for the given revocation registry id will be published.\n\nParameters:\n-----------\n    publish_request: PublishRevocationsRequest\n        An instance of `PublishRevocationsRequest` containing a `revocation_registry_credential_map`. This map\n        is a dictionary where each key is a revocation registry ID and its value is a list of credential\n        revocation IDs to be published. Providing an empty list for a registry ID instructs the system to\n        publish all pending revocations for that ID. An empty dictionary signifies that all pending\n        revocations across all registry IDs should be published.\n\nReturns:\n--------\n    payload: None\n    status_code: 204",
        "operationId": "publish_revocations_v1_issuer_credentials_publish_revocations_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PublishRevocationsRequest" } } },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/issuer/credentials/clear-pending-revocations": {
      "post": {
        "tags": ["issuer"],
        "summary": "Clear Pending Revocations",
        "description": "Clear pending revocations.\n\n    If no revocation registry id is provided, all pending revocations\n    will be cleared.\n\n    If no credential revocation id is provided, all pending revocations\n    for the given revocation registry id will be cleared.\n\nParameters:\n-----------\n    clear_pending_request: ClearPendingRevocationsRequest\n        An instance of `ClearPendingRevocationsRequest` containing a `revocation_registry_credential_map`. This map\n        is a dictionary where each key is a revocation registry ID and its value is a list of credential\n        revocation IDs to be cleared. Providing an empty list for a registry ID instructs the system to\n        clear all pending revocations for that ID. An empty dictionary signifies that all pending\n        revocations across all registry IDs should be cleared.\n\nReturns:\n--------\n    payload: ClearPendingRevocationsResult\n        The revocations that are still pending after the clear request is performed",
        "operationId": "clear_pending_revocations_v1_issuer_credentials_clear_pending_revocations_post",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ClearPendingRevocationsRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ClearPendingRevocationsResult" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/issuer/credentials/revocation/record": {
      "get": {
        "tags": ["issuer"],
        "summary": "Get Credential Revocation Record",
        "description": "Get a credential revocation record.\n\nParameters:\n-----------\n    credential_exchange_id: str\n        The credential exchange id\n    credential_revocation_id: str\n        The credential revocation id\n    revocation_registry_id: str\n        The revocation registry id\n\nReturns:\n--------\n    payload: IssuerCredRevRecord\n        The credential revocation record\n\nRaises:\n-------\n    CloudApiException: 400\n        If credential_exchange_id is not provided BOTH the credential_revocation_id\n        and revocation_registry_id MUST be provided.",
        "operationId": "get_credential_revocation_record_v1_issuer_credentials_revocation_record_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_exchange_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Credential Exchange Id" }
          },
          {
            "name": "credential_revocation_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Credential Revocation Id" }
          },
          {
            "name": "revocation_registry_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Revocation Registry Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IssuerCredRevRecord" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials/{credential_id}/request": {
      "post": {
        "tags": ["issuer"],
        "summary": "Request Credential",
        "description": "Send a credential request.\n\nParameters:\n-----------\n    credential_id: str\n        the credential id",
        "operationId": "request_credential_v1_issuer_credentials__credential_id__request_post",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/issuer/credentials/{credential_id}/store": {
      "post": {
        "tags": ["issuer"],
        "summary": "Store Credential",
        "description": "Store a credential.\n\nParameters:\n-----------\n    credential_id: str\n        credential identifier",
        "operationId": "store_credential_v1_issuer_credentials__credential_id__store_post",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredentialExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/jsonld/sign": {
      "post": {
        "tags": ["jsonld"],
        "summary": "Sign Jsonld",
        "description": "Sign a JSON-LD structure",
        "operationId": "sign_jsonld_v1_jsonld_sign_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JsonLdSignRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/jsonld/verify": {
      "post": {
        "tags": ["jsonld"],
        "summary": "Verify Jsonld",
        "description": "Verify a JSON-LD structure",
        "operationId": "verify_jsonld_v1_jsonld_verify_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JsonLdVerifyRequest" } } },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/messaging/send-message": {
      "post": {
        "tags": ["messaging"],
        "summary": "Send Messages",
        "description": "Send basic message.\n\nParameters:\n-----------\nmessage: Message\n    payload for sending a message\n\nReturns:\n---------\nThe response object obtained when sending a message.",
        "operationId": "send_messages_v1_messaging_send_message_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Message" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/messaging/trust-ping": {
      "post": {
        "tags": ["messaging"],
        "summary": "Send Trust Ping",
        "description": "Trust ping\n\nParameters:\n-----------\ntrustping_msg : TrustPingMsg\n    payload for sending a trust ping\n\nReturns:\n--------\nThe response object obtained when sending a trust ping.",
        "operationId": "send_trust_ping_v1_messaging_trust_ping_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TrustPingMsg" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PingRequestResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/oob/create-invitation": {
      "post": {
        "tags": ["out-of-band"],
        "summary": "Create Oob Invitation",
        "description": "Create connection invitation out-of-band.",
        "operationId": "create_oob_invitation_v1_oob_create_invitation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [{ "$ref": "#/components/schemas/CreateOobInvitation" }, { "type": "null" }],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/InvitationRecord" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/oob/accept-invitation": {
      "post": {
        "tags": ["out-of-band"],
        "summary": "Accept Oob Invitation",
        "description": "Receive out-of-band invitation.",
        "operationId": "accept_oob_invitation_v1_oob_accept_invitation_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AcceptOobInvitation" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OobRecord" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/oob/connect-public-did": {
      "post": {
        "tags": ["out-of-band"],
        "summary": "Connect To Public Did",
        "description": "Connect using public DID as implicit invitation.\n\nParameters:\n---\ntheir_public_did: str\n    Public DID of target entity\n\nbody: Optional[CreateConnFromDIDRequest]\n    Additional request info\n\nReturns:\n---\nConnection\n    The connection record",
        "operationId": "connect_to_public_did_v1_oob_connect_public_did_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConnectToPublicDid" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Connection" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/verifier/create-request": {
      "post": {
        "tags": ["verifier"],
        "summary": "Create Proof Request",
        "description": "Create proof request.\n\nParameters:\n-----------\nbody: CreateProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record",
        "operationId": "create_proof_request_v1_verifier_create_request_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateProofRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PresentationExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/verifier/send-request": {
      "post": {
        "tags": ["verifier"],
        "summary": "Send Proof Request",
        "description": "Send proof request.\n\nParameters:\n-----------\nbody: SendProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record",
        "operationId": "send_proof_request_v1_verifier_send_request_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SendProofRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PresentationExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/verifier/accept-request": {
      "post": {
        "tags": ["verifier"],
        "summary": "Accept Proof Request",
        "description": "Accept proof request.\n\nParameters:\n-----------\nbody: AcceptProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record",
        "operationId": "accept_proof_request_v1_verifier_accept_request_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AcceptProofRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PresentationExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/verifier/reject-request": {
      "post": {
        "tags": ["verifier"],
        "summary": "Reject Proof Request",
        "description": "Reject proof request.\n\nParameters:\n-----------\nbody: RejectProofRequest\n    The proof request object\n\nReturns:\n--------\nNone",
        "operationId": "reject_proof_request_v1_verifier_reject_request_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RejectProofRequest" } } },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/verifier/proofs": {
      "get": {
        "tags": ["verifier"],
        "summary": "Get Proof Records",
        "description": "Get all proof records\n\nParameters:\n----------\n    connection_id: Optional[str]\n    role: Optional[Role]: \"prover\", \"verifier\"\n    state: Optional[State]: \"abandoned\", \"done\", \"presentation-received\",\n                            \"presentation-sent\", \"proposal-received\", \"proposal-sent\",\n                            \"request-received\", \"request-sent\"\n    thread_id: Optional[UUID]\n\nReturns:\n--------\npresentation_exchange_list: [PresentationExchange]\n    The list of presentation exchange records",
        "operationId": "get_proof_records_v1_verifier_proofs_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "connection_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Connection Id" }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "enum": ["prover", "verifier"], "type": "string" }, { "type": "null" }],
              "title": "Role"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "abandoned",
                    "done",
                    "presentation-received",
                    "presentation-sent",
                    "proposal-received",
                    "proposal-sent",
                    "request-received",
                    "request-sent",
                    "deleted"
                  ],
                  "type": "string"
                },
                { "type": "null" }
              ],
              "title": "State"
            }
          },
          {
            "name": "thread_id",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string", "format": "uuid" }, { "type": "null" }], "title": "Thread Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PresentationExchange" },
                  "title": "Response Get Proof Records V1 Verifier Proofs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/verifier/proofs/{proof_id}": {
      "get": {
        "tags": ["verifier"],
        "summary": "Get Proof Record",
        "description": "Get a specific proof record\n\nParameters:\n----------\nproof_id: str\n    The proof ID\n\nReturns:\n--------\npresentation_exchange_record: PresentationExchange\n    The of presentation exchange record for the proof ID",
        "operationId": "get_proof_record_v1_verifier_proofs__proof_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "proof_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Proof Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PresentationExchange" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "delete": {
        "tags": ["verifier"],
        "summary": "Delete Proof",
        "description": "Delete proofs record for proof_id (pres_ex_id including prepending version hint 'v1-' or 'v2-')\n\nParameters:\n----------\nproof_id: str\n    The proof ID - starting with v1- or v2-\n\nReturns:\n--------\nNone",
        "operationId": "delete_proof_v1_verifier_proofs__proof_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "proof_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Proof Id" } }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/verifier/proofs/{proof_id}/credentials": {
      "get": {
        "tags": ["verifier"],
        "summary": "Get Credentials By Proof Id",
        "description": "Get matching credentials for presentation exchange\n\nParameters:\n----------\nproof_id: str\n     The proof ID\n\nReturns:\n--------\npresentation_exchange_list: [IndyCredPrecis]\n    The list of Indy presentation credentials",
        "operationId": "get_credentials_by_proof_id_v1_verifier_proofs__proof_id__credentials_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "proof_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Proof Id" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/IndyCredPrecis" },
                  "title": "Response Get Credentials By Proof Id V1 Verifier Proofs  Proof Id  Credentials Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials": {
      "get": {
        "tags": ["wallet"],
        "summary": "List Credentials",
        "description": "Fetch a list of credentials from the wallet.",
        "operationId": "list_credentials_v1_wallet_credentials_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Count" }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Start" }
          },
          {
            "name": "wql",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Wql" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredInfoList" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials/{credential_id}": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get Credential Record",
        "description": "Fetch a specific credential by ID.",
        "operationId": "get_credential_record_v1_wallet_credentials__credential_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/IndyCredInfo" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "delete": {
        "tags": ["wallet"],
        "summary": "Delete Credential",
        "description": "Remove a specific credential from the wallet by ID.",
        "operationId": "delete_credential_v1_wallet_credentials__credential_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials/{credential_id}/mime-types": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get Credential Mime Types",
        "description": "Retrieve attribute MIME types of a specific credential by ID.",
        "operationId": "get_credential_mime_types_v1_wallet_credentials__credential_id__mime_types_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AttributeMimeTypesResult" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials/{credential_id}/revocation-status": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get Credential Revocation Status",
        "description": "Query the revocation status of a specific credential by ID.",
        "operationId": "get_credential_revocation_status_v1_wallet_credentials__credential_id__revocation_status_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          },
          {
            "name": "from_",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "From " }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "To" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CredRevokedResult" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials/w3c": {
      "get": {
        "tags": ["wallet"],
        "summary": "List W3C Credentials",
        "description": "Fetch a list of W3C credentials from the wallet.",
        "operationId": "list_w3c_credentials_v1_wallet_credentials_w3c_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Count" }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Start" }
          },
          {
            "name": "wql",
            "in": "query",
            "required": false,
            "schema": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Wql" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [{ "$ref": "#/components/schemas/W3CCredentialsListRequest" }, { "type": "null" }],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/VCRecordList" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/credentials/w3c/{credential_id}": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get W3C Credential",
        "description": "Fetch a specific W3C credential by ID.",
        "operationId": "get_w3c_credential_v1_wallet_credentials_w3c__credential_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/VCRecord" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "delete": {
        "tags": ["wallet"],
        "summary": "Delete W3C Credential",
        "description": "Remove a specific W3C credential from the wallet by ID.",
        "operationId": "delete_w3c_credential_v1_wallet_credentials_w3c__credential_id__delete",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "credential_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Credential Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/dids": {
      "get": {
        "tags": ["wallet"],
        "summary": "List Dids",
        "description": "Retrieve list of DIDs.",
        "operationId": "list_dids_v1_wallet_dids_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/DID" },
                  "type": "array",
                  "title": "Response List Dids V1 Wallet Dids Get"
                }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      },
      "post": {
        "tags": ["wallet"],
        "summary": "Create Did",
        "description": "Create Local DID.",
        "operationId": "create_did_v1_wallet_dids_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [{ "$ref": "#/components/schemas/DIDCreate" }, { "type": "null" }],
                "title": "Did Create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DID" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/wallet/dids/public": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get Public Did",
        "description": "Fetch the current public DID.",
        "operationId": "get_public_did_v1_wallet_dids_public_get",
        "security": [{ "APIKeyHeader": [] }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DID" } } }
          }
        }
      },
      "put": {
        "tags": ["wallet"],
        "summary": "Set Public Did",
        "description": "Set the current public DID.",
        "operationId": "set_public_did_v1_wallet_dids_public_put",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "did", "in": "query", "required": true, "schema": { "type": "string", "title": "Did" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DID" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/dids/{did}/rotate-keypair": {
      "patch": {
        "tags": ["wallet"],
        "summary": "Rotate Keypair",
        "operationId": "rotate_keypair_v1_wallet_dids__did__rotate_keypair_patch",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "did", "in": "path", "required": true, "schema": { "type": "string", "title": "Did" } }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/dids/{did}/endpoint": {
      "get": {
        "tags": ["wallet"],
        "summary": "Get Did Endpoint",
        "description": "Get DID endpoint.",
        "operationId": "get_did_endpoint_v1_wallet_dids__did__endpoint_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "did", "in": "path", "required": true, "schema": { "type": "string", "title": "Did" } }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DIDEndpoint" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "post": {
        "tags": ["wallet"],
        "summary": "Set Did Endpoint",
        "description": "Update Endpoint in wallet and on ledger if posted to it.",
        "operationId": "set_did_endpoint_v1_wallet_dids__did__endpoint_post",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "did", "in": "path", "required": true, "schema": { "type": "string", "title": "Did" } }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SetDidEndpointRequest" } } }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/wallet/jws/sign": {
      "post": {
        "tags": ["wallet"],
        "summary": "Sign JWS",
        "description": "Sign JSON Web Signature (JWS)\n\nSee https://www.rfc-editor.org/rfc/rfc7515.html for the JWS spec.",
        "operationId": "sign_jws_v1_wallet_jws_sign_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWSCreateRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWSCreateResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/wallet/jws/verify": {
      "post": {
        "tags": ["wallet"],
        "summary": "Verify JWS",
        "description": "Verify JSON Web Signature (JWS)\n\nSee https://www.rfc-editor.org/rfc/rfc7515.html for the JWS spec.",
        "operationId": "verify_jws_v1_wallet_jws_verify_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWSVerifyRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JWSVerifyResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/wallet/sd-jws/sign": {
      "post": {
        "tags": ["wallet"],
        "summary": "Sign SD-JWS",
        "description": "Sign Select Disclosure for JWS (SD-JWS)\n\nSee https://www.ietf.org/archive/id/draft-ietf-oauth-selective-disclosure-jwt-07.html for the SD-JWT / SD-JWS spec.",
        "operationId": "sign_sd_jws_v1_wallet_sd_jws_sign_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SDJWSCreateRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SDJWSCreateResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/wallet/sd-jws/verify": {
      "post": {
        "tags": ["wallet"],
        "summary": "Verify SD-JWS",
        "description": "Verify Select Disclosure for JWS (SD-JWS)\n\nSee https://www.ietf.org/archive/id/draft-ietf-oauth-selective-disclosure-jwt-07.html for the SD-JWT / SD-JWS spec.",
        "operationId": "verify_sd_jws_v1_wallet_sd_jws_verify_post",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SDJWSVerifyRequest" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SDJWSVerifyResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/webhooks": {
      "get": {
        "tags": ["webhooks"],
        "summary": "Get Webhooks For Wallet",
        "description": "**Deprecated**: Fetching bulk webhook events is set to be removed.\nWe recommend monitoring webhook events live, using the SSE endpoint instead, or websockets if preferred.\n\nReturns 100 most recent webhooks for this wallet\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the caller's wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet",
        "operationId": "get_webhooks_for_wallet_v1_webhooks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/CloudApiWebhookEventGeneric" },
                  "type": "array",
                  "title": "Response Get Webhooks For Wallet V1 Webhooks Get"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/webhooks/{topic}": {
      "get": {
        "tags": ["webhooks"],
        "summary": "Get Webhooks For Wallet By Topic",
        "description": "**Deprecated**: Fetching bulk webhook events is set to be removed.\nWe recommend monitoring webhook events live, using the SSE endpoint instead, or websockets if preferred.\n\nReturns 100 most recent webhooks for this wallet / topic pair\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the caller's wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet",
        "operationId": "get_webhooks_for_wallet_by_topic_v1_webhooks__topic__get",
        "deprecated": true,
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "topic",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "basic-messages",
                "connections",
                "proofs",
                "credentials",
                "credentials_indy",
                "credentials_ld",
                "endorsements",
                "oob",
                "revocation",
                "issuer_cred_rev",
                "problem_report"
              ],
              "type": "string",
              "title": "Topic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CloudApiWebhookEventGeneric" },
                  "title": "Response Get Webhooks For Wallet By Topic V1 Webhooks  Topic  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events",
        "description": "Subscribe to server-side events for a specific wallet ID.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_v1_sse__wallet_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events By Topic",
        "description": "Subscribe to server-side events for a specific wallet ID and topic.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_by_Topic_v1_sse__wallet_id___topic__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{desired_state}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To A Wallet Event By Topic And Desired State",
        "description": "Subscribe to server-side events for a specific wallet ID and topic,\nand wait for an event that matches the desired state.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    desired_state: The desired state to be reached.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_a_Wallet_Event_by_Topic_and_Desired_State_v1_sse__wallet_id___topic___desired_state__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          {
            "name": "desired_state",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Desired State" }
          },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{field}/{field_id}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To Wallet Events By Topic And Field",
        "description": "Subscribe to server-side events for a specific wallet ID and topic, and\nfilter the events for payloads containing a specific field and field ID pair.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_Wallet_Events_by_Topic_and_Field_v1_sse__wallet_id___topic___field___field_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          { "name": "field", "in": "path", "required": true, "schema": { "type": "string", "title": "Field" } },
          { "name": "field_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Field Id" } },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/sse/{wallet_id}/{topic}/{field}/{field_id}/{desired_state}": {
      "get": {
        "tags": ["sse"],
        "summary": "Subscribe To A Wallet Event By Topic, Field, And Desired State",
        "description": "Wait for a desired state to be reached for some event for this wallet and topic,\nfiltering for payloads that contain `field:field_id`.\n\nParameters:\n-----------\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events.\n    desired_state: The desired state to be reached.\n    look_back: Specifies the look back window in seconds, to include events before connection established.",
        "operationId": "Subscribe_to_a_Wallet_Event_by_Topic__Field__and_Desired_State_v1_sse__wallet_id___topic___field___field_id___desired_state__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          { "name": "wallet_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Wallet Id" } },
          { "name": "topic", "in": "path", "required": true, "schema": { "type": "string", "title": "Topic" } },
          { "name": "field", "in": "path", "required": true, "schema": { "type": "string", "title": "Field" } },
          { "name": "field_id", "in": "path", "required": true, "schema": { "type": "string", "title": "Field Id" } },
          {
            "name": "desired_state",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Desired State" }
          },
          {
            "name": "look_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 30.0,
              "minimum": 0.0,
              "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned.",
              "default": 30.0,
              "title": "Look Back"
            },
            "description": "The duration in seconds to look back in time, defining the window of additional webhook events that should be included, prior to the initial connection of the stream. The default value will include events up to 30.0 seconds ago, and represents the maximum value for this setting. Setting to 0 means only events after the connection is established will be returned."
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptInvitation": {
        "properties": {
          "alias": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" },
          "invitation": { "$ref": "#/components/schemas/ReceiveInvitationRequest" }
        },
        "type": "object",
        "required": ["invitation"],
        "title": "AcceptInvitation"
      },
      "AcceptOobInvitation": {
        "properties": {
          "alias": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" },
          "use_existing_connection": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Use Existing Connection"
          },
          "invitation": { "$ref": "#/components/schemas/InvitationMessage-Input" }
        },
        "type": "object",
        "required": ["invitation"],
        "title": "AcceptOobInvitation"
      },
      "AcceptProofRequest": {
        "properties": {
          "proof_id": { "type": "string", "title": "Proof Id" },
          "type": { "allOf": [{ "$ref": "#/components/schemas/ProofRequestType" }], "default": "indy" },
          "indy_presentation_spec": { "anyOf": [{ "$ref": "#/components/schemas/IndyPresSpec" }, { "type": "null" }] },
          "dif_presentation_spec": { "anyOf": [{ "$ref": "#/components/schemas/DIFPresSpec" }, { "type": "null" }] },
          "save_exchange_record": {
            "type": "boolean",
            "title": "Save Exchange Record",
            "description": "Whether the presentation exchange record should be saved on completion",
            "default": false
          }
        },
        "type": "object",
        "required": ["proof_id"],
        "title": "AcceptProofRequest"
      },
      "AttachDecorator-Input": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Attachment identifier"
          },
          "byte_count": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Byte Count",
            "description": "Byte count of data included by reference"
          },
          "data": { "$ref": "#/components/schemas/AttachDecoratorData-Input" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "Human-readable description of content"
          },
          "filename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Filename",
            "description": "File name"
          },
          "lastmod_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Lastmod Time",
            "description": "Hint regarding last modification datetime, in ISO-8601 format"
          },
          "mime-type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Mime-Type",
            "description": "MIME type"
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "AttachDecorator",
        "description": "AttachDecorator"
      },
      "AttachDecorator-Output": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Attachment identifier"
          },
          "byte_count": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Byte Count",
            "description": "Byte count of data included by reference"
          },
          "data": { "$ref": "#/components/schemas/AttachDecoratorData-Output" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description",
            "description": "Human-readable description of content"
          },
          "filename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Filename",
            "description": "File name"
          },
          "lastmod_time": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Lastmod Time",
            "description": "Hint regarding last modification datetime, in ISO-8601 format"
          },
          "mime-type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Mime-Type",
            "description": "MIME type"
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "AttachDecorator",
        "description": "AttachDecorator"
      },
      "AttachDecoratorData-Input": {
        "properties": {
          "base64": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Base64",
            "description": "Base64-encoded data"
          },
          "json": {
            "anyOf": [{ "type": "object" }, { "items": { "type": "object" }, "type": "array" }, { "type": "null" }],
            "title": "Json",
            "description": "JSON-serialized data"
          },
          "jws": { "anyOf": [{ "$ref": "#/components/schemas/AttachDecoratorDataJWS-Input" }, { "type": "null" }] },
          "links": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Links",
            "description": "List of hypertext links to data"
          },
          "sha256": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sha256",
            "description": "SHA256 hash (binhex encoded) of content"
          }
        },
        "type": "object",
        "title": "AttachDecoratorData",
        "description": "AttachDecoratorData"
      },
      "AttachDecoratorData-Output": {
        "properties": {
          "base64": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Base64",
            "description": "Base64-encoded data"
          },
          "json": {
            "anyOf": [{ "type": "object" }, { "items": { "type": "object" }, "type": "array" }, { "type": "null" }],
            "title": "Json",
            "description": "JSON-serialized data"
          },
          "jws": { "anyOf": [{ "$ref": "#/components/schemas/AttachDecoratorDataJWS-Output" }, { "type": "null" }] },
          "links": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Links",
            "description": "List of hypertext links to data"
          },
          "sha256": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sha256",
            "description": "SHA256 hash (binhex encoded) of content"
          }
        },
        "type": "object",
        "title": "AttachDecoratorData",
        "description": "AttachDecoratorData"
      },
      "AttachDecoratorData1JWS": {
        "properties": {
          "header": { "$ref": "#/components/schemas/AttachDecoratorDataJWSHeader" },
          "protected": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Protected",
            "description": "protected JWS header"
          },
          "signature": { "type": "string", "title": "Signature", "description": "signature" }
        },
        "type": "object",
        "required": ["header", "signature"],
        "title": "AttachDecoratorData1JWS",
        "description": "AttachDecoratorData1JWS"
      },
      "AttachDecoratorDataJWS-Input": {
        "properties": {
          "header": { "anyOf": [{ "$ref": "#/components/schemas/AttachDecoratorDataJWSHeader" }, { "type": "null" }] },
          "protected": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Protected",
            "description": "protected JWS header"
          },
          "signature": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Signature",
            "description": "signature"
          },
          "signatures": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/AttachDecoratorData1JWS" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Signatures",
            "description": "List of signatures"
          }
        },
        "type": "object",
        "title": "AttachDecoratorDataJWS",
        "description": "AttachDecoratorDataJWS"
      },
      "AttachDecoratorDataJWS-Output": {
        "properties": {
          "header": { "anyOf": [{ "$ref": "#/components/schemas/AttachDecoratorDataJWSHeader" }, { "type": "null" }] },
          "protected": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Protected",
            "description": "protected JWS header"
          },
          "signature": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Signature",
            "description": "signature"
          },
          "signatures": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/AttachDecoratorData1JWS" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Signatures",
            "description": "List of signatures"
          }
        },
        "type": "object",
        "title": "AttachDecoratorDataJWS",
        "description": "AttachDecoratorDataJWS"
      },
      "AttachDecoratorDataJWSHeader": {
        "properties": {
          "kid": { "type": "string", "title": "Kid", "description": "Key identifier, in W3C did:key or DID URL format" }
        },
        "type": "object",
        "required": ["kid"],
        "title": "AttachDecoratorDataJWSHeader",
        "description": "AttachDecoratorDataJWSHeader"
      },
      "AttachmentDef": {
        "properties": {
          "id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Id",
            "description": "Attachment identifier"
          },
          "type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Type",
            "description": "Attachment type"
          }
        },
        "type": "object",
        "title": "AttachmentDef",
        "description": "AttachmentDef"
      },
      "AttributeMimeTypesResult": {
        "properties": {
          "results": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Results"
          }
        },
        "type": "object",
        "title": "AttributeMimeTypesResult",
        "description": "AttributeMimeTypesResult"
      },
      "ClaimFormat": {
        "properties": {
          "jwt": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Jwt" },
          "jwt_vc": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Jwt Vc" },
          "jwt_vp": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Jwt Vp" },
          "ldp": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Ldp" },
          "ldp_vc": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Ldp Vc" },
          "ldp_vp": { "anyOf": [{ "type": "string" }, {}, { "type": "null" }], "title": "Ldp Vp" }
        },
        "type": "object",
        "title": "ClaimFormat",
        "description": "ClaimFormat"
      },
      "ClearPendingRevocationsRequest": {
        "properties": {
          "revocation_registry_credential_map": {
            "additionalProperties": { "items": { "type": "string" }, "type": "array" },
            "type": "object",
            "title": "Revocation Registry Credential Map",
            "description": "A map of revocation registry IDs to lists of credential revocation IDs for which pending revocationsshould be cleared. Providing an empty list for a registry ID clears all pending revocations for that ID. An empty dictionary signifies that the action should be applied to clear all pending revocations across all registry IDs.",
            "default": {}
          }
        },
        "type": "object",
        "title": "ClearPendingRevocationsRequest"
      },
      "ClearPendingRevocationsResult": {
        "properties": {
          "revocation_registry_credential_map": {
            "additionalProperties": { "items": { "type": "string" }, "type": "array" },
            "type": "object",
            "title": "Revocation Registry Credential Map",
            "description": "The resulting revocations that are still pending after a clear-pending request has been completed."
          }
        },
        "type": "object",
        "required": ["revocation_registry_credential_map"],
        "title": "ClearPendingRevocationsResult"
      },
      "CloudApiWebhookEventGeneric": {
        "properties": {
          "wallet_id": { "type": "string", "title": "Wallet Id" },
          "topic": { "type": "string", "title": "Topic" },
          "origin": { "type": "string", "title": "Origin" },
          "group_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Group Id" },
          "payload": { "type": "object", "title": "Payload" }
        },
        "type": "object",
        "required": ["wallet_id", "topic", "origin", "payload"],
        "title": "CloudApiWebhookEventGeneric"
      },
      "ConnectToPublicDid": {
        "properties": { "public_did": { "type": "string", "title": "Public Did" } },
        "type": "object",
        "required": ["public_did"],
        "title": "ConnectToPublicDid"
      },
      "Connection": {
        "properties": {
          "alias": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" },
          "connection_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Connection Id" },
          "connection_protocol": {
            "anyOf": [{ "type": "string", "enum": ["connections/1.0", "didexchange/1.0"] }, { "type": "null" }],
            "title": "Connection Protocol"
          },
          "created_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Created At" },
          "error_msg": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error Msg" },
          "invitation_key": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Invitation Key" },
          "invitation_mode": {
            "anyOf": [{ "type": "string", "enum": ["once", "multi", "static"] }, { "type": "null" }],
            "title": "Invitation Mode"
          },
          "invitation_msg_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Invitation Msg Id" },
          "my_did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "My Did" },
          "state": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "State" },
          "their_did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Their Did" },
          "their_label": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Their Label" },
          "their_public_did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Their Public Did" },
          "their_role": {
            "anyOf": [
              { "type": "string", "enum": ["invitee", "requester", "inviter", "responder"] },
              { "type": "null" }
            ],
            "title": "Their Role"
          },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" }
        },
        "type": "object",
        "title": "Connection"
      },
      "ConnectionInvitation": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Message identifier"
          },
          "@type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Type",
            "description": "Message type"
          },
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "description": "DID for connection invitation"
          },
          "imageUrl": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Imageurl",
            "description": "Optional image URL for connection invitation"
          },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label",
            "description": "Optional label for connection invitation"
          },
          "recipientKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Recipientkeys",
            "description": "List of recipient keys"
          },
          "routingKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Routingkeys",
            "description": "List of routing keys"
          },
          "serviceEndpoint": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serviceendpoint",
            "description": "Service endpoint at which to reach this agent"
          }
        },
        "type": "object",
        "title": "ConnectionInvitation",
        "description": "ConnectionInvitation"
      },
      "Constraints": {
        "properties": {
          "fields": {
            "anyOf": [{ "items": { "$ref": "#/components/schemas/DIFField" }, "type": "array" }, { "type": "null" }],
            "title": "Fields"
          },
          "is_holder": {
            "anyOf": [{ "items": { "$ref": "#/components/schemas/DIFHolder" }, "type": "array" }, { "type": "null" }],
            "title": "Is Holder"
          },
          "limit_disclosure": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Limit Disclosure",
            "description": "LimitDisclosure"
          },
          "status_active": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Status Active" },
          "status_revoked": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Status Revoked" },
          "status_suspended": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Status Suspended" },
          "subject_is_issuer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Subject Is Issuer",
            "description": "SubjectIsIssuer"
          }
        },
        "type": "object",
        "title": "Constraints",
        "description": "Constraints"
      },
      "CreateCredentialDefinition": {
        "properties": {
          "tag": { "type": "string", "title": "Tag", "examples": ["default"] },
          "schema_id": {
            "type": "string",
            "title": "Schema Id",
            "examples": ["CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3"]
          },
          "support_revocation": { "type": "boolean", "title": "Support Revocation", "default": false },
          "revocation_registry_size": {
            "type": "integer",
            "title": "Revocation Registry Size",
            "description": "If revocation support is requested, this specifies the maximum number of revocations to be stored by the registry. Default value is equal to the maximum: 32767.",
            "default": 32767
          }
        },
        "type": "object",
        "required": ["tag", "schema_id"],
        "title": "CreateCredentialDefinition"
      },
      "CreateInvitation": {
        "properties": {
          "alias": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" },
          "multi_use": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Multi Use" },
          "use_public_did": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Use Public Did" }
        },
        "type": "object",
        "title": "CreateInvitation"
      },
      "CreateOffer": {
        "properties": {
          "type": { "allOf": [{ "$ref": "#/components/schemas/CredentialType" }], "default": "indy" },
          "indy_credential_detail": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyCredential" }, { "type": "null" }]
          },
          "ld_credential_detail": { "anyOf": [{ "$ref": "#/components/schemas/LDProofVCDetail" }, { "type": "null" }] },
          "save_exchange_record": {
            "type": "boolean",
            "title": "Save Exchange Record",
            "description": "Whether the credential exchange record should be saved on completion",
            "default": false
          },
          "protocol_version": {
            "allOf": [{ "$ref": "#/components/schemas/IssueCredentialProtocolVersion" }],
            "default": "v2"
          }
        },
        "type": "object",
        "title": "CreateOffer"
      },
      "CreateOobInvitation": {
        "properties": {
          "alias": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alias" },
          "multi_use": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Multi Use" },
          "use_public_did": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Use Public Did" },
          "attachments": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/AttachmentDef" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Attachments"
          },
          "handshake_protocols": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Handshake Protocols"
          },
          "create_connection": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Create Connection" }
        },
        "type": "object",
        "title": "CreateOobInvitation"
      },
      "CreateProofRequest": {
        "properties": {
          "protocol_version": {
            "allOf": [{ "$ref": "#/components/schemas/PresentProofProtocolVersion" }],
            "default": "v2"
          },
          "comment": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Comment" },
          "trace": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Trace" },
          "type": { "allOf": [{ "$ref": "#/components/schemas/ProofRequestType" }], "default": "indy" },
          "indy_proof_request": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequest-Input" }, { "type": "null" }]
          },
          "dif_proof_request": { "anyOf": [{ "$ref": "#/components/schemas/DIFProofRequest" }, { "type": "null" }] },
          "save_exchange_record": {
            "type": "boolean",
            "title": "Save Exchange Record",
            "description": "Whether the presentation exchange record should be saved on completion",
            "default": false
          }
        },
        "type": "object",
        "title": "CreateProofRequest"
      },
      "CreateSchema": {
        "properties": {
          "name": { "type": "string", "title": "Name", "examples": ["test_schema"] },
          "version": { "type": "string", "title": "Version", "examples": ["0.3.0"] },
          "attribute_names": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Attribute Names",
            "examples": [["speed"]]
          }
        },
        "type": "object",
        "required": ["name", "version", "attribute_names"],
        "title": "CreateSchema"
      },
      "CredInfoList": {
        "properties": {
          "results": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/IndyCredInfo" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Results"
          }
        },
        "type": "object",
        "title": "CredInfoList",
        "description": "CredInfoList"
      },
      "CredRevokedResult": {
        "properties": {
          "revoked": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Revoked",
            "description": "Whether credential is revoked on the ledger"
          }
        },
        "type": "object",
        "title": "CredRevokedResult",
        "description": "CredRevokedResult"
      },
      "Credential": {
        "properties": {
          "@context": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "object" }] },
            "type": "array",
            "title": "@Context",
            "description": "The JSON-LD context of the credential"
          },
          "credentialSubject": { "anyOf": [{ "type": "string" }, {}], "title": "Credentialsubject" },
          "expirationDate": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Expirationdate",
            "description": "The expiration date"
          },
          "id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Id" },
          "issuanceDate": { "type": "string", "title": "Issuancedate", "description": "The issuance date" },
          "issuer": {
            "anyOf": [{ "type": "string" }, { "type": "object" }],
            "title": "Issuer",
            "description": "The JSON-LD Verifiable Credential Issuer. Either string of object with id field."
          },
          "proof": { "anyOf": [{ "$ref": "#/components/schemas/LinkedDataProof" }, { "type": "null" }] },
          "type": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Type",
            "description": "The JSON-LD type of the credential"
          }
        },
        "type": "object",
        "required": ["@context", "credentialSubject", "issuanceDate", "issuer", "type"],
        "title": "Credential",
        "description": "Credential"
      },
      "CredentialDefinition": {
        "properties": {
          "id": { "type": "string", "title": "Id", "examples": ["5Q1Zz9foMeAA8Q7mrmzCfZ:3:CL:7:default"] },
          "tag": { "type": "string", "title": "Tag", "examples": ["default"] },
          "schema_id": {
            "type": "string",
            "title": "Schema Id",
            "examples": ["CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3"]
          }
        },
        "type": "object",
        "required": ["id", "tag", "schema_id"],
        "title": "CredentialDefinition"
      },
      "CredentialExchange": {
        "properties": {
          "attributes": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Attributes"
          },
          "connection_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Connection Id" },
          "created_at": { "type": "string", "title": "Created At" },
          "credential_definition_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Credential Definition Id"
          },
          "credential_id": { "type": "string", "title": "Credential Id" },
          "did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Did" },
          "error_msg": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error Msg" },
          "protocol_version": { "$ref": "#/components/schemas/IssueCredentialProtocolVersion" },
          "role": { "type": "string", "enum": ["issuer", "holder"], "title": "Role" },
          "schema_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Schema Id" },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "proposal-sent",
                  "proposal-received",
                  "offer-sent",
                  "offer-received",
                  "request-sent",
                  "request-received",
                  "credential-issued",
                  "credential-received",
                  "credential-revoked",
                  "abandoned",
                  "done",
                  "deleted"
                ]
              },
              { "type": "null" }
            ],
            "title": "State"
          },
          "thread_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Thread Id" },
          "type": { "type": "string", "title": "Type", "default": "indy" },
          "updated_at": { "type": "string", "title": "Updated At" }
        },
        "type": "object",
        "required": ["created_at", "credential_id", "protocol_version", "role", "updated_at"],
        "title": "CredentialExchange"
      },
      "CredentialSchema": {
        "properties": {
          "id": { "type": "string", "title": "Id", "examples": ["CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3"] },
          "name": { "type": "string", "title": "Name", "examples": ["test_schema"] },
          "version": { "type": "string", "title": "Version", "examples": ["0.3.0"] },
          "attribute_names": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Attribute Names",
            "examples": [["speed"]]
          }
        },
        "type": "object",
        "required": ["id", "name", "version", "attribute_names"],
        "title": "CredentialSchema"
      },
      "CredentialStatusOptions": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Credential status method type to use for the credential. Should match status method registered in the Verifiable Credential Extension Registry"
          }
        },
        "type": "object",
        "required": ["type"],
        "title": "CredentialStatusOptions",
        "description": "CredentialStatusOptions"
      },
      "CredentialType": { "type": "string", "enum": ["indy", "jwt", "ld_proof"], "title": "CredentialType" },
      "DID": {
        "properties": {
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "description": "DID of interest"
          },
          "key_type": {
            "anyOf": [{ "type": "string", "enum": ["ed25519", "bls12381g2"] }, { "type": "null" }],
            "title": "Key Type",
            "description": "Key type associated with the DID"
          },
          "method": {
            "anyOf": [{ "type": "string", "enum": ["sov", "key"] }, { "type": "null" }],
            "title": "Method",
            "description": "Did method associated with the DID"
          },
          "posture": {
            "anyOf": [{ "type": "string", "enum": ["public", "posted", "wallet_only"] }, { "type": "null" }],
            "title": "Posture",
            "description": "Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet"
          },
          "verkey": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Verkey",
            "description": "Public verification key"
          }
        },
        "type": "object",
        "title": "DID",
        "description": "DID"
      },
      "DIDCreate": {
        "properties": {
          "method": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Method",
            "description": "Method for the requested DID.Supported methods are 'key', 'sov', and any other registered method."
          },
          "options": { "anyOf": [{ "$ref": "#/components/schemas/DIDCreateOptions" }, { "type": "null" }] },
          "seed": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Seed",
            "description": "Optional seed to use for DID, Must be enabled in configuration before use."
          }
        },
        "type": "object",
        "title": "DIDCreate",
        "description": "DIDCreate"
      },
      "DIDCreateOptions": {
        "properties": {
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "description": "Specify final value of the did (including did:<method>: prefix)if the method supports or requires so."
          },
          "key_type": {
            "type": "string",
            "title": "Key Type",
            "description": "Key type to use for the DID keypair. Validated with the chosen DID method's supported key types."
          }
        },
        "type": "object",
        "required": ["key_type"],
        "title": "DIDCreateOptions",
        "description": "DIDCreateOptions"
      },
      "DIDEndpoint": {
        "properties": {
          "did": { "type": "string", "title": "Did", "description": "DID of interest" },
          "endpoint": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Endpoint",
            "description": "Endpoint to set (omit to delete)"
          }
        },
        "type": "object",
        "required": ["did"],
        "title": "DIDEndpoint",
        "description": "DIDEndpoint"
      },
      "DIFField": {
        "properties": {
          "filter": { "anyOf": [{ "$ref": "#/components/schemas/Filter" }, { "type": "null" }] },
          "id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Id", "description": "ID" },
          "path": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Path"
          },
          "predicate": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Predicate",
            "description": "Preference"
          },
          "purpose": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Purpose",
            "description": "Purpose"
          }
        },
        "type": "object",
        "title": "DIFField",
        "description": "DIFField"
      },
      "DIFHolder": {
        "properties": {
          "directive": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Directive",
            "description": "Preference"
          },
          "field_id": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Field Id"
          }
        },
        "type": "object",
        "title": "DIFHolder",
        "description": "DIFHolder"
      },
      "DIFOptions": {
        "properties": {
          "challenge": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Challenge",
            "description": "Challenge protect against replay attack"
          },
          "domain": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Domain",
            "description": "Domain protect against replay attack"
          }
        },
        "type": "object",
        "title": "DIFOptions",
        "description": "DIFOptions"
      },
      "DIFPresSpec": {
        "properties": {
          "issuer_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Issuer Id",
            "description": "Issuer identifier to sign the presentation, if different from current public DID"
          },
          "presentation_definition": {
            "anyOf": [{ "$ref": "#/components/schemas/PresentationDefinition" }, { "type": "null" }]
          },
          "record_ids": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Record Ids",
            "description": "Mapping of input_descriptor id to list of stored W3C credential record_id"
          },
          "reveal_doc": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Reveal Doc",
            "description": "reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required"
          }
        },
        "type": "object",
        "title": "DIFPresSpec",
        "description": "DIFPresSpec"
      },
      "DIFProofRequest": {
        "properties": {
          "options": { "anyOf": [{ "$ref": "#/components/schemas/DIFOptions" }, { "type": "null" }] },
          "presentation_definition": { "$ref": "#/components/schemas/PresentationDefinition" }
        },
        "type": "object",
        "required": ["presentation_definition"],
        "title": "DIFProofRequest",
        "description": "DIFProofRequest"
      },
      "Filter": {
        "properties": {
          "const": {
            "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }, { "type": "null" }],
            "title": "Const",
            "description": "Const"
          },
          "enum": {
            "anyOf": [
              {
                "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }] },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Enum"
          },
          "exclusiveMaximum": {
            "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }, { "type": "null" }],
            "title": "Exclusivemaximum",
            "description": "ExclusiveMaximum"
          },
          "exclusiveMinimum": {
            "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }, { "type": "null" }],
            "title": "Exclusiveminimum",
            "description": "ExclusiveMinimum"
          },
          "format": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Format", "description": "Format" },
          "maxLength": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Maxlength",
            "description": "Max Length"
          },
          "maximum": {
            "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }, { "type": "null" }],
            "title": "Maximum",
            "description": "Maximum"
          },
          "minLength": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Minlength",
            "description": "Min Length"
          },
          "minimum": {
            "anyOf": [{ "type": "string" }, { "type": "integer" }, { "type": "number" }, { "type": "null" }],
            "title": "Minimum",
            "description": "Minimum"
          },
          "not": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Not", "description": "Not" },
          "pattern": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pattern",
            "description": "Pattern"
          },
          "type": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Type", "description": "Type" }
        },
        "type": "object",
        "title": "Filter",
        "description": "Filter"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": { "items": { "$ref": "#/components/schemas/ValidationError" }, "type": "array", "title": "Detail" }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IndyCredInfo": {
        "properties": {
          "attrs": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Attrs",
            "description": "Attribute names and value"
          },
          "cred_def_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Def Id",
            "description": "Credential definition identifier"
          },
          "cred_rev_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Rev Id",
            "description": "Credential revocation identifier"
          },
          "referent": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Referent",
            "description": "Wallet referent"
          },
          "rev_reg_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rev Reg Id",
            "description": "Revocation registry identifier"
          },
          "schema_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Schema Id",
            "description": "Schema identifier"
          }
        },
        "type": "object",
        "title": "IndyCredInfo",
        "description": "IndyCredInfo"
      },
      "IndyCredPrecis": {
        "properties": {
          "cred_info": { "anyOf": [{ "$ref": "#/components/schemas/IndyCredInfo" }, { "type": "null" }] },
          "interval": { "anyOf": [{ "$ref": "#/components/schemas/IndyNonRevocationInterval" }, { "type": "null" }] },
          "presentation_referents": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Presentation Referents"
          }
        },
        "type": "object",
        "title": "IndyCredPrecis",
        "description": "IndyCredPrecis"
      },
      "IndyCredential": {
        "properties": {
          "credential_definition_id": { "type": "string", "title": "Credential Definition Id" },
          "attributes": { "additionalProperties": { "type": "string" }, "type": "object", "title": "Attributes" }
        },
        "type": "object",
        "required": ["credential_definition_id", "attributes"],
        "title": "IndyCredential"
      },
      "IndyGEProof": {
        "properties": {
          "alpha": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Alpha" },
          "mj": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Mj" },
          "predicate": { "anyOf": [{ "$ref": "#/components/schemas/IndyGEProofPred" }, { "type": "null" }] },
          "r": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "R"
          },
          "t": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "T"
          },
          "u": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "U"
          }
        },
        "type": "object",
        "title": "IndyGEProof",
        "description": "IndyGEProof"
      },
      "IndyGEProofPred": {
        "properties": {
          "attr_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Attr Name",
            "description": "Attribute name, indy-canonicalized"
          },
          "p_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "P Type",
            "description": "Predicate type"
          },
          "value": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Value",
            "description": "Predicate threshold value"
          }
        },
        "type": "object",
        "title": "IndyGEProofPred",
        "description": "IndyGEProofPred"
      },
      "IndyNonRevocationInterval": {
        "properties": {
          "from": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "From",
            "description": "Earliest time of interest in non-revocation interval"
          },
          "to": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "To",
            "description": "Latest time of interest in non-revocation interval"
          }
        },
        "type": "object",
        "title": "IndyNonRevocationInterval",
        "description": "IndyNonRevocationInterval"
      },
      "IndyPresSpec": {
        "properties": {
          "requested_attributes": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyRequestedCredsRequestedAttr" },
            "type": "object",
            "title": "Requested Attributes",
            "description": "Nested object mapping proof request attribute referents to requested-attribute specifiers"
          },
          "requested_predicates": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyRequestedCredsRequestedPred" },
            "type": "object",
            "title": "Requested Predicates",
            "description": "Nested object mapping proof request predicate referents to requested-predicate specifiers"
          },
          "self_attested_attributes": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Self Attested Attributes",
            "description": "Self-attested attributes to build into proof"
          },
          "trace": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Trace",
            "description": "Whether to trace event (default false)"
          }
        },
        "type": "object",
        "required": ["requested_attributes", "requested_predicates", "self_attested_attributes"],
        "title": "IndyPresSpec",
        "description": "IndyPresSpec"
      },
      "IndyPrimaryProof": {
        "properties": {
          "eq_proof": { "anyOf": [{ "$ref": "#/components/schemas/IndyPrimaryProofEqProof" }, { "type": "null" }] },
          "ge_proofs": {
            "anyOf": [{ "items": { "$ref": "#/components/schemas/IndyGEProof" }, "type": "array" }, { "type": "null" }],
            "title": "Ge Proofs",
            "description": "Indy GE proofs"
          }
        },
        "type": "object",
        "title": "IndyPrimaryProof",
        "description": "IndyPrimaryProof"
      },
      "IndyPrimaryProofEqProof": {
        "properties": {
          "a_prime": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "A Prime" },
          "e": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "E" },
          "m": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "M"
          },
          "m2": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "M2" },
          "revealed_attrs": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Revealed Attrs"
          },
          "v": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "V" }
        },
        "type": "object",
        "title": "IndyPrimaryProofEqProof",
        "description": "Indy equality proof"
      },
      "IndyProof": {
        "properties": {
          "identifiers": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/IndyProofIdentifier" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Identifiers",
            "description": "Indy proof.identifiers content"
          },
          "proof": { "anyOf": [{ "$ref": "#/components/schemas/IndyProofProof" }, { "type": "null" }] },
          "requested_proof": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequestedProof" }, { "type": "null" }]
          }
        },
        "type": "object",
        "title": "IndyProof",
        "description": "IndyProof"
      },
      "IndyProofIdentifier": {
        "properties": {
          "cred_def_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Def Id",
            "description": "Credential definition identifier"
          },
          "rev_reg_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rev Reg Id",
            "description": "Revocation registry identifier"
          },
          "schema_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Schema Id",
            "description": "Schema identifier"
          },
          "timestamp": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "Timestamp",
            "description": "Timestamp epoch"
          }
        },
        "type": "object",
        "title": "IndyProofIdentifier",
        "description": "IndyProofIdentifier"
      },
      "IndyProofProof": {
        "properties": {
          "aggregated_proof": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofProofAggregatedProof" }, { "type": "null" }]
          },
          "proofs": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/IndyProofProofProofsProof" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Proofs",
            "description": "Indy proof proofs"
          }
        },
        "type": "object",
        "title": "IndyProofProof",
        "description": "IndyProofProof"
      },
      "IndyProofProofAggregatedProof": {
        "properties": {
          "c_hash": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "C Hash",
            "description": "c_hash value"
          },
          "c_list": {
            "anyOf": [
              { "items": { "items": { "type": "integer" }, "type": "array" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "C List",
            "description": "c_list value"
          }
        },
        "type": "object",
        "title": "IndyProofProofAggregatedProof",
        "description": "IndyProofProofAggregatedProof"
      },
      "IndyProofProofProofsProof": {
        "properties": {
          "non_revoc_proof": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofProofProofsProofNonRevocProof" }, { "type": "null" }]
          },
          "primary_proof": { "anyOf": [{ "$ref": "#/components/schemas/IndyPrimaryProof" }, { "type": "null" }] }
        },
        "type": "object",
        "title": "IndyProofProofProofsProof",
        "description": "IndyProofProofProofsProof"
      },
      "IndyProofProofProofsProofNonRevocProof": {
        "properties": {
          "c_list": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "C List"
          },
          "x_list": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "X List"
          }
        },
        "type": "object",
        "title": "IndyProofProofProofsProofNonRevocProof",
        "description": "Indy non-revocation proof"
      },
      "IndyProofReqAttrSpec": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "Attribute name"
          },
          "names": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Names",
            "description": "Attribute name group"
          },
          "non_revoked": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofReqAttrSpecNonRevoked" }, { "type": "null" }]
          },
          "restrictions": {
            "anyOf": [
              { "items": { "additionalProperties": { "type": "string" }, "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Restrictions",
            "description": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name"
          }
        },
        "type": "object",
        "title": "IndyProofReqAttrSpec",
        "description": "IndyProofReqAttrSpec"
      },
      "IndyProofReqAttrSpecNonRevoked": {
        "properties": {
          "from": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "From",
            "description": "Earliest time of interest in non-revocation interval"
          },
          "to": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "To",
            "description": "Latest time of interest in non-revocation interval"
          }
        },
        "type": "object",
        "title": "IndyProofReqAttrSpecNonRevoked",
        "description": "IndyProofReqAttrSpecNonRevoked"
      },
      "IndyProofReqPredSpec": {
        "properties": {
          "name": { "type": "string", "title": "Name", "description": "Attribute name" },
          "non_revoked": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofReqPredSpecNonRevoked" }, { "type": "null" }]
          },
          "p_type": { "type": "string", "title": "P Type", "description": "Predicate type ('<', '<=', '>=', or '>')" },
          "p_value": { "type": "integer", "title": "P Value", "description": "Threshold value" },
          "restrictions": {
            "anyOf": [
              { "items": { "additionalProperties": { "type": "string" }, "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Restrictions",
            "description": "If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name"
          }
        },
        "type": "object",
        "required": ["name", "p_type", "p_value"],
        "title": "IndyProofReqPredSpec",
        "description": "IndyProofReqPredSpec"
      },
      "IndyProofReqPredSpecNonRevoked": {
        "properties": {
          "from": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "From",
            "description": "Earliest time of interest in non-revocation interval"
          },
          "to": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "To",
            "description": "Latest time of interest in non-revocation interval"
          }
        },
        "type": "object",
        "title": "IndyProofReqPredSpecNonRevoked",
        "description": "IndyProofReqPredSpecNonRevoked"
      },
      "IndyProofRequest-Input": {
        "properties": {
          "name": { "type": "string", "title": "Name", "description": "Proof request name", "default": "Proof" },
          "non_revoked": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequestNonRevoked" }, { "type": "null" }]
          },
          "nonce": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Nonce", "description": "Nonce" },
          "requested_attributes": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyProofReqAttrSpec" },
            "type": "object",
            "title": "Requested Attributes",
            "description": "Requested attribute specifications of proof request"
          },
          "requested_predicates": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyProofReqPredSpec" },
            "type": "object",
            "title": "Requested Predicates",
            "description": "Requested predicate specifications of proof request"
          },
          "version": { "type": "string", "title": "Version", "description": "Proof request version", "default": "1.0" }
        },
        "type": "object",
        "required": ["requested_attributes", "requested_predicates"],
        "title": "IndyProofRequest"
      },
      "IndyProofRequest-Output": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "Proof request name"
          },
          "non_revoked": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequestNonRevoked" }, { "type": "null" }]
          },
          "nonce": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Nonce", "description": "Nonce" },
          "requested_attributes": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyProofReqAttrSpec" },
            "type": "object",
            "title": "Requested Attributes",
            "description": "Requested attribute specifications of proof request"
          },
          "requested_predicates": {
            "additionalProperties": { "$ref": "#/components/schemas/IndyProofReqPredSpec" },
            "type": "object",
            "title": "Requested Predicates",
            "description": "Requested predicate specifications of proof request"
          },
          "version": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Version",
            "description": "Proof request version"
          }
        },
        "type": "object",
        "required": ["requested_attributes", "requested_predicates"],
        "title": "IndyProofRequest",
        "description": "IndyProofRequest"
      },
      "IndyProofRequestNonRevoked": {
        "properties": {
          "from": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "From",
            "description": "Earliest time of interest in non-revocation interval"
          },
          "to": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "To",
            "description": "Latest time of interest in non-revocation interval"
          }
        },
        "type": "object",
        "title": "IndyProofRequestNonRevoked",
        "description": "IndyProofRequestNonRevoked"
      },
      "IndyProofRequestedProof": {
        "properties": {
          "predicates": {
            "anyOf": [
              {
                "additionalProperties": { "$ref": "#/components/schemas/IndyProofRequestedProofPredicate" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Predicates",
            "description": "Proof requested proof predicates."
          },
          "revealed_attr_groups": {
            "anyOf": [
              {
                "additionalProperties": { "$ref": "#/components/schemas/IndyProofRequestedProofRevealedAttrGroup" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Revealed Attr Groups",
            "description": "Proof requested proof revealed attribute groups"
          },
          "revealed_attrs": {
            "anyOf": [
              {
                "additionalProperties": { "$ref": "#/components/schemas/IndyProofRequestedProofRevealedAttr" },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Revealed Attrs",
            "description": "Proof requested proof revealed attributes"
          },
          "self_attested_attrs": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Self Attested Attrs",
            "description": "Proof requested proof self-attested attributes"
          },
          "unrevealed_attrs": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Unrevealed Attrs",
            "description": "Unrevealed attributes"
          }
        },
        "type": "object",
        "title": "IndyProofRequestedProof",
        "description": "IndyProofRequestedProof"
      },
      "IndyProofRequestedProofPredicate": {
        "properties": {
          "sub_proof_index": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sub Proof Index",
            "description": "Sub-proof index"
          }
        },
        "type": "object",
        "title": "IndyProofRequestedProofPredicate",
        "description": "IndyProofRequestedProofPredicate"
      },
      "IndyProofRequestedProofRevealedAttr": {
        "properties": {
          "encoded": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Encoded",
            "description": "Encoded value"
          },
          "raw": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Raw", "description": "Raw value" },
          "sub_proof_index": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sub Proof Index",
            "description": "Sub-proof index"
          }
        },
        "type": "object",
        "title": "IndyProofRequestedProofRevealedAttr",
        "description": "IndyProofRequestedProofRevealedAttr"
      },
      "IndyProofRequestedProofRevealedAttrGroup": {
        "properties": {
          "sub_proof_index": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sub Proof Index",
            "description": "Sub-proof index"
          },
          "values": {
            "anyOf": [
              { "additionalProperties": { "$ref": "#/components/schemas/RawEncoded" }, "type": "object" },
              { "type": "null" }
            ],
            "title": "Values",
            "description": "Indy proof requested proof revealed attr groups group value"
          }
        },
        "type": "object",
        "title": "IndyProofRequestedProofRevealedAttrGroup",
        "description": "IndyProofRequestedProofRevealedAttrGroup"
      },
      "IndyRequestedCredsRequestedAttr": {
        "properties": {
          "cred_id": {
            "type": "string",
            "title": "Cred Id",
            "description": "Wallet credential identifier (typically but not necessarily a UUID)"
          },
          "revealed": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Revealed",
            "description": "Whether to reveal attribute in proof (default true)"
          }
        },
        "type": "object",
        "required": ["cred_id"],
        "title": "IndyRequestedCredsRequestedAttr",
        "description": "IndyRequestedCredsRequestedAttr"
      },
      "IndyRequestedCredsRequestedPred": {
        "properties": {
          "cred_id": {
            "type": "string",
            "title": "Cred Id",
            "description": "Wallet credential identifier (typically but not necessarily a UUID)"
          },
          "timestamp": {
            "anyOf": [{ "type": "integer", "maximum": 1.8446744073709552e19, "minimum": 0.0 }, { "type": "null" }],
            "title": "Timestamp",
            "description": "Epoch timestamp of interest for non-revocation proof"
          }
        },
        "type": "object",
        "required": ["cred_id"],
        "title": "IndyRequestedCredsRequestedPred",
        "description": "IndyRequestedCredsRequestedPred"
      },
      "InputDescriptors": {
        "properties": {
          "constraints": { "anyOf": [{ "$ref": "#/components/schemas/Constraints" }, { "type": "null" }] },
          "group": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Group"
          },
          "id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Id", "description": "ID" },
          "metadata": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Metadata",
            "description": "Metadata dictionary"
          },
          "name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name", "description": "Name" },
          "purpose": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Purpose",
            "description": "Purpose"
          },
          "schema": { "anyOf": [{ "$ref": "#/components/schemas/SchemasInputDescriptorFilter" }, { "type": "null" }] }
        },
        "type": "object",
        "title": "InputDescriptors",
        "description": "InputDescriptors"
      },
      "InvitationMessage-Input": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Message identifier"
          },
          "@type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Type",
            "description": "Message type"
          },
          "accept": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Accept",
            "description": "List of mime type in order of preference"
          },
          "goal": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Goal",
            "description": "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message"
          },
          "goal_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Goal Code",
            "description": "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message"
          },
          "handshake_protocols": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Handshake Protocols"
          },
          "imageUrl": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Imageurl",
            "description": "Optional image URL for out-of-band invitation"
          },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label",
            "description": "Optional label"
          },
          "requests~attach": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/AttachDecorator-Input" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Requests~Attach",
            "description": "Optional request attachment"
          },
          "services": {
            "anyOf": [
              { "items": { "anyOf": [{ "type": "string" }, { "type": "object" }] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Services"
          }
        },
        "type": "object",
        "title": "InvitationMessage",
        "description": "InvitationMessage"
      },
      "InvitationMessage-Output": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Message identifier"
          },
          "@type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Type",
            "description": "Message type"
          },
          "accept": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Accept",
            "description": "List of mime type in order of preference"
          },
          "goal": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Goal",
            "description": "A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message"
          },
          "goal_code": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Goal Code",
            "description": "A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message"
          },
          "handshake_protocols": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Handshake Protocols"
          },
          "imageUrl": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Imageurl",
            "description": "Optional image URL for out-of-band invitation"
          },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label",
            "description": "Optional label"
          },
          "requests~attach": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/AttachDecorator-Output" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Requests~Attach",
            "description": "Optional request attachment"
          },
          "services": {
            "anyOf": [
              { "items": { "anyOf": [{ "type": "string" }, { "type": "object" }] }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Services"
          }
        },
        "type": "object",
        "title": "InvitationMessage",
        "description": "InvitationMessage"
      },
      "InvitationRecord": {
        "properties": {
          "created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created At",
            "description": "Time of record creation"
          },
          "invi_msg_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Invi Msg Id",
            "description": "Invitation message identifier"
          },
          "invitation": { "anyOf": [{ "$ref": "#/components/schemas/InvitationMessage-Output" }, { "type": "null" }] },
          "invitation_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Invitation Id",
            "description": "Invitation record identifier"
          },
          "invitation_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Invitation Url",
            "description": "Invitation message URL"
          },
          "oob_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Oob Id",
            "description": "Out of band record identifier"
          },
          "state": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "State",
            "description": "Out of band message exchange state"
          },
          "trace": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Trace",
            "description": "Record trace information, based on agent configuration"
          },
          "updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated At",
            "description": "Time of last record update"
          }
        },
        "type": "object",
        "title": "InvitationRecord",
        "description": "InvitationRecord"
      },
      "InvitationResult": {
        "properties": {
          "connection_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Connection Id",
            "description": "Connection identifier"
          },
          "invitation": { "anyOf": [{ "$ref": "#/components/schemas/ConnectionInvitation" }, { "type": "null" }] },
          "invitation_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Invitation Url",
            "description": "Invitation URL"
          }
        },
        "type": "object",
        "title": "InvitationResult",
        "description": "InvitationResult"
      },
      "IssueCredentialProtocolVersion": {
        "type": "string",
        "enum": ["v1", "v2"],
        "title": "IssueCredentialProtocolVersion"
      },
      "IssuerCredRevRecord": {
        "properties": {
          "created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created At",
            "description": "Time of record creation"
          },
          "cred_def_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Def Id",
            "description": "Credential definition identifier"
          },
          "cred_ex_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Ex Id",
            "description": "Credential exchange record identifier at credential issue"
          },
          "cred_ex_version": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Ex Version",
            "description": "Credential exchange version"
          },
          "cred_rev_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cred Rev Id",
            "description": "Credential revocation identifier"
          },
          "record_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Record Id",
            "description": "Issuer credential revocation record identifier"
          },
          "rev_reg_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rev Reg Id",
            "description": "Revocation registry identifier"
          },
          "state": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "State",
            "description": "Issue credential revocation record state"
          },
          "updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated At",
            "description": "Time of last record update"
          }
        },
        "type": "object",
        "title": "IssuerCredRevRecord",
        "description": "IssuerCredRevRecord"
      },
      "JWSCreateRequest": {
        "properties": {
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "examples": ["did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"]
          },
          "headers": { "type": "object", "title": "Headers", "default": {} },
          "payload": { "type": "object", "title": "Payload", "default": {} },
          "verification_method": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Verification Method",
            "description": "Information used for proof verification",
            "examples": [
              "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"
            ]
          }
        },
        "type": "object",
        "title": "JWSCreateRequest"
      },
      "JWSCreateResponse": {
        "properties": {
          "jws": {
            "type": "string",
            "title": "Jws",
            "examples": [
              "eyJ0eXAiOiAiSldUIiwgImFsZyI6ICJFZERTQSIsICJraWQiOiAiZGlkOmtleTp6Nk1rakNqeHVUWHhWUFdTOUpZajJaaUt0S3ZTUzFzckM2a0JSZXM0V0NCMm1TV3EjejZNa2pDanh1VFh4VlBXUzlKWWoyWmlLdEt2U1Mxc3JDNmtCUmVzNFdDQjJtU1dxIn0.e30.rOLhhAaMfWb_rFzgKofXRuv72bj7SjRcPieICMV1TE1eJrTG-RoIJ6crrEc_mRmnFtI7dExEZAnCqd4LzGozAA"
            ]
          }
        },
        "type": "object",
        "required": ["jws"],
        "title": "JWSCreateResponse"
      },
      "JWSVerifyRequest": {
        "properties": {
          "jws": {
            "type": "string",
            "title": "Jws",
            "examples": [
              "eyJ0eXAiOiAiSldUIiwgImFsZyI6ICJFZERTQSIsICJraWQiOiAiZGlkOmtleTp6Nk1rakNqeHVUWHhWUFdTOUpZajJaaUt0S3ZTUzFzckM2a0JSZXM0V0NCMm1TV3EjejZNa2pDanh1VFh4VlBXUzlKWWoyWmlLdEt2U1Mxc3JDNmtCUmVzNFdDQjJtU1dxIn0.e30.rOLhhAaMfWb_rFzgKofXRuv72bj7SjRcPieICMV1TE1eJrTG-RoIJ6crrEc_mRmnFtI7dExEZAnCqd4LzGozAA"
            ]
          }
        },
        "type": "object",
        "required": ["jws"],
        "title": "JWSVerifyRequest"
      },
      "JWSVerifyResponse": {
        "properties": {
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "Error text"
          },
          "headers": {
            "type": "object",
            "title": "Headers",
            "description": "Headers from verified JWT.",
            "examples": [
              {
                "alg": "EdDSA",
                "kid": "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq",
                "typ": "JWT"
              }
            ]
          },
          "kid": {
            "type": "string",
            "title": "Kid",
            "description": "kid of signer",
            "examples": [
              "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"
            ]
          },
          "payload": { "type": "object", "title": "Payload", "description": "Payload from verified JWT" },
          "valid": { "type": "boolean", "title": "Valid" }
        },
        "type": "object",
        "required": ["headers", "kid", "payload", "valid"],
        "title": "JWSVerifyResponse"
      },
      "JsonLdSignRequest": {
        "properties": {
          "credential_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Credential Id" },
          "credential": { "anyOf": [{ "type": "object" }, { "type": "null" }], "title": "Credential" },
          "verkey": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Verkey" },
          "pub_did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Pub Did" },
          "signature_options": { "anyOf": [{ "$ref": "#/components/schemas/SignatureOptions" }, { "type": "null" }] }
        },
        "type": "object",
        "title": "JsonLdSignRequest"
      },
      "JsonLdVerifyRequest": {
        "properties": {
          "doc": { "type": "object", "title": "Doc" },
          "public_did": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Public Did" },
          "verkey": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Verkey" }
        },
        "type": "object",
        "required": ["doc"],
        "title": "JsonLdVerifyRequest"
      },
      "LDProofVCDetail": {
        "properties": {
          "credential": { "$ref": "#/components/schemas/Credential" },
          "options": { "$ref": "#/components/schemas/LDProofVCDetailOptions" }
        },
        "type": "object",
        "required": ["credential", "options"],
        "title": "LDProofVCDetail",
        "description": "LDProofVCDetail"
      },
      "LDProofVCDetailOptions": {
        "properties": {
          "challenge": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Challenge",
            "description": "A challenge to include in the proof. SHOULD be provided by the requesting party of the credential (=holder)"
          },
          "created": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created",
            "description": "The date and time of the proof (with a maximum accuracy in seconds). Defaults to current system time"
          },
          "credentialStatus": {
            "anyOf": [{ "$ref": "#/components/schemas/CredentialStatusOptions" }, { "type": "null" }]
          },
          "domain": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Domain",
            "description": "The intended domain of validity for the proof"
          },
          "proofPurpose": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Proofpurpose",
            "description": "The proof purpose used for the proof. Should match proof purposes registered in the Linked Data Proofs Specification"
          },
          "proofType": {
            "type": "string",
            "title": "Prooftype",
            "description": "The proof type used for the proof. Should match suites registered in the Linked Data Cryptographic Suite Registry"
          }
        },
        "type": "object",
        "required": ["proofType"],
        "title": "LDProofVCDetailOptions",
        "description": "LDProofVCDetailOptions"
      },
      "LinkedDataProof": {
        "properties": {
          "challenge": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Challenge",
            "description": "Associates a challenge with a proof, for use with a proofPurpose such as authentication"
          },
          "created": {
            "type": "string",
            "title": "Created",
            "description": "The string value of an ISO8601 combined date and time string generated by the Signature Algorithm"
          },
          "domain": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Domain",
            "description": "A string value specifying the restricted domain of the signature."
          },
          "jws": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Jws",
            "description": "Associates a Detached Json Web Signature with a proof"
          },
          "nonce": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Nonce",
            "description": "The nonce"
          },
          "proofPurpose": { "type": "string", "title": "Proofpurpose", "description": "Proof purpose" },
          "proofValue": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Proofvalue",
            "description": "The proof value of a proof"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Identifies the digital signature suite that was used to create the signature"
          },
          "verificationMethod": {
            "type": "string",
            "title": "Verificationmethod",
            "description": "Information used for proof verification"
          }
        },
        "type": "object",
        "required": ["created", "proofPurpose", "type", "verificationMethod"],
        "title": "LinkedDataProof",
        "description": "LinkedDataProof"
      },
      "Message": {
        "properties": {
          "connection_id": { "type": "string", "title": "Connection Id" },
          "content": { "type": "string", "title": "Content" }
        },
        "type": "object",
        "required": ["connection_id", "content"],
        "title": "Message"
      },
      "OobRecord": {
        "properties": {
          "attach_thread_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Attach Thread Id",
            "description": "Connection record identifier"
          },
          "connection_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Connection Id",
            "description": "Connection record identifier"
          },
          "created_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created At",
            "description": "Time of record creation"
          },
          "invi_msg_id": { "type": "string", "title": "Invi Msg Id", "description": "Invitation message identifier" },
          "invitation": { "$ref": "#/components/schemas/InvitationMessage-Output" },
          "oob_id": { "type": "string", "title": "Oob Id", "description": "Oob record identifier" },
          "our_recipient_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Our Recipient Key",
            "description": "Recipient key used for oob invitation"
          },
          "role": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Role", "description": "OOB Role" },
          "state": { "type": "string", "title": "State", "description": "Out of band message exchange state" },
          "their_service": { "anyOf": [{ "$ref": "#/components/schemas/ServiceDecorator" }, { "type": "null" }] },
          "trace": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Trace",
            "description": "Record trace information, based on agent configuration"
          },
          "updated_at": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated At",
            "description": "Time of last record update"
          }
        },
        "type": "object",
        "required": ["invi_msg_id", "invitation", "oob_id", "state"],
        "title": "OobRecord",
        "description": "OobRecord"
      },
      "PingRequestResponse": {
        "properties": {
          "thread_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Thread Id",
            "description": "Thread ID of the ping message"
          }
        },
        "type": "object",
        "title": "PingRequestResponse",
        "description": "PingRequestResponse"
      },
      "PresentProofProtocolVersion": { "type": "string", "enum": ["v1", "v2"], "title": "PresentProofProtocolVersion" },
      "PresentationDefinition": {
        "properties": {
          "format": { "anyOf": [{ "$ref": "#/components/schemas/ClaimFormat" }, { "type": "null" }] },
          "id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Id",
            "description": "Unique Resource Identifier"
          },
          "input_descriptors": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/InputDescriptors" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Input Descriptors"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "description": "Human-friendly name that describes what the presentation definition pertains to"
          },
          "purpose": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Purpose",
            "description": "Describes the purpose for which the Presentation Definition's inputs are being requested"
          },
          "submission_requirements": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/SubmissionRequirements" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Submission Requirements"
          }
        },
        "type": "object",
        "title": "PresentationDefinition",
        "description": "PresentationDefinition"
      },
      "PresentationExchange": {
        "properties": {
          "connection_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Connection Id" },
          "created_at": { "type": "string", "title": "Created At" },
          "error_msg": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error Msg" },
          "parent_thread_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Parent Thread Id" },
          "presentation": { "anyOf": [{ "$ref": "#/components/schemas/IndyProof" }, { "type": "null" }] },
          "presentation_request": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequest-Output" }, { "type": "null" }]
          },
          "proof_id": { "type": "string", "title": "Proof Id" },
          "protocol_version": { "$ref": "#/components/schemas/PresentProofProtocolVersion" },
          "role": { "type": "string", "enum": ["prover", "verifier"], "title": "Role" },
          "state": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "abandoned",
                  "done",
                  "presentation-received",
                  "presentation-sent",
                  "proposal-received",
                  "proposal-sent",
                  "request-received",
                  "request-sent",
                  "deleted"
                ]
              },
              { "type": "null" }
            ],
            "title": "State"
          },
          "thread_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Thread Id" },
          "updated_at": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Updated At" },
          "verified": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Verified" }
        },
        "type": "object",
        "required": ["created_at", "proof_id", "protocol_version", "role"],
        "title": "PresentationExchange"
      },
      "ProofRequestType": { "type": "string", "enum": ["indy", "jwt", "ld_proof"], "title": "ProofRequestType" },
      "PublishRevocationsRequest": {
        "properties": {
          "revocation_registry_credential_map": {
            "additionalProperties": { "items": { "type": "string" }, "type": "array" },
            "type": "object",
            "title": "Revocation Registry Credential Map",
            "description": "A map of revocation registry IDs to lists of credential revocation IDs that should be published.Providing an empty list for a registry ID publishes all pending revocations for that ID. An empty dictionary signifies that the action should be applied to all pending revocations across all registry IDs.",
            "default": {}
          }
        },
        "type": "object",
        "title": "PublishRevocationsRequest"
      },
      "RawEncoded": {
        "properties": {
          "encoded": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Encoded",
            "description": "Encoded value"
          },
          "raw": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Raw", "description": "Raw value" }
        },
        "type": "object",
        "title": "RawEncoded",
        "description": "RawEncoded"
      },
      "ReceiveInvitationRequest": {
        "properties": {
          "@id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Id",
            "description": "Message identifier"
          },
          "@type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "@Type",
            "description": "Message type"
          },
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "description": "DID for connection invitation"
          },
          "imageUrl": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Imageurl",
            "description": "Optional image URL for connection invitation"
          },
          "label": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Label",
            "description": "Optional label for connection invitation"
          },
          "recipientKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Recipientkeys",
            "description": "List of recipient keys"
          },
          "routingKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Routingkeys",
            "description": "List of routing keys"
          },
          "serviceEndpoint": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serviceendpoint",
            "description": "Service endpoint at which to reach this agent"
          }
        },
        "type": "object",
        "title": "ReceiveInvitationRequest",
        "description": "ReceiveInvitationRequest"
      },
      "RejectProofRequest": {
        "properties": {
          "proof_id": { "type": "string", "title": "Proof Id" },
          "problem_report": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Problem Report" }
        },
        "type": "object",
        "required": ["proof_id"],
        "title": "RejectProofRequest"
      },
      "RevokeCredential": {
        "properties": {
          "credential_exchange_id": { "type": "string", "title": "Credential Exchange Id" },
          "credential_definition_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Credential Definition Id"
          },
          "auto_publish_on_ledger": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Auto Publish On Ledger",
            "default": false
          }
        },
        "type": "object",
        "required": ["credential_exchange_id"],
        "title": "RevokeCredential"
      },
      "SDJWSCreateRequest": {
        "properties": {
          "did": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Did",
            "examples": ["did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"]
          },
          "headers": { "type": "object", "title": "Headers", "default": {} },
          "payload": { "type": "object", "title": "Payload", "default": {} },
          "verification_method": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Verification Method",
            "description": "Information used for proof verification",
            "examples": [
              "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"
            ]
          },
          "non_sd_list": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Non Sd List",
            "default": [],
            "examples": [["name", "address", "address.street_address", "nationalities[1:3]"]]
          }
        },
        "type": "object",
        "title": "SDJWSCreateRequest"
      },
      "SDJWSCreateResponse": {
        "properties": {
          "sd_jws": {
            "type": "string",
            "title": "Sd Jws",
            "examples": [
              "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk~WyJEM3BUSFdCYWNRcFdpREc2TWZKLUZnIiwgIkRFIl0~WyJPMTFySVRjRTdHcXExYW9oRkd0aDh3IiwgIlNBIl0~WyJkVmEzX1JlTGNsWTU0R1FHZm5oWlRnIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ"
            ]
          }
        },
        "type": "object",
        "required": ["sd_jws"],
        "title": "SDJWSCreateResponse"
      },
      "SDJWSVerifyRequest": {
        "properties": {
          "sd_jws": {
            "type": "string",
            "title": "Sd Jws",
            "examples": [
              "eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk~WyJEM3BUSFdCYWNRcFdpREc2TWZKLUZnIiwgIkRFIl0~WyJPMTFySVRjRTdHcXExYW9oRkd0aDh3IiwgIlNBIl0~WyJkVmEzX1JlTGNsWTU0R1FHZm5oWlRnIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ"
            ]
          }
        },
        "type": "object",
        "required": ["sd_jws"],
        "title": "SDJWSVerifyRequest"
      },
      "SDJWSVerifyResponse": {
        "properties": {
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "Error text"
          },
          "headers": {
            "type": "object",
            "title": "Headers",
            "description": "Headers from verified JWT.",
            "examples": [
              {
                "alg": "EdDSA",
                "kid": "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq",
                "typ": "JWT"
              }
            ]
          },
          "kid": {
            "type": "string",
            "title": "Kid",
            "description": "kid of signer",
            "examples": [
              "did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq"
            ]
          },
          "payload": { "type": "object", "title": "Payload", "description": "Payload from verified JWT" },
          "valid": { "type": "boolean", "title": "Valid" },
          "disclosures": {
            "items": { "items": { "anyOf": [{ "type": "string" }, { "type": "object" }] }, "type": "array" },
            "type": "array",
            "title": "Disclosures",
            "description": "Disclosure arrays associated with the SD-JWT",
            "examples": [
              [
                ["fx1iT_mETjGiC-JzRARnVg", "name", "Alice"],
                ["n4-t3mlh8jSS6yMIT7QHnA", "street_address", { "_sd": ["kLZrLK7enwfqeOzJ9-Ss88YS3mhjOAEk9lr_ix2Heng"] }]
              ]
            ]
          }
        },
        "type": "object",
        "required": ["headers", "kid", "payload", "valid", "disclosures"],
        "title": "SDJWSVerifyResponse"
      },
      "SchemaInputDescriptor": {
        "properties": {
          "required": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Required",
            "description": "Required"
          },
          "uri": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Uri", "description": "URI" }
        },
        "type": "object",
        "title": "SchemaInputDescriptor",
        "description": "SchemaInputDescriptor"
      },
      "SchemasInputDescriptorFilter": {
        "properties": {
          "oneof_filter": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Oneof Filter",
            "description": "oneOf"
          },
          "uri_groups": {
            "anyOf": [
              {
                "items": { "items": { "$ref": "#/components/schemas/SchemaInputDescriptor" }, "type": "array" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Uri Groups"
          }
        },
        "type": "object",
        "title": "SchemasInputDescriptorFilter",
        "description": "SchemasInputDescriptorFilter"
      },
      "SendCredential": {
        "properties": {
          "type": { "allOf": [{ "$ref": "#/components/schemas/CredentialType" }], "default": "indy" },
          "indy_credential_detail": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyCredential" }, { "type": "null" }]
          },
          "ld_credential_detail": { "anyOf": [{ "$ref": "#/components/schemas/LDProofVCDetail" }, { "type": "null" }] },
          "save_exchange_record": {
            "type": "boolean",
            "title": "Save Exchange Record",
            "description": "Whether the credential exchange record should be saved on completion",
            "default": false
          },
          "connection_id": { "type": "string", "title": "Connection Id" },
          "protocol_version": {
            "allOf": [{ "$ref": "#/components/schemas/IssueCredentialProtocolVersion" }],
            "default": "v2"
          }
        },
        "type": "object",
        "required": ["connection_id"],
        "title": "SendCredential"
      },
      "SendProofRequest": {
        "properties": {
          "protocol_version": {
            "allOf": [{ "$ref": "#/components/schemas/PresentProofProtocolVersion" }],
            "default": "v2"
          },
          "comment": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Comment" },
          "trace": { "anyOf": [{ "type": "boolean" }, { "type": "null" }], "title": "Trace" },
          "type": { "allOf": [{ "$ref": "#/components/schemas/ProofRequestType" }], "default": "indy" },
          "indy_proof_request": {
            "anyOf": [{ "$ref": "#/components/schemas/IndyProofRequest-Input" }, { "type": "null" }]
          },
          "dif_proof_request": { "anyOf": [{ "$ref": "#/components/schemas/DIFProofRequest" }, { "type": "null" }] },
          "save_exchange_record": {
            "type": "boolean",
            "title": "Save Exchange Record",
            "description": "Whether the presentation exchange record should be saved on completion",
            "default": false
          },
          "connection_id": { "type": "string", "title": "Connection Id" }
        },
        "type": "object",
        "required": ["connection_id"],
        "title": "SendProofRequest"
      },
      "ServiceDecorator": {
        "properties": {
          "recipientKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Recipientkeys",
            "description": "List of recipient keys"
          },
          "routingKeys": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Routingkeys",
            "description": "List of routing keys"
          },
          "serviceEndpoint": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serviceendpoint",
            "description": "Service endpoint at which to reach this agent"
          }
        },
        "type": "object",
        "title": "ServiceDecorator",
        "description": "ServiceDecorator"
      },
      "SetDidEndpointRequest": {
        "properties": { "endpoint": { "type": "string", "title": "Endpoint" } },
        "type": "object",
        "required": ["endpoint"],
        "title": "SetDidEndpointRequest"
      },
      "SignResponse": {
        "properties": {
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "Error text"
          },
          "signed_doc": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Signed Doc",
            "description": "Signed document"
          }
        },
        "type": "object",
        "title": "SignResponse",
        "description": "SignResponse"
      },
      "SignatureOptions": {
        "properties": {
          "challenge": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Challenge" },
          "domain": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Domain" },
          "proofPurpose": { "type": "string", "title": "Proofpurpose" },
          "type": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Type" },
          "verificationMethod": { "type": "string", "title": "Verificationmethod" }
        },
        "type": "object",
        "required": ["proofPurpose", "verificationMethod"],
        "title": "SignatureOptions",
        "description": "SignatureOptions"
      },
      "SubmissionRequirements": {
        "properties": {
          "count": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Count",
            "description": "Count Value"
          },
          "from": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "From", "description": "From" },
          "from_nested": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/SubmissionRequirements" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "From Nested"
          },
          "max": { "anyOf": [{ "type": "integer" }, { "type": "null" }], "title": "Max", "description": "Max Value" },
          "min": { "anyOf": [{ "type": "integer" }, { "type": "null" }], "title": "Min", "description": "Min Value" },
          "name": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Name", "description": "Name" },
          "purpose": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Purpose",
            "description": "Purpose"
          },
          "rule": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Rule", "description": "Selection" }
        },
        "type": "object",
        "title": "SubmissionRequirements",
        "description": "SubmissionRequirements"
      },
      "TrustPingMsg": {
        "properties": {
          "connection_id": { "type": "string", "title": "Connection Id" },
          "comment": { "type": "string", "title": "Comment" }
        },
        "type": "object",
        "required": ["connection_id", "comment"],
        "title": "TrustPingMsg"
      },
      "VCRecord": {
        "properties": {
          "contexts": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Contexts"
          },
          "cred_tags": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Cred Tags"
          },
          "cred_value": {
            "anyOf": [{ "type": "string" }, {}, { "type": "null" }],
            "title": "Cred Value",
            "description": "(JSON-serializable) credential value"
          },
          "expanded_types": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Expanded Types"
          },
          "given_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Given Id",
            "description": "Credential identifier"
          },
          "issuer_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Issuer Id",
            "description": "Issuer identifier"
          },
          "proof_types": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Proof Types"
          },
          "record_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Record Id",
            "description": "Record identifier"
          },
          "schema_ids": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Schema Ids"
          },
          "subject_ids": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Subject Ids"
          }
        },
        "type": "object",
        "title": "VCRecord",
        "description": "VCRecord"
      },
      "VCRecordList": {
        "properties": {
          "results": {
            "anyOf": [{ "items": { "$ref": "#/components/schemas/VCRecord" }, "type": "array" }, { "type": "null" }],
            "title": "Results"
          }
        },
        "type": "object",
        "title": "VCRecordList",
        "description": "VCRecordList"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "W3CCredentialsListRequest": {
        "properties": {
          "contexts": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Contexts"
          },
          "given_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Given Id",
            "description": "Given credential id to match"
          },
          "issuer_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Issuer Id",
            "description": "Credential issuer identifier to match"
          },
          "max_results": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Results",
            "description": "Maximum number of results to return"
          },
          "proof_types": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Proof Types"
          },
          "schema_ids": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Schema Ids",
            "description": "Schema identifiers, all of which to match"
          },
          "subject_ids": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Subject Ids",
            "description": "Subject identifiers, all of which to match"
          },
          "tag_query": {
            "anyOf": [{ "additionalProperties": { "type": "string" }, "type": "object" }, { "type": "null" }],
            "title": "Tag Query",
            "description": "Tag filter"
          },
          "types": {
            "anyOf": [{ "items": { "type": "string" }, "type": "array" }, { "type": "null" }],
            "title": "Types"
          }
        },
        "type": "object",
        "title": "W3CCredentialsListRequest",
        "description": "W3CCredentialsListRequest"
      }
    },
    "securitySchemes": { "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "x-api-key" } }
  }
}
