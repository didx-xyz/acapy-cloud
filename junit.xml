<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="3" time="25.614" timestamp="2021-11-16T18:10:03.619793" hostname="MacBook-Pro-van-Moritz.local"><testcase classname="tests.proof.test_proof" name="test_send_proof_request" time="25.393"><failure message="AssertionError: assert {'detail': [{'loc': ['query', 'connection_id'], 'msg': 'field required', 'type': 'value_error.missing'}]} == ''">alice_connection_id = '7e92e029-9b40-4b3a-9b17-9a3f42367d82'
async_client_alice_module_scope = &lt;httpx.AsyncClient object at 0x1051c95b0&gt;

    @pytest.mark.asyncio
    async def test_send_proof_request(
        alice_connection_id: str,
        async_client_alice_module_scope: AsyncClient,
    ):
        proof = V10PresentationSendRequestRequest(
            connection_id=alice_connection_id, proof_request=IndyProofRequest(**proof_dict)
        )
        response = await async_client_alice_module_scope.post(
            BASE_PATH + "/send-request",
            data=json.dumps({"proof_request": proof.dict()}),
        )
    
        result = response.json()
&gt;       assert result == ''
E       AssertionError: assert {'detail': [{'loc': ['query', 'connection_id'], 'msg': 'field required', 'type': 'value_error.missing'}]} == ''

app/tests/proof/test_proof.py:162: AssertionError</failure></testcase><testcase classname="tests.proof.test_proof" name="test_create_proof_request" time="0.021"><failure message="assert None">async_client_alice_module_scope = &lt;httpx.AsyncClient object at 0x1051c95b0&gt;

    @pytest.mark.asyncio
    async def test_create_proof_request(
        async_client_alice_module_scope: AsyncClient,
    ):
        response = await async_client_alice_module_scope.post(
            BASE_PATH + "/create-request",
            data=json.dumps({"proof": indy_proof_request.dict()}),
        )
    
        result = response.json()
&gt;       assert result["v10"]
E       assert None

app/tests/proof/test_proof.py:200: AssertionError</failure></testcase><testcase classname="tests.proof.test_proof" name="test_accept_proof_request" time="0.022"><failure message="TypeError: 'NoneType' object is not subscriptable">async_client = &lt;httpx.AsyncClient object at 0x10527dc10&gt;
async_client_bob_module_scope = &lt;httpx.AsyncClient object at 0x1050b0430&gt;
async_client_alice_module_scope = &lt;httpx.AsyncClient object at 0x1051c95b0&gt;

    @pytest.mark.asyncio
    async def test_accept_proof_request(
        # credential_exchange_id: str,
        async_client,
        async_client_bob_module_scope: AsyncClient,
        async_client_alice_module_scope: AsyncClient,
    ):
        proof_req_res = await async_client_alice_module_scope.post(
            BASE_PATH + "/create-request",
            data=json.dumps({"proof": indy_proof_request.dict()}),
        )
        print(proof_req_res.json()["v10"])
&gt;       presentation_exchange_id = proof_req_res.json()["v10"]["presentation_exchange_id"]
E       TypeError: 'NoneType' object is not subscriptable

app/tests/proof/test_proof.py:218: TypeError</failure></testcase></testsuite></testsuites>