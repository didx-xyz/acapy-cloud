openapi: 3.1.0
info:
  title: CloudAPI Tenant
  description: '

    Welcome to CloudAPI Tenant!


    For detailed guidance on using the API, please visit our official documentation:

    https://www.didx.co.za/acapy-cloud/index.html

'
  version: 5.0.0-rc6
servers:
  - url: /tenant
paths:
  /v1/connections:
    get:
      tags:
        - connections
      summary: Fetch Connection Records
      description: "Fetch a list of connection records\n---\nThe records contain information about connections with other tenants, such as the state of the connection,\nthe alias of the connection, the label and the did of the other party, and other metadata.\n\nThe following query parameters can be used to filter the connection records to fetch.\n\nParameters (Optional):\n---\n    limit: int - The maximum number of records to retrieve\n    offset: int - The offset to start retrieving records from\n    descending: bool - Whether to return results in descending order. Results are ordered by record created time.\n    alias: str\n    connection_protocol: Protocol: \"didexchange/1.0\", \"didexchange/1.1\"\n    invitation_key: str\n    invitation_msg_id: str\n    my_did: str\n    state: State: \"active\", \"response\", \"request\", \"start\", \"completed\", \"init\", \"error\", \"invitation\", \"abandoned\"\n    their_did: str\n    their_public_did: str\n    their_role: Role: \"invitee\", \"requester\", \"inviter\", \"responder\"\n\nReturns\n-------\n    List[Connection]\n        A list of connection records"
      operationId: get_connections_v1_connections_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 10000
                minimum: 1
              - type: 'null'
            description: Number of results to return
            default: 1000
            title: Limit
          description: Number of results to return
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            default: 0
            title: Offset
          description: Offset for pagination
        - name: descending
          in: query
          required: false
          schema:
            type: boolean
            description: Whether to return results in descending order. Results are ordered by record created time.
            default: true
            title: Descending
          description: Whether to return results in descending order. Results are ordered by record created time.
        - name: alias
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Alias
        - name: connection_protocol
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - didexchange/1.0
                  - didexchange/1.1
                type: string
              - type: 'null'
            title: Connection Protocol
        - name: invitation_key
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Invitation Key
        - name: invitation_msg_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Invitation Msg Id
        - name: my_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: My Did
        - name: state
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - active
                  - response
                  - request
                  - start
                  - completed
                  - init
                  - error
                  - invitation
                  - abandoned
                type: string
              - type: 'null'
            title: State
        - name: their_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Their Did
        - name: their_public_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Their Public Did
        - name: their_role
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - invitee
                  - requester
                  - inviter
                  - responder
                type: string
              - type: 'null'
            title: Their Role
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Connection'
                title: Response Get Connections V1 Connections Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/{connection_id}:
    get:
      tags:
        - connections
      summary: Fetch a Connection Record
      description: "Fetch a connection record by id\n---\nA connection record contains information about a connection with other tenants, such as the state of the connection,\nthe alias of the connection, the label and the did of the other party, and other metadata.\n\nParameters\n----------\n    connection_id: str\n        The identifier of the connection record that you want to fetch\n\nReturns\n-------\n    Connection\n        The connection record"
      operationId: get_connection_by_id_v1_connections__connection_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - connections
      summary: Delete a Connection Record
      description: "Delete connection record by id\n---\nThis endpoint deletes a connection record by id.\n\nIf the connection uses the didexchange protocol, then we hangup the connection, such that the other party also has\ntheir record deleted.\n\nParameters\n----------\n    connection_id: str\n        The identifier of the connection record that you want to delete\n\nReturns\n-------\n    status_code: 204"
      operationId: delete_connection_by_id_v1_connections__connection_id__delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            title: Connection Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/did-exchange/create-request:
    post:
      tags:
        - connections
      summary: Create a DID Exchange Request
      description: "Create a DID Exchange request\n---\nThis endpoint allows you to initiate a DID Exchange request with another party using their public DID.\n\nThe goal and goal_code parameters provide additional context for the request.\n\nOnly one of `use_did`, `use_did_method` or `use_public_did` should be specified. If none of these are specified,\na new local DID will be created for this connection.\n\nParameters\n----------\n    their_public_did: str\n        The DID of the party you want to connect to.\n    alias: str, optional\n        An alias for the connection. Defaults to None.\n    goal: str, optional\n        Optional self-attested string for sharing the intent of the connection.\n    goal_code: str, optional\n        Optional self-attested code for sharing the intent of the connection.\n    my_label: str, optional\n        Your label for the request.\n    use_did: str, optional\n        Your local DID to use for the connection.\n    use_did_method: str, optional\n        The method to use for the connection: \"did:peer:2\" or \"did:peer:4\".\n    use_public_did: bool\n        Use your public DID for this connection. Defaults to False.\n\nReturns\n-------\n    Connection\n        The connection record created by the DID exchange request."
      operationId: create_did_exchange_request_v1_connections_did_exchange_create_request_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: their_public_did
          in: query
          required: true
          schema:
            type: string
            title: Their Public Did
        - name: alias
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Alias
        - name: goal
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Goal
        - name: goal_code
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Goal Code
        - name: my_label
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: My Label
        - name: use_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Use Did
        - name: use_did_method
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Use Did Method
        - name: use_public_did
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Use Public Did
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/did-exchange/accept-request:
    post:
      tags:
        - connections
      summary: Accept a DID Exchange Request
      description: "Accept a stored DID Exchange request\n---\nThis endpoint allows you to accept a request by providing the connection ID.\n\nParameters\n----------\n    connection_id: str\n        The ID of the connection request you want to accept.\n\nReturns\n-------\n    Connection\n        The connection record created by accepting the DID exchange request."
      operationId: accept_did_exchange_request_v1_connections_did_exchange_accept_request_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: query
          required: true
          schema:
            type: string
            title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/did-exchange/reject:
    post:
      tags:
        - connections
      summary: Reject or Abandon a DID Exchange
      description: "Reject or abandon a DID Exchange\n---\nThis endpoint allows you to reject or abandon a DID Exchange request. You can optionally provide a reason\nfor the rejection.\n\nReturns\n-------\n    Connection\n        The connection record after rejecting the DID exchange request."
      operationId: reject_did_exchange_v1_connections_did_exchange_reject_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: query
          required: true
          schema:
            type: string
            title: Connection Id
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/DIDXRejectRequest'
                - type: 'null'
              title: Body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/did-rotate:
    post:
      tags:
        - connections
      summary: Begin DID Rotation
      description: "Begin the rotation of a DID as a rotator.\n---\nThis endpoint allows you to begin the DID rotation for an existing connection. The `to_did` parameter specifies\nthe new DID that the rotating party is rotating to.\n\nParameters\n----------\n    connection_id: str\n        The ID of the connection for which the DID is to be rotated.\n    to_did: str\n        The new DID that the rotating party is rotating to.\n\nReturns\n-------\n    Rotate\n        The record after the DID rotation is initiated."
      operationId: rotate_did_v1_connections_did_rotate_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: query
          required: true
          schema:
            type: string
            title: Connection Id
        - name: to_did
          in: query
          required: true
          schema:
            type: string
            title: To Did
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rotate'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connections/did-rotate/hangup:
    post:
      tags:
        - connections
      summary: Hangup DID Rotation
      description: "Send a hangup for a DID rotation as the rotator.\n---\nThis endpoint allows you to hangup a DID rotation process for an existing connection.\n\nParameters\n----------\n    connection_id: str\n        The ID of the connection for which the DID rotation is being hung up.\n\nReturns\n-------\n    Hangup\n        The record after the DID rotation is hung up."
      operationId: hangup_did_rotation_v1_connections_did_rotate_hangup_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: connection_id
          in: query
          required: true
          schema:
            type: string
            title: Connection Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hangup'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/definitions/schemas:
    post:
      tags:
        - definitions
      summary: Create a new Schema
      description: "Create and publish a new schema to the ledger\n---\n**NB**: Only governance can create schemas.\n\nA schema is used to create credential definitions, which is used for issuing credentials.\nThe schema defines the attributes that can exist in that credential.\n\nWhen a schema is created, it is published to the ledger and written to our public trust registry,\nso that everyone in the ecosystem can view schemas that are valid and available.\n\nRequest Body:\n---\n    body: CreateSchema\n        schema_type: SchemaType\n            The type of schema to create.\n        name: str\n            The name of the schema.\n        version: str\n            The version of the schema.\n        attribute_names: List[str]\n            The attribute names of the schema.\n\nReturns\n-------\n    CredentialSchema\n        The created schema object"
      operationId: create_schema_v1_definitions_schemas_post
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchema'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - definitions
      summary: Get Created Schemas
      description: "Get created schemas\n---\nAll tenants can call this endpoint to view available schemas.\n\nIf governance calls this endpoint, it will return all the schemas created by governance\n(whether the schemas are on the trust registry or not).\n\nIf tenants call this endpoint, it will return all schemas on the trust registry.\nThe difference between this endpoint and the public trust registry endpoint, is that this response includes\nthe attribute information of the schemas.\n\nResults can be filtered by the parameters listed below.\n\nParameters (Optional):\n---\n    schema_issuer_did: str\n    schema_name: str\n    schema_version: str\n\nReturns\n-------\n    List[CredentialSchema]\n        A list of created schemas"
      operationId: get_schemas_v1_definitions_schemas_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: schema_issuer_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Issuer Did
        - name: schema_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Name
        - name: schema_version
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialSchema'
                title: Response Get Schemas V1 Definitions Schemas Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/definitions/schemas/{schema_id}:
    get:
      tags:
        - definitions
      summary: Get a Schema
      description: "Retrieve schema by id\n---\nThis endpoint fetches a schema from the ledger, using the schema_id.\n\nAny tenant can call this endpoint to retrieve a schema.\nThis endpoint will list all the attributes of the schema.\n\nParameters\n----------\n    schema_id: str\n        schema id\n\nReturns\n-------\n    CredentialSchema\n        The schema object"
      operationId: get_schema_v1_definitions_schemas__schema_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: schema_id
          in: path
          required: true
          schema:
            type: string
            title: Schema Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSchema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/definitions/credentials:
    post:
      tags:
        - definitions
      summary: Create a new Credential Definition
      description: "Create a credential definition\n---\nOnly issuers can create credential definitions.\n\nA credential definition essentially builds off a schema, which defines the attributes that can belong to a\ncredential, and it specifies whether credentials using this definition are revocable or not.\n\n**NB**: If revocation is requested (`\"support_revocation\": true`), then revocation registries will be created.\nThe creation of these revocation registries can take up to one minute.\n\nRequest Body:\n---\n    body: CreateCredentialDefinition\n        schema_id: str\n            The id of the schema to use for this credential definition.\n        tag: str\n            The label to use for the credential definition.\n        support_revocation: bool\n            Whether you want credentials using this definition to be revocable or not\n\nReturns\n-------\n    CredentialDefinition\n        The created credential definition"
      operationId: create_credential_definition_v1_definitions_credentials_post
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCredentialDefinition'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - definitions
      summary: Get Created Credential Definitions
      description: "Get credential definitions created by the tenant\n---\nThis endpoint returns all credential definitions created by the tenant. Only issuers can create\ncredential definitions, and so only issuers will get results from this endpoint.\n\nThe results can be filtered by the parameters listed below.\n\nParameters (Optional):\n---\n    issuer_did: str\n    credential_definition_id: str\n    schema_id: str\n    schema_issuer_did: str\n    schema_version: str\n\nReturns\n-------\n    List[CredentialDefinition]\n        A list of created credential definitions"
      operationId: get_credential_definitions_v1_definitions_credentials_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: issuer_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer Did
        - name: credential_definition_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Credential Definition Id
        - name: schema_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Id
        - name: schema_issuer_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Issuer Did
        - name: schema_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Name
        - name: schema_version
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Schema Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialDefinition'
                title: Response Get Credential Definitions V1 Definitions Credentials Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/definitions/credentials/{credential_definition_id}:
    get:
      tags:
        - definitions
      summary: Get a Credential Definition
      description: "Get credential definition by id\n---\nThis endpoint returns information for a credential definition.\n\nAnyone can call this, whether they created the requested credential definition or not.\nPractically it will just reveal the schema that was used for the credential definition.\n\nParameters\n----------\n    credential_definition_id: str\n        credential definition id\n\nReturns\n-------\n    CredentialDefinition\n        The credential definition"
      operationId: get_credential_definition_by_id_v1_definitions_credentials__credential_definition_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_definition_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Definition Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials:
    post:
      tags:
        - issuer
      summary: Send Holder a Credential
      description: "Create and send a credential, automating the issuer-side flow\n---\nNB: Only a tenant with the issuer role can send credentials.\n\nWhen sending a credential, the credential type must be one of `anoncreds` or `ld_proof`.\n```json\n{\n    \"anoncreds_credential_detail\": {...},\n    \"ld_credential_detail\": {...},\n    \"save_exchange_record\": true, <-- Whether the credential exchange record should be saved on completion.\n    \"connection_id\": \"string\", <-- The issuer's reference to the connection they want to submit the credential to.\n}\n```\nSetting the `save_exchange_record` field to True will save the exchange record after the credential is accepted.\nThe default behaviour is to only save exchange records while they are in pending state.\n\nFor a detailed technical specification of the credential issuing process, refer to the [Aries Issue Credential v2\nRFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0453-issue-credential-v2/README.md).\n\nRequest Body:\n---\n    credential: SendCredential\n        The payload for sending a credential\n\nReturns\n-------\n    CredentialExchange\n        A record of this credential exchange"
      operationId: send_credential_v1_issuer_credentials_post
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCredential'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - issuer
      summary: Fetch Credential Exchange Records
      description: "Get a list of credential exchange records\n---\nBoth holders and issuers can call this endpoint, because they each have their own records of a credential exchange.\n\nThese records contain information about the credentials issued to a holder, such as the current state of the\nexchange, and other metadata such as the `connection_id` that a credential was submit to (if an issuer) or received\nfrom (if a holder). Each record in the list is related to a single credential exchange flow.\n\nNB: An issuer and a holder will have distinct credential exchange ids, despite referring to the same exchange.\nThe `thread_id` is the only record attribute that will be the same for the holder and the issuer.\n\nAn exchange record will automatically be deleted after a flow completes (i.e. when state is 'done'),\nunless the `save_exchange_record` was set to true.\n\nThe following parameters can be set to filter the fetched exchange records: connection_id, role, state, thread_id.\n\nParameters (Optional):\n---\n    limit: int - The maximum number of records to retrieve\n    offset: int - The offset to start retrieving records from\n    descending: bool - Whether to return results in descending order. Results are ordered by record created time.\n    connection_id: str\n    role: Role: \"issuer\", \"holder\"\n    state: State: \"proposal-sent\", \"proposal-received\", \"offer-sent\", \"offer-received\",\n                             \"request-sent\", \"request-received\", \"credential-issued\", \"credential-received\",\n                             \"credential-revoked\", \"abandoned\", \"done\"\n    thread_id: UUID\n\nReturns\n-------\n    List[CredentialExchange]\n        A list of credential exchange records"
      operationId: get_credentials_v1_issuer_credentials_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 10000
                minimum: 1
              - type: 'null'
            description: Number of results to return
            default: 1000
            title: Limit
          description: Number of results to return
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            default: 0
            title: Offset
          description: Offset for pagination
        - name: descending
          in: query
          required: false
          schema:
            type: boolean
            description: Whether to return results in descending order. Results are ordered by record created time.
            default: true
            title: Descending
          description: Whether to return results in descending order. Results are ordered by record created time.
        - name: connection_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Connection Id
        - name: role
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - issuer
                  - holder
                type: string
              - type: 'null'
            title: Role
        - name: state
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - proposal-sent
                  - proposal-received
                  - offer-sent
                  - offer-received
                  - request-sent
                  - request-received
                  - credential-issued
                  - credential-received
                  - credential-revoked
                  - abandoned
                  - done
                  - deleted
                type: string
              - type: 'null'
            title: State
        - name: thread_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Thread Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialExchange'
                title: Response Get Credentials V1 Issuer Credentials Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/create-offer:
    post:
      tags:
        - issuer
      summary: Create a Credential Offer (not bound to a connection)
      description: "Create a credential offer, not bound to any connection\n---\nNB: Only a tenant with the issuer role can send credentials.\n\nThis endpoint takes the same body as the send credential endpoint, but without a connection id. This\nmeans the credential will not be sent, but it will do the initial step of creating a credential exchange record,\nwhich the issuer can then use in the out of band (OOB) protocol.\n\nThe OOB protocol allows credentials to be sent over alternative channels, such as email or QR code, where a\nconnection does not yet exist between holder and issuer.\n\nThe credential type must be one of `anoncreds` or `ld_proof`.\n```json\n{\n    \"anoncreds_credential_detail\": {...},\n    \"ld_credential_detail\": {...},\n    \"save_exchange_record\": true, <-- Whether the credential exchange record should be saved on completion.\n}\n```\nFor a detailed technical specification of the credential issuing process, refer to the [Aries Issue Credential v2\nRFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0453-issue-credential-v2/README.md).\n\nRequest Body:\n---\n    credential: CreateOffer\n        The payload for creating a credential offer\n\nReturns\n-------\n    CredentialExchange\n        A record of this credential exchange"
      operationId: create_offer_v1_issuer_credentials_create_offer_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOffer'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/issuer/credentials/{credential_exchange_id}/request:
    post:
      tags:
        - issuer
      summary: Accept a Credential Offer
      description: "Sends a request to accept a credential offer\n---\nThe holder uses this endpoint to accept an offer from an issuer.\n\nIn technical terms, when a holder has a credential exchange record with a state 'offer-received', then they can use\nthis endpoint to accept that credential offer, and store the credential in their wallet.\n\nParameters\n----------\n    credential_exchange_id: str\n        The holder's reference to the credential exchange that they want to accept\n    save_exchange_record: Optional[bool]\n        Whether to override environment setting for saving credential exchange records. Default is None (use\n        environment setting). True means save record, False means delete record.\n\nReturns\n-------\n    CredentialExchange\n        An updated record of this credential exchange"
      operationId: request_credential_v1_issuer_credentials__credential_exchange_id__request_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_exchange_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Exchange Id
        - name: save_exchange_record
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
            title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/{credential_exchange_id}/store:
    post:
      tags:
        - issuer
      summary: Store a Received Credential in Wallet
      description: "Store a received credential in wallet\n---\nStore a received credential in wallet by providing the credential exchange id.\n\n`credential_exchange_id` is the id of the exchange record, not the credential itself.\n\nThe holder only needs to call this endpoint if the holder receives a credential out of band, since, typically,\ncredentials are automatically stored in wallet after they are accepted.\n\nThe holder can store the credential in their wallet after receiving it from the issuer.\n\nParameters\n----------\n    credential_exchange_id: str\n        credential exchange record identifier\n\nReturns\n-------\n    CredentialExchange\n        An updated record of this credential exchange"
      operationId: store_credential_v1_issuer_credentials__credential_exchange_id__store_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_exchange_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Exchange Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/{credential_exchange_id}:
    get:
      tags:
        - issuer
      summary: Fetch a single Credential Exchange Record
      description: "Get a credential exchange record by credential id\n---\nBoth holders and issuers can call this endpoint, because they each have their own records of a credential exchange.\n\nThese records contain information about the credentials issued to a holder, such as the current state of the\nexchange, and other metadata such as the `connection_id` that a credential was submit to (if an issuer) or received\nfrom (if a holder).\n\nNB: An issuer and a holder will have distinct credential exchange ids, despite referring to the same exchange.\nThe `thread_id` is the only record attribute that will be the same for the holder and the issuer.\n\nAn exchange record will, by default, automatically be deleted after a flow completes (i.e. when state is 'done'),\nunless the `save_exchange_record` was set to true, or the wallet is configured to preserve records by default.\n\nThe following parameters can be set to filter the fetched exchange records: connection_id, role, state, thread_id.\n\nParameters\n----------\n    credential_exchange_id: str\n        The identifier of the credential exchange record that you want to fetch\n\nReturns\n-------\n    CredentialExchange\n        The credential exchange record"
      operationId: get_credential_v1_issuer_credentials__credential_exchange_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_exchange_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Exchange Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - issuer
      summary: Delete an Exchange Record
      description: "Delete a credential exchange record\n---\nThis will remove a specific credential exchange from your storage records.\n\nParameters\n----------\n    credential_exchange_id: str\n        The identifier of the credential exchange record that you want to delete\n\nReturns\n-------\n    status_code: 204"
      operationId: remove_credential_exchange_record_v1_issuer_credentials__credential_exchange_id__delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_exchange_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Exchange Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/revoke:
    post:
      tags:
        - revocation
      summary: Revoke a Credential (if revocable)
      description: "Revoke a credential\n---\nRevoke a credential by providing the identifier of the exchange.\n\nIf an issuer is going to revoke more than one credential, it is recommended to set the\n'auto_publish_on_ledger' field to False (default), and then batch publish the revocations using\nthe 'publish-revocations' endpoint.\n\nBy batching the revocations, the issuer can save on transaction fees related to\npublishing revocations to the ledger.\n\nRequest Body:\n---\n    body: RevokeCredential\n        - credential_exchange_id (str): The ID associated with the credential exchange that should be revoked.\n        - auto_publish_on_ledger (bool): (True) publish revocation to ledger immediately, or\n            (default, False) mark it pending\n\nReturns\n-------\n    RevokedResponse:\n        revoked_cred_rev_ids:\n          The revocation registry indexes that were revoked.\n          Will be empty if the revocation was marked as pending."
      operationId: revoke_credential_v1_issuer_credentials_revoke_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeCredential'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/issuer/credentials/revocation/record:
    get:
      tags:
        - revocation
      summary: Fetch a Revocation Record
      description: "Get a credential revocation record\n---\nFetch a credential revocation record by providing the credential exchange id.\nRecords can also be fetched by providing the credential revocation id and revocation registry id.\n\nThe record is the payload of the webhook event on topic 'issuer_cred_rev', and contains the credential's revocation\nstatus and other metadata.\n\nThe revocation registry id (rev_reg_id) and credential revocation id (cred_rev_id) can be found\nin this record if you have the credential exchange id.\n\nParameters\n----------\n    credential_exchange_id: str\n    credential_revocation_id: str\n    revocation_registry_id: str\n\nReturns\n-------\n    IssuerCredRevRecord\n        The credential revocation record\n\nRaises\n------\n    CloudApiException: 400\n        If credential_exchange_id is not provided, both credential_revocation_id and revocation_registry_id must be."
      operationId: get_credential_revocation_record_v1_issuer_credentials_revocation_record_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_exchange_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Credential Exchange Id
        - name: credential_revocation_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Credential Revocation Id
        - name: revocation_registry_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Revocation Registry Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuerCredRevRecordSchemaAnonCreds'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/publish-revocations:
    post:
      tags:
        - revocation
      summary: Publish Pending Revocations
      description: "Write pending revocations to the ledger\n---\nRevocations that are in a pending state can be published to the ledger.\n\nThe endpoint accepts a `revocation_registry_credential_map`, which provides a dictionary of\nrevocation registry IDs to credential revocation IDs, to allow publishing individual credentials.\n\nIf no revocation registry id is provided (i.e. an empty map `revocation_registry_credential_map: {}`),\nthen all pending revocations will be published.\n\nIf no credential revocation id is provided under a given revocation registry id, then all pending revocations for\nthe given revocation registry id will be published.\n\nWhere to find the revocation registry id and credential revocation id:\nWhen issuing a credential, against a credential definition that supports revocation,\nthe issuer will receive a webhook event on the topic 'issuer_cred_rev'. This event will contain\nthe credential exchange id (cred_ex_id), the credential revocation id (cred_rev_id) and\nthe revocation registry id (rev_reg_id).\n\nRequest Body:\n---\n    publish_request: PublishRevocationsRequest\n        An instance of `PublishRevocationsRequest` containing a `revocation_registry_credential_map`. This map\n        is a dictionary where each key is a revocation registry ID and its value is a list of credential\n        revocation IDs to be published. Providing an empty list for a registry ID instructs the system to\n        publish all pending revocations for that ID. An empty dictionary signifies that all pending\n        revocations across all registry IDs should be published.\n\nReturns\n-------\n    RevokedResponse:\n        revoked_cred_rev_ids:\n          The revocation registry indexes that were revoked.\n          Will be empty if there were no revocations to publish."
      operationId: publish_revocations_v1_issuer_credentials_publish_revocations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRevocationsRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/issuer/credentials/clear-pending-revocations:
    post:
      tags:
        - revocation
      summary: Clear Pending Revocations
      description: "Clear pending revocations\n---\n\nNote: This endpoint is not supported for the 'askar-anoncreds' wallet type.\n\nRevocations that are in a pending state can be cleared, such that they are no longer set to be revoked.\n\nThe endpoint accepts a `revocation_registry_credential_map`, which provides a dictionary of\nrevocation registry IDs to credential revocation IDs, to allow clearing individual credentials.\n\nIf no revocation registry id is provided (i.e. an empty map `revocation_registry_credential_map: {}`),\nthen all pending revocations will be cleared.\n\nIf no credential revocation id is provided under a given revocation registry id, then all pending revocations for\nthe given revocation registry id will be cleared.\n\nWhere to find the revocation registry id and credential revocation id:\nWhen issuing a credential, against a credential definition that supports revocation,\nthe issuer will receive a webhook event on the topic 'issuer_cred_rev'. This event will contain\nthe credential exchange id (cred_ex_id), the credential revocation id (cred_rev_id) and\nthe revocation registry id (rev_reg_id).\n\nRequest Body:\n---\n    clear_pending_request: ClearPendingRevocationsRequest\n        An instance of `ClearPendingRevocationsRequest` containing a `revocation_registry_credential_map`. This map\n        is a dictionary where each key is a revocation registry ID and its value is a list of credential\n        revocation IDs to be cleared. Providing an empty list for a registry ID instructs the system to\n        clear all pending revocations for that ID. An empty dictionary signifies that all pending\n        revocations across all registry IDs should be cleared.\n\nReturns\n-------\n    ClearPendingRevocationsResult\n        The revocations that are still pending after the clear request is performed"
      operationId: clear_pending_revocations_v1_issuer_credentials_clear_pending_revocations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearPendingRevocationsRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearPendingRevocationsResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/issuer/credentials/get-pending-revocations/{revocation_registry_id}:
    get:
      tags:
        - revocation
      summary: Get Pending Revocations
      description: "Get pending revocations\n---\nGet the pending revocations for a given revocation registry ID.\n\nParameters\n----------\n    revocation_registry_id: str\n        The ID of the revocation registry for which to fetch pending revocations\n\nReturns\n-------\n    PendingRevocations:\n        A list of cred_rev_ids pending revocation for a given revocation registry ID"
      operationId: get_pending_revocations_v1_issuer_credentials_get_pending_revocations__revocation_registry_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: revocation_registry_id
          in: path
          required: true
          schema:
            type: string
            title: Revocation Registry Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingRevocations'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/issuer/credentials/fix-revocation-registry/{revocation_registry_id}:
    put:
      tags:
        - revocation
      summary: Fix Revocation Registry Entry State
      description: "Fix Revocation Registry Entry State\n---\nFix the revocation registry entry state for a given revocation registry ID.\n\nIf issuer's revocation registry wallet state is out of sync with the ledger,\nthis endpoint can be used to fix/update the ledger state.\n\nPath Parameters:\n---\n    revocation_registry_id: str\n        The ID of the revocation registry for which to fix the state\n\nQuery Parameters:\n---\n    apply_ledger_update: bool\n        Apply changes to ledger (default: False). If False, only computes the difference\n        between the wallet and ledger state.\n\nReturns\n-------\n    RevRegWalletUpdatedResult:\n        accum_calculated: The calculated accumulator value for any revocations not yet published to ledger\n        accum_fixed: The result of applying the ledger transaction to synchronize revocation state\n        rev_reg_delta: The delta between wallet and ledger state for this revocation registry"
      operationId: fix_revocation_registry_entry_state_v1_issuer_credentials_fix_revocation_registry__revocation_registry_id__put
      security:
        - APIKeyHeader: []
      parameters:
        - name: revocation_registry_id
          in: path
          required: true
          schema:
            type: string
            title: Revocation Registry Id
        - name: apply_ledger_update
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Apply Ledger Update
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegWalletUpdatedResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/jsonld/sign:
    post:
      tags:
        - jsonld
      summary: Sign Jsonld
      description: Sign a JSON-LD structure
      operationId: sign_jsonld_v1_jsonld_sign_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonLdSignRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/jsonld/verify:
    post:
      tags:
        - jsonld
      summary: Verify Jsonld
      description: Verify a JSON-LD structure
      operationId: verify_jsonld_v1_jsonld_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonLdVerifyRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/messaging/send-message:
    post:
      tags:
        - messaging
      summary: Send a Message
      description: "Send basic message\n---\n\nSend a message to a tenant via a connection. The other tenant will receive\nthe message on topic `basic-message` for their webhook events.\n\nSee the Aries\n[Basic Message Protocol](https://github.com/hyperledger/aries-rfcs/blob/main/features/0095-basic-message/README.md)\nfor more information.\n\nRequest body:\n---\n    message: Message\n        connection_id: str\n            Connection ID of the connection to send the message to.\n        content: str\n            The message to send.\n\nReturns\n-------\n    Status code 204"
      operationId: send_messages_v1_messaging_send_message_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/messaging/trust-ping:
    post:
      tags:
        - messaging
      summary: Send Trust Ping
      description: "Send trust ping\n---\nSend a trust ping to a connection to ensure that the connection is active and ready.\n\nSee the Aries\n[Trust Ping Protocol](https://github.com/hyperledger/aries-rfcs/blob/main/features/0048-trust-ping/README.md)\nfor more information.\n\nRequest body:\n---\n    TrustPingMsg :\n        connection_id: str\n            Connection ID of the connection to send the trust ping to.\n        comment: str\n            Comment to include in the trust ping.\n\nReturns\n-------\n    PingRequestResponse\n        thread_id: str\n            Thread ID of the ping message"
      operationId: send_trust_ping_v1_messaging_trust_ping_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustPingMsg'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingRequestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/oob/create-invitation:
    post:
      tags:
        - out-of-band
      summary: Create OOB Invitation
      description: "Create an out-of-band invitation\n---\n\nThe attachment field is used to include a credential offer or a proof request in the invitation.\nThe attachment ID is the credential exchange ID or proof request ID.\nThe attachment type is either `\"credential-offer\"` or `\"present-proof\"`.\n\nThe multi_use field is used to determine if the invitation can be used multiple times by different tenants.\nThe `use_public_did` field should only be set true, if a tenant with a public DID is creating\na connection invitation, then the invitation will use the tenants public did to create the connection invitation\ni.e. the tenant accepting the invitation will connect via public did of tenant that created invitation\n\n`multi_use` can't be set to `true` if an `attachment` is provided,\nas a proof request or credential offer should be sent to one tenant.\n\nRequest body:\n---\n    body:CreateOobInvitation\n        alias: Optional[str]\n        multi_use: bool (default false)\n        use_public_did: bool (default false)\n        attachments: Optional[List[Attachment]]\n        create_connection: Optional[bool]\n\nReturns\n-------\n    InvitationRecord\n        The invitation record"
      operationId: create_oob_invitation_v1_oob_create_invitation_post
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/CreateOobInvitation'
                - type: 'null'
              title: Body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationRecord'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/oob/accept-invitation:
    post:
      tags:
        - out-of-band
      summary: Accept OOB Invitation
      description: "Accept out-of-band invitation\n---\n\nAs with the accept connection invitation endpoint, the invitation object from the create-invitation endpoint\nis passed to this endpoint.\n\nThe `invitation_url` in the InvitationRecord can also be used to obtain an invitation; there is a base64 encoded\nstring after the \"?oob=\" parameter in the url, and this can be decoded to obtain the invitation object.\n\nRequest body:\n---\n    body: AcceptOobInvitation\n        alias: Optional[str]\n        use_existing_connection: Optional[bool]\n        invitation: InvitationMessage\n\nReturns\n-------\n    OobRecord\n        The out-of-band record"
      operationId: accept_oob_invitation_v1_oob_accept_invitation_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOobInvitation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OobRecord'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/oob/connect-public-did:
    post:
      tags:
        - out-of-band
      summary: Connect with Public DID
      description: "Connect using public DID as implicit invitation\n---\n\nA connection will automatically be established with the public DID.\n\nRequest body:\n---\n    body: ConnectToPublicDid\n        public_did: str\n\nReturns\n-------\n    Connection\n        The connection record"
      operationId: connect_to_public_did_v1_oob_connect_public_did_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectToPublicDid'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/verifier/send-request:
    post:
      tags:
        - verifier
      summary: Send a Proof Request to a connection
      description: "Send proof request\n---\nNB: Only a tenant with the verifier role can send a proof request.\n\nThe verifier uses this endpoint to send a proof request to a specific connection, by providing the connection ID.\n\nThe proof request type must be one of anoncreds or ld_proof.\n```json\n    {\n        \"anoncreds_proof_request\": {...},\n        \"dif_proof_request\": {...},\n        \"save_exchange_record\": true <-- Whether the proof exchange record should be preserved after completion.\n        \"comment\": \"string\", <-- This comment will appear in the proof record for the recipient as well\n        \"connection_id\": \"string\", <-- The verifier's reference to the connection to send this proof request to\n    }\n```\nFor a detailed technical specification and informative diagrams\nrelated to the present proof process, refer to the [Aries Present Proof v2\nRFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0454-present-proof-v2/README.md) and the [LD Proof\nAttachment RFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0510-dif-pres-exch-attach/README.md).\n\nRequest Body:\n---\n    body: SendProofRequest\n        The proof request object\n\nReturns\n-------\n    PresentationExchange\n        The presentation exchange record for this request"
      operationId: send_proof_request_v1_verifier_send_request_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendProofRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/verifier/create-request:
    post:
      tags:
        - verifier
      summary: Create a Proof Request (not bound to a connection)
      description: "Creates a presentation request that is not bound to any specific proposal or connection\n---\nThis endpoint is used to create a proof request that is not bound to a connection. This means the proof request is\nnot sent directly, but it will do the initial step of creating a proof exchange record,\nwhich the verifier can then use in the out of band (OOB) protocol.\n\nThe OOB protocol allows proof requests to be sent over alternative channels, such as email or QR code, where a\nconnection does not yet exist between holder and verifier.\n\nThe proof request type must be one of anoncreds or ld_proof.\n```json\n    {\n        \"anoncreds_proof_request\": {...},\n        \"dif_proof_request\": {...},\n        \"save_exchange_record\": true <-- Whether the proof exchange record should be preserved after completion.\n        \"comment\": \"string\", <-- This comment will appear in the proof record for the recipient as well\n    }\n```\nFor a detailed technical specification and informative diagrams\nrelated to the present proof process, refer to the [Aries Present Proof v2\nRFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0454-present-proof-v2/README.md) and the [LD Proof\nAttachment RFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0510-dif-pres-exch-attach/README.md).\n\nRequest Body:\n---\n    body: CreateProofRequest\n        The proof request object\n\nReturns\n-------\n    PresentationExchange\n        The presentation exchange record for this request"
      operationId: create_proof_request_v1_verifier_create_request_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProofRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/verifier/accept-request:
    post:
      tags:
        - verifier
      summary: Accept a Proof Request
      description: "Accept proof request\n---\nA prover uses this endpoint to respond to a proof request, by sending a presentation to the verifier.\n\nAn AnonCreds presentation contains a mapping of the requested attributes to the wallet credential id of the prover.\n\nThe prover must provide the proof ID of the request that they are responding to, and the presentation object.\n```json\n{\n    \"proof_id\": \"string\", <-- The proof ID of the presentation request that is being accepted\n    \"anoncreds_presentation_spec\": {...},\n    \"dif_presentation_spec\": {...},\n}\n```\n\nExample of an AnonCreds presentation object:\n```json\n{\n    \"anoncreds_presentation_spec\": {\n        \"requested_attributes\": {\n            \"surname\": {\n                \"cred_id\": \"10e6b03f-2b60-431a-9634-731594423120\",\n                \"revealed\": true\n            },\n            \"name\": {\n                \"cred_id\": \"10e6b03f-2b60-431a-9634-731594423120\",\n                \"revealed\": true\n            },\n            \"age\": {\n                \"cred_id\": \"10e6b03f-2b60-431a-9634-731594423120\",\n                \"revealed\": true\n            }\n        }\n    }\n}\n```\n\nThe `revealed` parameter indicates whether the holder wants to reveal the attribute value to the verifier or not.\n\nRequest Body:\n---\n    body: AcceptProofRequest\n        The proof request object\n\nReturns\n-------\n    PresentationExchange\n        The prover's updated presentation exchange record after responding to the proof request."
      operationId: accept_proof_request_v1_verifier_accept_request_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptProofRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/verifier/reject-request:
    post:
      tags:
        - verifier
      summary: Reject a Proof Request
      description: "Reject proof request\n---\nA prover uses this endpoint to notify the verifier that they cannot or refuse to respond to a proof request.\n\nThe prover provides the proof ID of the request that they want to reject, and a message (`problem_report`) that\nwill display in the verifier's presentation exchange record as the rejection message.\n\nRequest Body:\n---\n    body: RejectProofRequest\n        proof_id: str\n            The proof id of the presentation request that is being rejected\n        problem_report: str\n            A message to inform the verifier why their proof request is rejected\n        delete_proof_record: bool (default: False)\n            Can be set to true if the prover wishes to delete their record of the rejected presentation exchange.\n\nReturns\n-------\n    status_code: 204"
      operationId: reject_proof_request_v1_verifier_reject_request_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectProofRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/verifier/proofs:
    get:
      tags:
        - verifier
      summary: Get Presentation Exchange Records
      description: "Get all presentation exchange records for this tenant\n---\nThese records contains information about proof requests and presentations.\n\nThe results can be filtered by connection_id, role, state, and thread_id.\n\nParameters (Optional):\n---\n    limit: int: The maximum number of records to retrieve\n    offset: int: The offset to start retrieving records from\n    descending: bool - Whether to return results in descending order. Results are ordered by record created time.\n    connection_id: str\n    role: Role: \"prover\", \"verifier\"\n    state: State: \"presentation-received\", \"presentation-sent\", \"proposal-received\", \"proposal-sent\",\n                    \"request-received\", \"request-sent\", \"abandoned\", \"done\"\n    thread_id: UUID\n\nReturns\n-------\n    List[PresentationExchange]\n        The list of presentation exchange records"
      operationId: get_proof_records_v1_verifier_proofs_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 10000
                minimum: 1
              - type: 'null'
            description: Number of results to return
            default: 1000
            title: Limit
          description: Number of results to return
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            default: 0
            title: Offset
          description: Offset for pagination
        - name: descending
          in: query
          required: false
          schema:
            type: boolean
            description: Whether to return results in descending order. Results are ordered by record created time.
            default: true
            title: Descending
          description: Whether to return results in descending order. Results are ordered by record created time.
        - name: connection_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Connection Id
        - name: role
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - prover
                  - verifier
                type: string
              - type: 'null'
            title: Role
        - name: state
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - abandoned
                  - done
                  - presentation-received
                  - presentation-sent
                  - proposal-received
                  - proposal-sent
                  - request-received
                  - request-sent
                  - deleted
                type: string
              - type: 'null'
            title: State
        - name: thread_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: 'null'
            title: Thread Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PresentationExchange'
                title: Response Get Proof Records V1 Verifier Proofs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/verifier/proofs/{proof_id}:
    get:
      tags:
        - verifier
      summary: Get a Presentation Exchange Record
      description: "Get a specific presentation exchange record\n---\nThis fetches a specific presentation exchange record by providing the proof ID.\n\nParameters\n----------\n    proof_id: str\n        The proof ID for the presentation request of interest\n\nReturns\n-------\n    PresentationExchange\n        The presentation exchange record for the proof ID"
      operationId: get_proof_record_v1_verifier_proofs__proof_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: proof_id
          in: path
          required: true
          schema:
            type: string
            title: Proof Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationExchange'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - verifier
      summary: Delete a Presentation Exchange Record
      description: "Delete a presentation exchange record\n---\nThis will remove a specific presentation exchange from your storage records.\n\nParameters\n----------\n    proof_id: str\n        The identifier of the presentation exchange record that you want to delete\n\nReturns\n-------\n    status_code: 204"
      operationId: delete_proof_v1_verifier_proofs__proof_id__delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: proof_id
          in: path
          required: true
          schema:
            type: string
            title: Proof Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/verifier/proofs/{proof_id}/credentials:
    get:
      tags:
        - verifier
      summary: Get Matching Credentials for a Proof
      description: "Get matching credentials for a presentation exchange\n---\nThis endpoint returns a list of possible credentials that the prover can use to respond to a given proof request.\n\nThe `presentation_referents` field (in the response) indicates which of the fields\nin the proof request that credential satisfies.\n\nParameters\n----------\n    proof_id: str\n        The relevant proof exchange ID for the prover\n    referent: Optional str\n        The presentation_referent of the proof to match, comma separated str of presentation_referents\n    limit: Optional int\n        The number of credentials to fetch\n    offset: Optional int\n        The index to start fetching credentials from\n\nReturns\n-------\n    List[CredPrecis]\n        A list of applicable credentials"
      operationId: get_credentials_by_proof_id_v1_verifier_proofs__proof_id__credentials_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: proof_id
          in: path
          required: true
          schema:
            type: string
            title: Proof Id
        - name: referent
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Referent
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 10000
                minimum: 1
              - type: 'null'
            description: Number of results to return
            default: 1000
            title: Limit
          description: Number of results to return
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            default: 0
            title: Offset
          description: Offset for pagination
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredPrecis'
                title: Response Get Credentials By Proof Id V1 Verifier Proofs  Proof Id  Credentials Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials:
    get:
      tags:
        - wallet
      summary: Fetch a list of credentials from the wallet
      description: "Fetch a list of credentials from the wallet\n---\n\nThe `wql` (Wallet Query Language) parameter can be used to filter credentials returned from the wallet.\n\nThe following string will look for the credential with the attribute `age` with value `21`:\n\n    {\"attr::age::value\": \"21\"}\n\nOptional Parameters:\n---\n    limit: int\n        The number of records to return.\n    offset: int\n        The number of records to skip before starting to return records.\n    wql: str\n        A WQL query to filter records.\n    check_revoked: bool\n        If set to `True`, the revocation status of each credential will be checked.\n\nReturns\n-------\n    CredInfoList\n        A list of credential records."
      operationId: list_credentials_v1_wallet_credentials_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                maximum: 10000
                minimum: 1
              - type: 'null'
            description: Number of results to return
            default: 1000
            title: Limit
          description: Number of results to return
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            default: 0
            title: Offset
          description: Offset for pagination
        - name: wql
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Wql
        - name: check_revoked
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Check Revoked
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredInfoList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials/{credential_id}:
    get:
      tags:
        - wallet
      summary: Fetch a credential by ID
      description: "Fetch a specific credential by ID\n---\n\nParameters\n----------\n    credential_id: str\n        The ID of the credential to fetch.\n\nReturns\n-------\n    CredInfo\n        The credential record."
      operationId: get_credential_record_v1_wallet_credentials__credential_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredInfo'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - wallet
      summary: Delete a credential by ID
      description: "Remove a specific credential from the wallet by ID\n---\n\nParameters\n----------\n    credential_id: str\n        The ID of the credential to delete.\n\nReturns\n-------\n    status_code: 204"
      operationId: delete_credential_v1_wallet_credentials__credential_id__delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials/{credential_id}/mime-types:
    get:
      tags:
        - wallet
      summary: Retrieve attribute MIME types of a credential
      description: "Retrieve attribute MIME types of a specific credential by ID\n---\n\nParameters\n----------\n    credential_id: str\n        The ID of the credential to fetch attribute MIME types for.\n\nReturns\n-------\n    AttributeMimeTypesResult\n        The attribute MIME types of the credential."
      operationId: get_credential_mime_types_v1_wallet_credentials__credential_id__mime_types_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeMimeTypesResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials/{credential_id}/revocation-status:
    get:
      tags:
        - wallet
      summary: Get revocation status of a credential
      description: "Query the revocation status of a specific credential by ID\n---\n\nThe revocation status of a credential can be queried over a specific time range\nby passing unix timestamps to the `from_` and `to` parameters.\nLeaving these parameters blank will return the current revocation status.\n\nParameters\n----------\n    credential_id: str\n        The ID of the credential to query revocation status for.\n    from_: Optional[str]\n        The timestamp to start the query from.\n    to: Optional[str]\n        The timestamp to end the query at.\n\nReturns\n-------\n    CredRevokedResult\n        The revocation status of the credential."
      operationId: get_credential_revocation_status_v1_wallet_credentials__credential_id__revocation_status_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
        - name: from_
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: 'From '
        - name: to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: To
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevokedResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials/w3c:
    get:
      tags:
        - wallet
      summary: Fetch a list of W3C credentials from the wallet
      description: "Fetch a list of W3C credentials from the wallet\n---\n\nThe W3C credentials can be filtered by the parameters provided.\n\nOptional Parameters:\n---\n    limit: int\n        Maximum number of results to return\n    issuer_did: str\n        Credential issuer did to match\n    schema_ids: List[str]\n        Schema identifiers to match\n\nReturns\n-------\n    VCRecordList\n        A list of W3C credential records."
      operationId: list_w3c_credentials_v1_wallet_credentials_w3c_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Limit
        - name: issuer_did
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer Did
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - type: array
                  items:
                    type: string
                - type: 'null'
              title: Schema Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCRecordList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/credentials/w3c/{credential_id}:
    get:
      tags:
        - wallet
      summary: Fetch a W3C credential by ID
      description: "Fetch a specific W3C credential by ID\n---\n\nParameters\n----------\n    credential_id: str\n        The ID of the W3C credential to fetch.\n\nReturns\n-------\n    VCRecord\n        The W3C credential."
      operationId: get_w3c_credential_v1_wallet_credentials_w3c__credential_id__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCRecord'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - wallet
      summary: Delete W3C credential
      description: "Remove a specific W3C credential from the wallet by ID\n---\n\nParameters\n----------\n    credential_id: str\n        The ID of the W3C credential to delete.\n\nReturns\n-------\n    status_code: 204"
      operationId: delete_w3c_credential_v1_wallet_credentials_w3c__credential_id__delete
      security:
        - APIKeyHeader: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            title: Credential Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/dids:
    get:
      tags:
        - wallet
      summary: List DIDs
      description: "Retrieve List of DIDs\n---\n\nThis endpoint allows you to retrieve a list of DIDs in the wallet.\n\nResponse:\n---\n    Returns a list of DID objects."
      operationId: list_dids_v1_wallet_dids_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DID'
                type: array
                title: Response List Dids V1 Wallet Dids Get
      security:
        - APIKeyHeader: []
    post:
      tags:
        - wallet
      summary: Create Local DID
      description: "Create Local DID\n---\n\nThis endpoint allows you to create a new DID in the wallet.\nThe `method` parameter is optional and can be set to\n'cheqd', 'key', 'web', 'did:peer:2', or 'did:peer:4'.\n\nRequest Body:\n---\n    DIDCreate (Optional):\n        method (str, optional): Method for the requested DID.\n        seed (str, optional): Optional seed for DID.\n        key_type (str, optional): Key type for the DID.\n        did (str, optional): Specific DID value.\n\nResponse:\n---\n    Returns the created DID object."
      operationId: create_did_v1_wallet_dids_post
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/DIDCreate'
                - type: 'null'
              title: Did Create
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DID'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/wallet/dids/public:
    get:
      tags:
        - wallet
      summary: Fetch Public DID
      description: "Fetch the Current Public DID\n---\n\nThis endpoint allows you to fetch the current public DID.\nBy default, only issuers will have public DIDs.\n\nResponse:\n---\n    Returns the public DID."
      operationId: get_public_did_v1_wallet_dids_public_get
      security:
        - APIKeyHeader: []
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DID'
    put:
      tags:
        - wallet
      summary: Set Public DID
      description: "Set the Current Public DID\n---\n\nThis endpoint allows you to set the current public DID.\n\n**Note:**\n    - By default, only issuers can have and update public DIDs.\n\nParameters\n----------\n    did: str\n\nResponse:\n---\n    Returns the public DID."
      operationId: set_public_did_v1_wallet_dids_public_put
      security:
        - APIKeyHeader: []
      parameters:
        - name: did
          in: query
          required: true
          schema:
            type: string
            title: Did
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DID'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/dids/{did}/rotate-keypair:
    patch:
      tags:
        - wallet
      summary: Rotate Key Pair
      description: "Rotate Key Pair for DID\n---\n\nThis endpoint allows you to rotate the key pair for a DID.\n\nParameters\n----------\n    did: str\n\nResponse:\n---\n    204 No Content"
      operationId: rotate_keypair_v1_wallet_dids__did__rotate_keypair_patch
      security:
        - APIKeyHeader: []
      parameters:
        - name: did
          in: path
          required: true
          schema:
            type: string
            title: Did
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/dids/{did}/endpoint:
    get:
      tags:
        - wallet
      summary: Get DID Endpoint
      description: "Get DID Endpoint\n---\n\nThis endpoint allows you to fetch the endpoint for a DID.\n\nParameters\n----------\n    did: str\n\nResponse:\n---\n    Returns the endpoint for the DID."
      operationId: get_did_endpoint_v1_wallet_dids__did__endpoint_get
      security:
        - APIKeyHeader: []
      parameters:
        - name: did
          in: path
          required: true
          schema:
            type: string
            title: Did
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDEndpoint'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - wallet
      summary: Set DID Endpoint
      description: "Update Endpoint of DID in Wallet (and on Ledger, if it is a Public DID)\n---\n\nThis endpoint allows you to update the endpoint for a DID.\n\nParameters\n----------\n    did: str\n\nRequest Body:\n---\n    SetDidEndpointRequest:\n        endpoint: str"
      operationId: set_did_endpoint_v1_wallet_dids__did__endpoint_post
      security:
        - APIKeyHeader: []
      parameters:
        - name: did
          in: path
          required: true
          schema:
            type: string
            title: Did
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDidEndpointRequest'
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/wallet/jws/sign:
    post:
      tags:
        - wallet
      summary: Sign JWS
      description: "Sign a JSON Web Signature (JWS).\n---\n\nThis endpoint allows users to sign a JSON payload, creating a JWS,\nusing either a DID or a specific verification method.\n\n**Usage:**\n\n- **DID-Based Signing:** Provide the `did` field with a valid DID.\nThe Aries agent will automatically select the appropriate verification key associated with the DID.\n\n- **Verification Method-Based Signing:** Provide the `verification_method` field with a specific verification method\n(DID with a verkey) to explicitly specify which key to use for signing.\n\n**Notes:**\n\n- The `header` field is optional. While you can specify custom headers, the `typ`, `alg`,\n  and `kid` fields are automatically populated by the Aries agent based on the signing method.\n\nExample request body:\n```json\n{\n    \"did\": \"did:cheqd:...\",\n    \"payload\": {\n        \"credential_subject\": \"reference_to_holder\",\n        \"name\": \"Alice\",\n        \"surname\": \"Demo\"\n    }\n}\n```\n**OR**\n```json\n{\n    \"payload\": {\n        \"subject\": \"reference_to_holder\",\n        \"name\": \"Alice\",\n        \"surname\": \"Demo\"\n    },\n    \"verification_method\": \"did:key:z6Mkprf81ujG1n48n5LMD...M6S3#z6Mkprf81ujG1n48n5LMDaxyCLLFrnqCRBPhkTWsPfA8M6S3\"\n}\n```\n\nRequest Body:\n---\n    JWSCreateRequest:\n        `did` (str, optional): The DID to sign the JWS with.\n        `verification_method` (str, optional): The verification method (DID with verkey) to use for signing.\n        `payload` (dict): The JSON payload to be signed.\n        `headers` (dict, optional): Custom headers for the JWS.\n\nResponse:\n---\n    JWSCreateResponse:\n        `jws` (str): The resulting JWS string representing the signed JSON Web Signature.\n\n**References:**\n\n- [JSON Web Signature (JWS) Specification](https://www.rfc-editor.org/rfc/rfc7515.html)"
      operationId: sign_jws_v1_wallet_jws_sign_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JWSCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWSCreateResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/wallet/jws/verify:
    post:
      tags:
        - wallet
      summary: Verify JWS
      description: "Verify a JSON Web Signature (JWS)\n---\n\nThis endpoint allows users to verify the authenticity and integrity of a JWS string previously generated\nby the /sign endpoint. It decodes the JWS to retrieve the payload and headers and assesses its validity.\n\nRequest Body:\n---\n    JWSVerifyRequest: The JWS to verify.\n        jws: str\n\nReturns\n-------\n    JWSVerifyResponse\n        payload: dict:\n          The payload of the JWS.\n        headers: dict:\n          The headers of the JWS.\n        kid: str:\n          The key id of the signer.\n        valid: bool:\n          Whether the JWS is valid.\n        error: str:\n          The error message if the JWS is invalid.\n\n**References:**\n\n- [JSON Web Signature (JWS) Specification](https://www.rfc-editor.org/rfc/rfc7515.html)"
      operationId: verify_jws_v1_wallet_jws_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JWSVerifyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWSVerifyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/wallet/sd-jws/sign:
    post:
      tags:
        - wallet
      summary: Sign SD-JWS
      description: "Sign a Selective Disclosure JSON Web Signature (SD-JWS).\n---\n\nThis endpoint allows users to create a Selective Disclosure JSON Web Signature (SD-JWS).\nThe SD-JWS enables the selective disclosure of specific attributes to a verifier while keeping others confidential.\n\n**Usage:**\n\n- **DID-Based Signing:** Provide the `did` field with a valid DID.\nThe Aries agent will automatically select the appropriate verification key associated with the DID.\n\n- **Verification Method-Based Signing:** Provide the `verification_method` field with a specific verification method\n(DID with verkey) to explicitly specify which key to use for signing.\n\n**Notes:**\n\n- The `headers` field is optional. Custom headers can be specified, but the `typ`, `alg`,\n  and `kid` fields are automatically populated by the Aries agent based on the signing method.\n- The `non_sd_list` field specifies attributes that are **not** selectively disclosed.\n  Attributes listed here will always be included in the SD-JWS.\n\n**Non-Selective Disclosure (`non_sd_list`):**\n\n- To exclude list elements:\n    - Use the format `\"<attribute_name>[start:end]\"` where `start` and `end` define the range\n      (e.g., `\"nationalities[1:3]\"`).\n- To exclude specific dictionary attributes:\n    - Use the format `\"<dictionary_name>.<attribute_name>\"` (e.g., `\"address.street_address\"`).\n\n**Example Request Body:**\n```json\n{\n    \"did\": \"did:cheqd:...\",\n    \"payload\": {\n        \"credential_subject\": \"reference_to_holder\",\n        \"given_name\": \"John\",\n        \"family_name\": \"Doe\",\n        \"email\": \"johndoe@example.com\",\n        \"phone_number\": \"+27-123-4567\",\n        \"nationalities\": [\"a\",\"b\",\"c\",\"d\"],\n        \"address\": {\n            \"street_address\": \"123 Main St\",\n            \"locality\": \"Anytown\",\n            \"region\": \"Anywhere\",\n            \"country\": \"ZA\"\n        },\n        \"birthdate\": \"1940-01-01\"\n    },\n    \"non_sd_list\": [\n        \"given_name\",\n        \"address\",\n        \"address.street_address\",\n        \"nationalities\",\n        \"nationalities[1:3]\"\n    ]\n}\n```\n\nRequest Body:\n---\n    SDJWSCreateRequest:\n        `did` (str, optional): The DID to sign the SD-JWS with.\n        `verification_method` (str, optional): The verification method (DID with verkey) to use for signing.\n        `payload` (dict): The JSON payload to be signed.\n        `headers` (dict, optional): Custom headers for the SD-JWS.\n        `non_sd_list` (List[str], optional): List of attributes excluded from selective disclosure.\n\nResponse:\n---\n    SDJWSCreateResponse:\n        `sd_jws` (str): The resulting SD-JWS string concatenated with the necessary disclosures in the format\n        `<Issuer-signed JWS>~<Disclosure 1>~<Disclosure 2>~...~<Disclosure N>`.\n\n**References:**\n\n- [Selective Disclosure JSON Web Token (SD-JWT)\n  Specification](https://www.ietf.org/archive/id/draft-ietf-oauth-selective-disclosure-jwt-07.html)"
      operationId: sign_sd_jws_v1_wallet_sd_jws_sign_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SDJWSCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDJWSCreateResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/wallet/sd-jws/verify:
    post:
      tags:
        - wallet
      summary: Verify SD-JWS
      description: "Verify a Selective Disclosure JSON Web Signature (SD-JWS).\n---\n\nThis endpoint allows users to verify the authenticity and integrity of a Selective Disclosure\nJSON Web Signature (SD-JWS). It decodes the SD-JWS to retrieve the payload and headers,\nassesses its validity, and processes the disclosures.\n\n**Usage:**\n\n- Submit the SD-JWS string concatenated with the necessary disclosures to this endpoint.\n- The format should be: `<Issuer-signed JWS>~<Disclosure 1>~<Disclosure 2>~...~<Disclosure N>`.\n- The holder provides the SD-JWS along with the required disclosures based on the verifier's request.\n\n**Notes:**\n\n- Only the disclosures relevant to the verifier's request needs to be provided.\n  Other disclosures can remain confidential.\n\n**Example Request Body:**\n```json\n{\n    \"sd_jws\": \"<Issuer-signed JWS>~<Disclosure 1>~<Disclosure 2>~...~<Disclosure N>\"\n}\n```\n\nRequest Body:\n---\n    SDJWSVerifyRequest:\n        `sd_jws` (str): The concatenated SD-JWS and disclosures to verify and reveal.\n\nResponse:\n---\n    SDJWSVerifyResponse:\n        `valid` (bool): Indicates whether the SD-JWS is valid.\n        `payload` (dict): The decoded payload of the SD-JWS.\n        `headers` (dict): The headers extracted from the SD-JWS.\n        `kid` (str): The Key ID of the signer.\n        `disclosed_attributes` (dict): The selectively disclosed attributes based on the provided disclosures.\n        `error` (str, optional): Error message if the SD-JWS verification fails.\n\n**References:**\n\n- [Selective Disclosure JSON Web Token (SD-JWT)\n  Specification](https://www.ietf.org/archive/id/draft-ietf-oauth-selective-disclosure-jwt-07.html)"
      operationId: verify_sd_jws_v1_wallet_sd_jws_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SDJWSVerifyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SDJWSVerifyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /v1/sse/{wallet_id}/{topic}/{field}/{field_id}/{desired_state}:
    get:
      tags:
        - sse
      summary: Subscribe To A Wallet Event By Topic, Field, And Desired State
      description: "Subscribe to SSE events wait for a desired state with a field filter.\n---\n***This endpoint can't be called on the swagger UI, as it requires a stream response.***\n\nWait for a desired state to be reached for some event for this wallet and topic,\nfiltering for payloads that contain `field:field_id`.\n\nexample: `/{wallet_id}/credentials/connection_id/some-uuid/done` will stream a credential exchange event on a\nspecific connection with state done.\nThe field and field ID pair must be present in the payload (other than state) for the event to be streamed.\nThe stream will be closed after the event is returned.\n\nParameters\n----------\n    wallet_id:\n        The ID of the wallet subscribing to the events.\n    topic:\n        The topic to which the wallet is subscribing.\n    field:\n        The field to which the wallet is subscribing.\n    field_id:\n        The ID of the field subscribing to the events.\n    desired_state:\n        The desired state to be reached.\n    look_back:\n        Number of seconds to look back for events before subscribing."
      operationId: Subscribe_to_a_Wallet_Event_by_Topic__Field__and_Desired_State_v1_sse__wallet_id___topic___field___field_id___desired_state__get
      security:
        - APIKeyHeader: []
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            title: Wallet Id
        - name: topic
          in: path
          required: true
          schema:
            type: string
            title: Topic
        - name: field
          in: path
          required: true
          schema:
            type: string
            title: Field
        - name: field_id
          in: path
          required: true
          schema:
            type: string
            title: Field Id
        - name: desired_state
          in: path
          required: true
          schema:
            type: string
            title: Desired State
        - name: look_back
          in: query
          required: false
          schema:
            type: integer
            description: Number of seconds to look back for events
            default: 60
            title: Look Back
          description: Number of seconds to look back for events
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AcceptOobInvitation:
      properties:
        alias:
          anyOf:
            - type: string
            - type: 'null'
          title: Alias
        use_existing_connection:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Use Existing Connection
        invitation:
          $ref: '#/components/schemas/InvitationMessage-Input'
      type: object
      required:
        - invitation
      title: AcceptOobInvitation
    AcceptProofRequest:
      properties:
        save_exchange_record:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
        proof_id:
          type: string
          title: Proof Id
        anoncreds_presentation_spec:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresSpec'
            - type: 'null'
        dif_presentation_spec:
          anyOf:
            - $ref: '#/components/schemas/DIFPresSpec'
            - type: 'null'
      type: object
      required:
        - proof_id
      title: AcceptProofRequest
    AnonCredsCredential:
      properties:
        credential_definition_id:
          type: string
          title: Credential Definition Id
        issuer_did:
          anyOf:
            - type: string
            - type: 'null'
          title: Issuer Did
          description: The DID to use as the issuer of the credential. If not provided, the public DID of the issuer wallet will be used.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Attributes
      type: object
      required:
        - credential_definition_id
        - attributes
      title: AnonCredsCredential
    AnonCredsPresSpec:
      properties:
        requested_attributes:
          additionalProperties:
            $ref: '#/components/schemas/AnonCredsRequestedCredsRequestedAttr'
          type: object
          title: Requested Attributes
          description: Nested object mapping proof request attribute referents to requested-attribute specifiers
        requested_predicates:
          additionalProperties:
            $ref: '#/components/schemas/AnonCredsRequestedCredsRequestedPred'
          type: object
          title: Requested Predicates
          description: Nested object mapping proof request predicate referents to requested-predicate specifiers
        self_attested_attributes:
          additionalProperties:
            type: string
          type: object
          title: Self Attested Attributes
          description: Self-attested attributes to build into proof
        trace:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Trace
          description: Whether to trace event (default false)
      type: object
      required:
        - requested_attributes
        - requested_predicates
        - self_attested_attributes
      title: AnonCredsPresSpec
      description: AnonCredsPresSpec
    AnonCredsPresentationReqAttrSpec:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Attribute name
        names:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Names
          description: Attribute name group
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresentationReqAttrSpecNonRevoked'
            - type: 'null'
        restrictions:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: 'null'
          title: Restrictions
          description: 'If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name'
      type: object
      title: AnonCredsPresentationReqAttrSpec
      description: AnonCredsPresentationReqAttrSpec
    AnonCredsPresentationReqAttrSpecNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: AnonCredsPresentationReqAttrSpecNonRevoked
      description: AnonCredsPresentationReqAttrSpecNonRevoked
    AnonCredsPresentationReqPredSpec:
      properties:
        name:
          type: string
          title: Name
          description: Attribute name
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresentationReqPredSpecNonRevoked'
            - type: 'null'
        p_type:
          type: string
          title: P Type
          description: Predicate type ('<', '<=', '>=', or '>')
        p_value:
          type: integer
          title: P Value
          description: Threshold value
        restrictions:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: 'null'
          title: Restrictions
          description: 'If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name'
      type: object
      required:
        - name
        - p_type
        - p_value
      title: AnonCredsPresentationReqPredSpec
      description: AnonCredsPresentationReqPredSpec
    AnonCredsPresentationReqPredSpecNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: AnonCredsPresentationReqPredSpecNonRevoked
      description: AnonCredsPresentationReqPredSpecNonRevoked
    AnonCredsPresentationRequest:
      properties:
        name:
          type: string
          title: Name
          description: Proof request name
          default: Proof
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresentationRequestNonRevoked'
            - type: 'null'
        nonce:
          anyOf:
            - type: string
            - type: 'null'
          title: Nonce
          description: Nonce
        requested_attributes:
          additionalProperties:
            $ref: '#/components/schemas/AnonCredsPresentationReqAttrSpec'
          type: object
          title: Requested Attributes
          description: Requested attribute specifications of proof request
        requested_predicates:
          additionalProperties:
            $ref: '#/components/schemas/AnonCredsPresentationReqPredSpec'
          type: object
          title: Requested Predicates
          description: Requested predicate specifications of proof request
        version:
          type: string
          title: Version
          description: Proof request version
          default: '1.0'
      type: object
      required:
        - requested_attributes
        - requested_predicates
      title: AnonCredsPresentationRequest
    AnonCredsPresentationRequestNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: AnonCredsPresentationRequestNonRevoked
      description: AnonCredsPresentationRequestNonRevoked
    AnonCredsRequestedCredsRequestedAttr:
      properties:
        cred_id:
          type: string
          title: Cred Id
          description: Wallet credential identifier (typically but not necessarily a UUID)
        revealed:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Revealed
          description: Whether to reveal attribute in proof (default true)
      type: object
      required:
        - cred_id
      title: AnonCredsRequestedCredsRequestedAttr
      description: AnonCredsRequestedCredsRequestedAttr
    AnonCredsRequestedCredsRequestedPred:
      properties:
        cred_id:
          type: string
          title: Cred Id
          description: Wallet credential identifier (typically but not necessarily a UUID)
        timestamp:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: Timestamp
          description: Epoch timestamp of interest for non-revocation proof
      type: object
      required:
        - cred_id
      title: AnonCredsRequestedCredsRequestedPred
      description: AnonCredsRequestedCredsRequestedPred
    AttachDecorator-Input:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Attachment identifier
        byte_count:
          anyOf:
            - type: integer
            - type: 'null'
          title: Byte Count
          description: Byte count of data included by reference
        data:
          $ref: '#/components/schemas/AttachDecoratorData-Input'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: Human-readable description of content
        filename:
          anyOf:
            - type: string
            - type: 'null'
          title: Filename
          description: File name
        lastmod_time:
          anyOf:
            - type: string
            - type: 'null'
          title: Lastmod Time
          description: Hint regarding last modification datetime, in ISO-8601 format
        mime-type:
          anyOf:
            - type: string
            - type: 'null'
          title: Mime-Type
          description: MIME type
      type: object
      required:
        - data
      title: AttachDecorator
      description: AttachDecorator
    AttachDecorator-Output:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Attachment identifier
        byte_count:
          anyOf:
            - type: integer
            - type: 'null'
          title: Byte Count
          description: Byte count of data included by reference
        data:
          $ref: '#/components/schemas/AttachDecoratorData-Output'
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: Human-readable description of content
        filename:
          anyOf:
            - type: string
            - type: 'null'
          title: Filename
          description: File name
        lastmod_time:
          anyOf:
            - type: string
            - type: 'null'
          title: Lastmod Time
          description: Hint regarding last modification datetime, in ISO-8601 format
        mime-type:
          anyOf:
            - type: string
            - type: 'null'
          title: Mime-Type
          description: MIME type
      type: object
      required:
        - data
      title: AttachDecorator
      description: AttachDecorator
    AttachDecoratorData-Input:
      properties:
        base64:
          anyOf:
            - type: string
            - type: 'null'
          title: Base64
          description: Base64-encoded data
        json:
          anyOf:
            - additionalProperties: true
              type: object
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Json
          description: JSON-serialized data
        jws:
          anyOf:
            - $ref: '#/components/schemas/AttachDecoratorDataJWS-Input'
            - type: 'null'
          description: Detached Java Web Signature
        links:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Links
          description: List of hypertext links to data
        sha256:
          anyOf:
            - type: string
            - type: 'null'
          title: Sha256
          description: SHA256 hash (binhex encoded) of content
      type: object
      title: AttachDecoratorData
      description: AttachDecoratorData
    AttachDecoratorData-Output:
      properties:
        base64:
          anyOf:
            - type: string
            - type: 'null'
          title: Base64
          description: Base64-encoded data
        json:
          anyOf:
            - additionalProperties: true
              type: object
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Json
          description: JSON-serialized data
        jws:
          anyOf:
            - $ref: '#/components/schemas/AttachDecoratorDataJWS-Output'
            - type: 'null'
          description: Detached Java Web Signature
        links:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Links
          description: List of hypertext links to data
        sha256:
          anyOf:
            - type: string
            - type: 'null'
          title: Sha256
          description: SHA256 hash (binhex encoded) of content
      type: object
      title: AttachDecoratorData
      description: AttachDecoratorData
    AttachDecoratorData1JWS:
      properties:
        header:
          $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
        protected:
          anyOf:
            - type: string
            - type: 'null'
          title: Protected
          description: protected JWS header
        signature:
          type: string
          title: Signature
          description: signature
      type: object
      required:
        - header
        - signature
      title: AttachDecoratorData1JWS
      description: AttachDecoratorData1JWS
    AttachDecoratorDataJWS-Input:
      properties:
        header:
          anyOf:
            - $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
            - type: 'null'
        protected:
          anyOf:
            - type: string
            - type: 'null'
          title: Protected
          description: protected JWS header
        signature:
          anyOf:
            - type: string
            - type: 'null'
          title: Signature
          description: signature
        signatures:
          anyOf:
            - items:
                $ref: '#/components/schemas/AttachDecoratorData1JWS'
              type: array
            - type: 'null'
          title: Signatures
          description: List of signatures
      type: object
      title: AttachDecoratorDataJWS
      description: AttachDecoratorDataJWS
    AttachDecoratorDataJWS-Output:
      properties:
        header:
          anyOf:
            - $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
            - type: 'null'
        protected:
          anyOf:
            - type: string
            - type: 'null'
          title: Protected
          description: protected JWS header
        signature:
          anyOf:
            - type: string
            - type: 'null'
          title: Signature
          description: signature
        signatures:
          anyOf:
            - items:
                $ref: '#/components/schemas/AttachDecoratorData1JWS'
              type: array
            - type: 'null'
          title: Signatures
          description: List of signatures
      type: object
      title: AttachDecoratorDataJWS
      description: AttachDecoratorDataJWS
    AttachDecoratorDataJWSHeader:
      properties:
        kid:
          type: string
          title: Kid
          description: Key identifier, in W3C did:key or DID URL format
      type: object
      required:
        - kid
      title: AttachDecoratorDataJWSHeader
      description: AttachDecoratorDataJWSHeader
    AttachmentDef:
      properties:
        id:
          anyOf:
            - type: string
            - type: 'null'
          title: Id
          description: Attachment identifier
        type:
          anyOf:
            - type: string
            - type: 'null'
          title: Type
          description: Attachment type
      type: object
      title: AttachmentDef
      description: AttachmentDef
    AttributeMimeTypesResult:
      properties:
        results:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Results
      type: object
      title: AttributeMimeTypesResult
      description: AttributeMimeTypesResult
    ClaimFormat:
      properties:
        di_vc:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Di Vc
        jwt:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Jwt
        jwt_vc:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Jwt Vc
        jwt_vp:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Jwt Vp
        ldp:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Ldp
        ldp_vc:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Ldp Vc
        ldp_vp:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Ldp Vp
      type: object
      title: ClaimFormat
      description: ClaimFormat
    ClearPendingRevocationsRequest:
      properties:
        revocation_registry_credential_map:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          title: Revocation Registry Credential Map
          description: A map of revocation registry IDs to lists of credential revocation IDs for which pending revocations should be cleared. Providing an empty list for a registry ID clears all pending revocations for that ID. An empty dictionary signifies that the action should be applied to clear all pending revocations across all registry IDs.
          default: {}
      type: object
      title: ClearPendingRevocationsRequest
    ClearPendingRevocationsResult:
      properties:
        revocation_registry_credential_map:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          title: Revocation Registry Credential Map
          description: The resulting revocations that are still pending after a clear-pending request has been completed.
      type: object
      required:
        - revocation_registry_credential_map
      title: ClearPendingRevocationsResult
    ConnectToPublicDid:
      properties:
        public_did:
          type: string
          title: Public Did
      type: object
      required:
        - public_did
      title: ConnectToPublicDid
    Connection:
      properties:
        alias:
          anyOf:
            - type: string
            - type: 'null'
          title: Alias
        connection_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Connection Id
        connection_protocol:
          anyOf:
            - type: string
              enum:
                - didexchange/1.0
                - didexchange/1.1
            - type: 'null'
          title: Connection Protocol
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
        error_msg:
          anyOf:
            - type: string
            - type: 'null'
          title: Error Msg
        invitation_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Invitation Key
        invitation_mode:
          anyOf:
            - type: string
              enum:
                - once
                - multi
                - static
            - type: 'null'
          title: Invitation Mode
        invitation_msg_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Invitation Msg Id
        my_did:
          anyOf:
            - type: string
            - type: 'null'
          title: My Did
        state:
          anyOf:
            - type: string
            - type: 'null'
          title: State
        their_did:
          anyOf:
            - type: string
            - type: 'null'
          title: Their Did
        their_label:
          anyOf:
            - type: string
            - type: 'null'
          title: Their Label
        their_public_did:
          anyOf:
            - type: string
            - type: 'null'
          title: Their Public Did
        their_role:
          anyOf:
            - type: string
              enum:
                - invitee
                - requester
                - inviter
                - responder
            - type: 'null'
          title: Their Role
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
      type: object
      title: Connection
    Constraints:
      properties:
        fields:
          anyOf:
            - items:
                $ref: '#/components/schemas/DIFField'
              type: array
            - type: 'null'
          title: Fields
        is_holder:
          anyOf:
            - items:
                $ref: '#/components/schemas/DIFHolder'
              type: array
            - type: 'null'
          title: Is Holder
        limit_disclosure:
          anyOf:
            - type: string
            - type: 'null'
          title: Limit Disclosure
          description: LimitDisclosure
        status_active:
          anyOf:
            - type: string
            - type: 'null'
          title: Status Active
        status_revoked:
          anyOf:
            - type: string
            - type: 'null'
          title: Status Revoked
        status_suspended:
          anyOf:
            - type: string
            - type: 'null'
          title: Status Suspended
        subject_is_issuer:
          anyOf:
            - type: string
            - type: 'null'
          title: Subject Is Issuer
          description: SubjectIsIssuer
      type: object
      title: Constraints
      description: Constraints
    CreateCredentialDefinition:
      properties:
        schema_id:
          type: string
          title: Schema Id
          examples:
            - CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3
        tag:
          type: string
          title: Tag
          examples:
            - default
        support_revocation:
          type: boolean
          title: Support Revocation
          default: false
      type: object
      required:
        - schema_id
        - tag
      title: CreateCredentialDefinition
    CreateOffer:
      properties:
        save_exchange_record:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
        ld_credential_detail:
          anyOf:
            - $ref: '#/components/schemas/LDProofVCDetail'
            - type: 'null'
        anoncreds_credential_detail:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsCredential'
            - type: 'null'
      type: object
      title: CreateOffer
    CreateOobInvitation:
      properties:
        alias:
          anyOf:
            - type: string
            - type: 'null'
          title: Alias
        multi_use:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Multi Use
        use_public_did:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Use Public Did
        attachments:
          anyOf:
            - items:
                $ref: '#/components/schemas/AttachmentDef'
              type: array
            - type: 'null'
          title: Attachments
        create_connection:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Create Connection
      type: object
      title: CreateOobInvitation
    CreateProofRequest:
      properties:
        save_exchange_record:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
        anoncreds_proof_request:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresentationRequest'
            - type: 'null'
        dif_proof_request:
          anyOf:
            - $ref: '#/components/schemas/DIFProofRequest'
            - type: 'null'
      type: object
      title: CreateProofRequest
    CreateSchema:
      properties:
        schema_type:
          $ref: '#/components/schemas/SchemaType'
          description: The type of schema to create. Currently only 'anoncreds' is supported.
          default: anoncreds
        name:
          type: string
          title: Name
          examples:
            - test_schema
        version:
          type: string
          title: Version
          examples:
            - '0.3'
        attribute_names:
          items:
            type: string
          type: array
          title: Attribute Names
          examples:
            - - name
              - age
      type: object
      required:
        - name
        - version
        - attribute_names
      title: CreateSchema
    CredInfo:
      properties:
        attrs:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Attrs
          description: Attribute names and value
        cred_def_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Def Id
          description: Credential definition identifier
        credential_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Credential Id
          description: Credential identifier
        cred_rev_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Rev Id
          description: Credential revocation identifier
        rev_reg_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Rev Reg Id
          description: Revocation registry identifier
        schema_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Schema Id
          description: Schema identifier
        revocation_status:
          anyOf:
            - $ref: '#/components/schemas/RevocationStatus'
            - type: 'null'
          description: Revocation status of the credential
      type: object
      title: CredInfo
    CredInfoList:
      properties:
        results:
          anyOf:
            - items:
                $ref: '#/components/schemas/CredInfo'
              type: array
            - type: 'null'
          title: Results
      type: object
      title: CredInfoList
    CredPrecis:
      properties:
        cred_info:
          $ref: '#/components/schemas/CredInfo'
          description: Credential info
        interval:
          anyOf:
            - $ref: '#/components/schemas/NonRevocationInterval'
            - type: 'null'
          description: Non-revocation interval from presentation request
        presentation_referents:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Presentation Referents
          description: Presentation referents
      type: object
      required:
        - cred_info
      title: CredPrecis
    CredRevokedResult:
      properties:
        revoked:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Revoked
          description: Whether credential is revoked on the ledger
      type: object
      title: CredRevokedResult
      description: CredRevokedResult
    Credential:
      properties:
        '@context':
          items:
            anyOf:
              - type: string
              - additionalProperties: true
                type: object
          type: array
          title: '@Context'
          description: The JSON-LD context of the credential
        credentialStatus:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Credentialstatus
        credentialSubject:
          additionalProperties: true
          type: object
          title: Credentialsubject
        expirationDate:
          anyOf:
            - type: string
            - type: 'null'
          title: Expirationdate
          description: The expiration date
        id:
          anyOf:
            - type: string
            - type: 'null'
          title: Id
          description: The ID of the credential
        issuanceDate:
          anyOf:
            - type: string
            - type: 'null'
          title: Issuancedate
          description: The issuance date
        issuer:
          anyOf:
            - type: string
            - additionalProperties: true
              type: object
          title: Issuer
          description: The JSON-LD Verifiable Credential Issuer. Either string of object with id field.
        proof:
          anyOf:
            - $ref: '#/components/schemas/LinkedDataProof'
            - type: 'null'
          description: The proof of the credential
        type:
          items:
            type: string
          type: array
          title: Type
          description: The JSON-LD type of the credential
        validFrom:
          anyOf:
            - type: string
            - type: 'null'
          title: Validfrom
          description: The valid from date
        validUntil:
          anyOf:
            - type: string
            - type: 'null'
          title: Validuntil
          description: The valid until date
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      required:
        - '@context'
        - credentialSubject
        - issuer
        - type
      title: Credential
      description: Credential
    CredentialDefinition:
      properties:
        id:
          type: string
          title: Id
          examples:
            - 5Q1Zz9foMeAA8Q7mrmzCfZ:3:CL:7:default
        tag:
          type: string
          title: Tag
          examples:
            - default
        schema_id:
          type: string
          title: Schema Id
          examples:
            - CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3
      type: object
      required:
        - id
        - tag
        - schema_id
      title: CredentialDefinition
    CredentialExchange:
      properties:
        attributes:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Attributes
        connection_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Connection Id
        created_at:
          type: string
          title: Created At
        credential_definition_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Credential Definition Id
        credential_exchange_id:
          type: string
          title: Credential Exchange Id
        did:
          anyOf:
            - type: string
            - type: 'null'
          title: Did
        error_msg:
          anyOf:
            - type: string
            - type: 'null'
          title: Error Msg
        role:
          type: string
          enum:
            - issuer
            - holder
          title: Role
        schema_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Schema Id
        state:
          anyOf:
            - type: string
              enum:
                - proposal-sent
                - proposal-received
                - offer-sent
                - offer-received
                - request-sent
                - request-received
                - credential-issued
                - credential-received
                - credential-revoked
                - abandoned
                - done
                - deleted
            - type: 'null'
          title: State
        thread_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Thread Id
        type:
          type: string
          title: Type
          default: anoncreds
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
      type: object
      required:
        - created_at
        - credential_exchange_id
        - role
      title: CredentialExchange
    CredentialSchema:
      properties:
        id:
          type: string
          title: Id
          examples:
            - CXQseFxV34pcb8vf32XhEa:2:test_schema:0.3
        name:
          type: string
          title: Name
          examples:
            - test_schema
        version:
          type: string
          title: Version
          examples:
            - '0.3'
        attribute_names:
          items:
            type: string
          type: array
          title: Attribute Names
          examples:
            - - name
              - age
      type: object
      required:
        - id
        - name
        - version
        - attribute_names
      title: CredentialSchema
    CredentialStatusOptions:
      properties:
        type:
          type: string
          title: Type
          description: Credential status method type to use for the credential. Should match status method registered in the Verifiable Credential Extension Registry
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      required:
        - type
      title: CredentialStatusOptions
      description: CredentialStatusOptions
    DID:
      properties:
        did:
          type: string
          title: Did
          description: DID of interest
        key_type:
          type: string
          enum:
            - ed25519
            - x25519
            - bls12381g1
            - bls12381g2
            - bls12381g1g2
          title: Key Type
          description: Key type associated with the DID
        metadata:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Metadata
          description: Additional metadata associated with the DID
        method:
          type: string
          enum:
            - sov
            - key
            - web
            - did:peer:2
            - did:peer:4
            - cheqd
          title: Method
          description: Did method associated with the DID
        posture:
          type: string
          enum:
            - public
            - posted
            - wallet_only
          title: Posture
          description: Whether DID is current public DID, posted to ledger but not current public DID, or local to the wallet
        verkey:
          type: string
          title: Verkey
          description: Public verification key
      type: object
      required:
        - did
        - key_type
        - method
        - posture
        - verkey
      title: DID
      description: DID
    DIDCreate:
      properties:
        method:
          type: string
          title: Method
          description: Method for the requested DID. Supported methods are cheqd, key, web, did:peer:2, did:peer:4.
          default: cheqd
          examples:
            - cheqd
            - key
            - web
            - did:peer:2
            - did:peer:4
        seed:
          anyOf:
            - type: string
            - type: 'null'
          title: Seed
          description: Optional seed to use for DID. Must be enabled in configuration before use.
        key_type:
          type: string
          title: Key Type
          description: Key type to use for the DID key_pair. Validated with the chosen DID method's supported key types.
          default: ed25519
          examples:
            - ed25519
            - bls12381g2
        did:
          anyOf:
            - type: string
            - type: 'null'
          title: Did
          description: Specify the final value of DID (including `did:<method>:` prefix) if the method supports it.
        network:
          anyOf:
            - type: string
              enum:
                - mainnet
                - testnet
            - type: 'null'
          title: Network
          description: Specify the network to use for Cheqd DIDs. Valid values are `mainnet` and `testnet`.
          examples:
            - mainnet
            - testnet
      type: object
      title: DIDCreate
    DIDEndpoint:
      properties:
        did:
          type: string
          title: Did
          description: DID of interest
        endpoint:
          anyOf:
            - type: string
            - type: 'null'
          title: Endpoint
          description: Endpoint to set (omit to delete)
      type: object
      required:
        - did
      title: DIDEndpoint
      description: DIDEndpoint
    DIDXRejectRequest:
      properties:
        reason:
          anyOf:
            - type: string
            - type: 'null'
          title: Reason
          description: Reason for rejecting the DID Exchange
      type: object
      title: DIDXRejectRequest
      description: DIDXRejectRequest
    DIFField:
      properties:
        filter:
          anyOf:
            - $ref: '#/components/schemas/Filter'
            - type: 'null'
        id:
          anyOf:
            - type: string
            - type: 'null'
          title: Id
          description: ID
        path:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Path
        predicate:
          anyOf:
            - type: string
            - type: 'null'
          title: Predicate
          description: Preference
        purpose:
          anyOf:
            - type: string
            - type: 'null'
          title: Purpose
          description: Purpose
      type: object
      title: DIFField
      description: DIFField
    DIFHolder:
      properties:
        directive:
          anyOf:
            - type: string
            - type: 'null'
          title: Directive
          description: Preference
        field_id:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Field Id
      type: object
      title: DIFHolder
      description: DIFHolder
    DIFOptions:
      properties:
        challenge:
          anyOf:
            - type: string
            - type: 'null'
          title: Challenge
          description: Challenge protect against replay attack
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
          description: Domain protect against replay attack
      type: object
      title: DIFOptions
      description: DIFOptions
    DIFPresSpec:
      properties:
        issuer_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Issuer Id
          description: Issuer identifier to sign the presentation, if different from current public DID
        presentation_definition:
          anyOf:
            - $ref: '#/components/schemas/PresentationDefinition'
            - type: 'null'
        record_ids:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Record Ids
          description: Mapping of input_descriptor id to list of stored W3C credential record_id
        reveal_doc:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Reveal Doc
          description: reveal doc [JSON-LD frame] dict used to derive the credential when selective disclosure is required
      type: object
      title: DIFPresSpec
      description: DIFPresSpec
    DIFProofRequest:
      properties:
        options:
          anyOf:
            - $ref: '#/components/schemas/DIFOptions'
            - type: 'null'
        presentation_definition:
          $ref: '#/components/schemas/PresentationDefinition'
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      required:
        - presentation_definition
      title: DIFProofRequest
      description: DIFProofRequest
    EQProof:
      properties:
        a_prime:
          anyOf:
            - type: string
            - type: 'null'
          title: A Prime
        e:
          anyOf:
            - type: string
            - type: 'null'
          title: E
        m:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: M
        m2:
          anyOf:
            - type: string
            - type: 'null'
          title: M2
        revealed_attrs:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Revealed Attrs
        v:
          anyOf:
            - type: string
            - type: 'null'
          title: V
      type: object
      title: EQProof
    Filter:
      properties:
        const:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: 'null'
          title: Const
          description: Const
        enum:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              type: array
            - type: 'null'
          title: Enum
        exclusiveMaximum:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: 'null'
          title: Exclusivemaximum
          description: ExclusiveMaximum
        exclusiveMinimum:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: 'null'
          title: Exclusiveminimum
          description: ExclusiveMinimum
        format:
          anyOf:
            - type: string
            - type: 'null'
          title: Format
          description: Format
        maxLength:
          anyOf:
            - type: integer
            - type: 'null'
          title: Maxlength
          description: Max Length
        maximum:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: 'null'
          title: Maximum
          description: Maximum
        minLength:
          anyOf:
            - type: integer
            - type: 'null'
          title: Minlength
          description: Min Length
        minimum:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: 'null'
          title: Minimum
          description: Minimum
        not:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Not
          description: Not
        pattern:
          anyOf:
            - type: string
            - type: 'null'
          title: Pattern
          description: Pattern
        type:
          anyOf:
            - type: string
            - type: 'null'
          title: Type
          description: Type
      type: object
      title: Filter
      description: Filter
    GEProof:
      properties:
        alpha:
          anyOf:
            - type: string
            - type: 'null'
          title: Alpha
        mj:
          anyOf:
            - type: string
            - type: 'null'
          title: Mj
        predicate:
          anyOf:
            - $ref: '#/components/schemas/GEProofPred'
            - type: 'null'
        r:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: R
        t:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: T
        u:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: U
      type: object
      title: GEProof
    GEProofPred:
      properties:
        attr_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Attr Name
          description: Attribute name
        p_type:
          anyOf:
            - type: string
            - type: 'null'
          title: P Type
          description: Predicate type
        value:
          anyOf:
            - type: integer
            - type: 'null'
          title: Value
          description: Predicate threshold value
      type: object
      title: GEProofPred
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Hangup:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Message identifier
        '@type':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Type'
          description: Message type
      type: object
      title: Hangup
      description: Hangup
    InputDescriptors:
      properties:
        constraints:
          anyOf:
            - $ref: '#/components/schemas/Constraints'
            - type: 'null'
        group:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Group
        id:
          anyOf:
            - type: string
            - type: 'null'
          title: Id
          description: ID
        metadata:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Metadata
          description: Metadata dictionary
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Name
        purpose:
          anyOf:
            - type: string
            - type: 'null'
          title: Purpose
          description: Purpose
        schema:
          anyOf:
            - $ref: '#/components/schemas/SchemasInputDescriptorFilter'
            - type: 'null'
          description: Accepts a list of schema or a dict containing filters like oneof_filter.
      type: object
      title: InputDescriptors
      description: InputDescriptors
    InvitationMessage-Input:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Message identifier
        '@type':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Type'
          description: Message type
        accept:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Accept
          description: List of mime type in order of preference
        goal:
          anyOf:
            - type: string
            - type: 'null'
          title: Goal
          description: A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message
        goal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Goal Code
          description: A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message
        handshake_protocols:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Handshake Protocols
        imageUrl:
          anyOf:
            - type: string
            - type: 'null'
          title: Imageurl
          description: Optional image URL for out-of-band invitation
        label:
          anyOf:
            - type: string
            - type: 'null'
          title: Label
          description: Optional label
        requests~attach:
          anyOf:
            - items:
                $ref: '#/components/schemas/AttachDecorator-Input'
              type: array
            - type: 'null'
          title: Requests~Attach
          description: Optional request attachment
        services:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - additionalProperties: true
                    type: object
              type: array
            - type: 'null'
          title: Services
      type: object
      title: InvitationMessage
      description: InvitationMessage
    InvitationMessage-Output:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Message identifier
        '@type':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Type'
          description: Message type
        accept:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Accept
          description: List of mime type in order of preference
        goal:
          anyOf:
            - type: string
            - type: 'null'
          title: Goal
          description: A self-attested string that the receiver may want to display to the user about the context-specific goal of the out-of-band message
        goal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Goal Code
          description: A self-attested code the receiver may want to display to the user or use in automatically deciding what to do with the out-of-band message
        handshake_protocols:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Handshake Protocols
        imageUrl:
          anyOf:
            - type: string
            - type: 'null'
          title: Imageurl
          description: Optional image URL for out-of-band invitation
        label:
          anyOf:
            - type: string
            - type: 'null'
          title: Label
          description: Optional label
        requests~attach:
          anyOf:
            - items:
                $ref: '#/components/schemas/AttachDecorator-Output'
              type: array
            - type: 'null'
          title: Requests~Attach
          description: Optional request attachment
        services:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - additionalProperties: true
                    type: object
              type: array
            - type: 'null'
          title: Services
      type: object
      title: InvitationMessage
      description: InvitationMessage
    InvitationRecord:
      properties:
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
          description: Time of record creation
        invi_msg_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Invi Msg Id
          description: Invitation message identifier
        invitation:
          anyOf:
            - $ref: '#/components/schemas/InvitationMessage-Output'
            - type: 'null'
          description: Out of band invitation message
        invitation_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Invitation Id
          description: Invitation record identifier
        invitation_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Invitation Url
          description: Invitation message URL
        oob_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Oob Id
          description: Out of band record identifier
        state:
          anyOf:
            - type: string
            - type: 'null'
          title: State
          description: Out of band message exchange state
        trace:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Trace
          description: Record trace information, based on agent configuration
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
          description: Time of last record update
      type: object
      title: InvitationRecord
      description: InvitationRecord
    IssuerCredRevRecordSchemaAnonCreds:
      properties:
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
          description: Time of record creation
        cred_def_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Def Id
          description: Credential definition identifier
        cred_ex_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Ex Id
          description: Credential exchange record identifier at credential issue
        cred_ex_version:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Ex Version
          description: Credential exchange version
        cred_rev_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Rev Id
          description: Credential revocation identifier
        record_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Record Id
          description: Issuer credential revocation record identifier
        rev_reg_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Rev Reg Id
          description: Revocation registry identifier
        state:
          anyOf:
            - type: string
            - type: 'null'
          title: State
          description: Issue credential revocation record state
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
          description: Time of last record update
      type: object
      title: IssuerCredRevRecordSchemaAnonCreds
      description: IssuerCredRevRecordSchemaAnonCreds
    JWSCreateRequest:
      properties:
        did:
          anyOf:
            - type: string
            - type: 'null'
          title: Did
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
        headers:
          additionalProperties: true
          type: object
          title: Headers
          default: {}
        payload:
          additionalProperties: true
          type: object
          title: Payload
          description: Payload to sign
        verification_method:
          anyOf:
            - type: string
            - type: 'null'
          title: Verification Method
          description: Information used for proof verification
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
      type: object
      required:
        - payload
      title: JWSCreateRequest
    JWSCreateResponse:
      properties:
        jws:
          type: string
          title: Jws
          examples:
            - eyJ0eXAiOiAiSldUIiwgImFsZyI6ICJFZERTQSIsICJraWQiOiAiZGlkOmtleTp6Nk1rakNqeHVUWHhWUFdTOUpZajJaaUt0S3ZTUzFzckM2a0JSZXM0V0NCMm1TV3EjejZNa2pDanh1VFh4VlBXUzlKWWoyWmlLdEt2U1Mxc3JDNmtCUmVzNFdDQjJtU1dxIn0.e30.rOLhhAaMfWb_rFzgKofXRuv72bj7SjRcPieICMV1TE1eJrTG-RoIJ6crrEc_mRmnFtI7dExEZAnCqd4LzGozAA
      type: object
      required:
        - jws
      title: JWSCreateResponse
    JWSVerifyRequest:
      properties:
        jws:
          type: string
          title: Jws
          examples:
            - eyJ0eXAiOiAiSldUIiwgImFsZyI6ICJFZERTQSIsICJraWQiOiAiZGlkOmtleTp6Nk1rakNqeHVUWHhWUFdTOUpZajJaaUt0S3ZTUzFzckM2a0JSZXM0V0NCMm1TV3EjejZNa2pDanh1VFh4VlBXUzlKWWoyWmlLdEt2U1Mxc3JDNmtCUmVzNFdDQjJtU1dxIn0.e30.rOLhhAaMfWb_rFzgKofXRuv72bj7SjRcPieICMV1TE1eJrTG-RoIJ6crrEc_mRmnFtI7dExEZAnCqd4LzGozAA
      type: object
      required:
        - jws
      title: JWSVerifyRequest
    JWSVerifyResponse:
      properties:
        error:
          anyOf:
            - type: string
            - type: 'null'
          title: Error
          description: Error text
        headers:
          additionalProperties: true
          type: object
          title: Headers
          description: Headers from verified JWT.
          examples:
            - alg: EdDSA
              kid: did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
              typ: JWT
        kid:
          type: string
          title: Kid
          description: kid of signer
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
        payload:
          additionalProperties: true
          type: object
          title: Payload
          description: Payload from verified JWT
        valid:
          type: boolean
          title: Valid
      type: object
      required:
        - headers
        - kid
        - payload
        - valid
      title: JWSVerifyResponse
    JsonLdSignRequest:
      properties:
        credential_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Credential Id
        credential:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Credential
        verkey:
          anyOf:
            - type: string
            - type: 'null'
          title: Verkey
        pub_did:
          anyOf:
            - type: string
            - type: 'null'
          title: Pub Did
        signature_options:
          $ref: '#/components/schemas/SignatureOptions'
      type: object
      required:
        - signature_options
      title: JsonLdSignRequest
    JsonLdVerifyRequest:
      properties:
        doc:
          additionalProperties: true
          type: object
          title: Doc
        public_did:
          anyOf:
            - type: string
            - type: 'null'
          title: Public Did
        verkey:
          anyOf:
            - type: string
            - type: 'null'
          title: Verkey
      type: object
      required:
        - doc
      title: JsonLdVerifyRequest
    LDProofVCDetail:
      properties:
        credential:
          $ref: '#/components/schemas/Credential'
          description: Detail of the JSON-LD Credential to be issued
        options:
          $ref: '#/components/schemas/LDProofVCOptions'
          description: Options for specifying how the linked data proof is created.
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      required:
        - credential
        - options
      title: LDProofVCDetail
      description: LDProofVCDetail
    LDProofVCOptions:
      properties:
        challenge:
          anyOf:
            - type: string
            - type: 'null'
          title: Challenge
          description: A challenge to include in the proof. SHOULD be provided by the requesting party of the credential (=holder)
        created:
          anyOf:
            - type: string
            - type: 'null'
          title: Created
          description: The date and time of the proof (with a maximum accuracy in seconds). Defaults to current system time
        credentialStatus:
          anyOf:
            - $ref: '#/components/schemas/CredentialStatusOptions'
            - type: 'null'
          description: The credential status mechanism to use for the credential. Omitting the property indicates the issued credential will not include a credential status
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
          description: The intended domain of validity for the proof
        proofPurpose:
          anyOf:
            - type: string
            - type: 'null'
          title: Proofpurpose
          description: The proof purpose used for the proof. Should match proof purposes registered in the Linked Data Proofs Specification
        proofType:
          anyOf:
            - type: string
            - type: 'null'
          title: Prooftype
          description: The proof type used for the proof. Should match suites registered in the Linked Data Cryptographic Suite Registry
        verificationMethod:
          anyOf:
            - type: string
            - type: 'null'
          title: Verificationmethod
          description: The verification method to use for the proof. Should match a verification method in the wallet
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      title: LDProofVCOptions
      description: LDProofVCOptions
    LinkedDataProof:
      properties:
        challenge:
          anyOf:
            - type: string
            - type: 'null'
          title: Challenge
          description: Associates a challenge with a proof, for use with a proofPurpose such as authentication
        created:
          anyOf:
            - type: string
            - type: 'null'
          title: Created
          description: The string value of an ISO8601 combined date and time string generated by the Signature Algorithm
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
          description: A string value specifying the restricted domain of the signature.
        jws:
          anyOf:
            - type: string
            - type: 'null'
          title: Jws
          description: Associates a Detached Json Web Signature with a proof
        nonce:
          anyOf:
            - type: string
            - type: 'null'
          title: Nonce
          description: The nonce
        proofPurpose:
          type: string
          title: Proofpurpose
          description: Proof purpose
        proofValue:
          anyOf:
            - type: string
            - type: 'null'
          title: Proofvalue
          description: The proof value of a proof
        type:
          type: string
          title: Type
          description: Identifies the digital signature suite that was used to create the signature
        verificationMethod:
          type: string
          title: Verificationmethod
          description: Information used for proof verification
        additional_properties:
          additionalProperties: true
          type: object
          title: Additional Properties
          default: {}
      type: object
      required:
        - proofPurpose
        - type
        - verificationMethod
      title: LinkedDataProof
      description: LinkedDataProof
    Message:
      properties:
        connection_id:
          type: string
          title: Connection Id
        content:
          type: string
          title: Content
      type: object
      required:
        - connection_id
        - content
      title: Message
    NonRevocProof:
      properties:
        c_list:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: C List
        x_list:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: X List
      type: object
      title: NonRevocProof
    NonRevocationInterval:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: NonRevocationInterval
    OobRecord:
      properties:
        attach_thread_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Attach Thread Id
          description: Connection record identifier
        connection_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Connection Id
          description: Connection record identifier
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
          description: Time of record creation
        invi_msg_id:
          type: string
          title: Invi Msg Id
          description: Invitation message identifier
        invitation:
          $ref: '#/components/schemas/InvitationMessage-Output'
          description: Out of band invitation message
        multi_use:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Multi Use
          description: Allow for multiple uses of the oob invitation
        oob_id:
          type: string
          title: Oob Id
          description: Oob record identifier
        our_recipient_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Our Recipient Key
          description: Recipient key used for oob invitation
        role:
          anyOf:
            - type: string
            - type: 'null'
          title: Role
          description: OOB Role
        state:
          type: string
          title: State
          description: Out of band message exchange state
        their_service:
          anyOf:
            - $ref: '#/components/schemas/ServiceDecorator'
            - type: 'null'
        trace:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Trace
          description: Record trace information, based on agent configuration
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
          description: Time of last record update
      type: object
      required:
        - invi_msg_id
        - invitation
        - oob_id
        - state
      title: OobRecord
      description: OobRecord
    PendingRevocations:
      properties:
        pending_cred_rev_ids:
          items:
            type: integer
          type: array
          title: Pending Cred Rev Ids
          default: []
      type: object
      title: PendingRevocations
    PingRequestResponse:
      properties:
        thread_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Thread Id
          description: Thread ID of the ping message
      type: object
      title: PingRequestResponse
      description: PingRequestResponse
    PresentationDefinition:
      properties:
        format:
          anyOf:
            - $ref: '#/components/schemas/ClaimFormat'
            - type: 'null'
        id:
          anyOf:
            - type: string
            - type: 'null'
          title: Id
          description: Unique Resource Identifier
        input_descriptors:
          anyOf:
            - items:
                $ref: '#/components/schemas/InputDescriptors'
              type: array
            - type: 'null'
          title: Input Descriptors
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Human-friendly name that describes what the presentation definition pertains to
        purpose:
          anyOf:
            - type: string
            - type: 'null'
          title: Purpose
          description: Describes the purpose for which the Presentation Definition's inputs are being requested
        submission_requirements:
          anyOf:
            - items:
                $ref: '#/components/schemas/SubmissionRequirements'
              type: array
            - type: 'null'
          title: Submission Requirements
      type: object
      title: PresentationDefinition
      description: PresentationDefinition
    PresentationExchange:
      properties:
        connection_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Connection Id
        created_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Created At
        error_msg:
          anyOf:
            - type: string
            - type: 'null'
          title: Error Msg
        parent_thread_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Parent Thread Id
        presentation:
          anyOf:
            - $ref: '#/components/schemas/Proof'
            - type: 'null'
        presentation_request:
          anyOf:
            - $ref: '#/components/schemas/ProofRequest'
            - type: 'null'
        proof_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Proof Id
        role:
          anyOf:
            - type: string
              enum:
                - prover
                - verifier
            - type: 'null'
          title: Role
        state:
          anyOf:
            - type: string
              enum:
                - abandoned
                - done
                - presentation-received
                - presentation-sent
                - proposal-received
                - proposal-sent
                - request-received
                - request-sent
                - deleted
            - type: 'null'
          title: State
        thread_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Thread Id
        updated_at:
          anyOf:
            - type: string
            - type: 'null'
          title: Updated At
        verified:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Verified
      type: object
      title: PresentationExchange
    PrimaryProof:
      properties:
        eq_proof:
          anyOf:
            - $ref: '#/components/schemas/EQProof'
            - type: 'null'
          description: Equality proof
        ge_proofs:
          anyOf:
            - items:
                $ref: '#/components/schemas/GEProof'
              type: array
            - type: 'null'
          title: Ge Proofs
          description: GE proofs
      type: object
      title: PrimaryProof
    Proof:
      properties:
        identifiers:
          anyOf:
            - items:
                $ref: '#/components/schemas/ProofIdentifier'
              type: array
            - type: 'null'
          title: Identifiers
          description: Proof.identifiers content
        proof:
          anyOf:
            - $ref: '#/components/schemas/ProofProof'
            - type: 'null'
          description: Proof.proof content
        requested_proof:
          anyOf:
            - $ref: '#/components/schemas/ProofRequestedProof'
            - type: 'null'
          description: Proof.requested_proof content
      type: object
      title: Proof
    ProofIdentifier:
      properties:
        cred_def_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Cred Def Id
          description: Credential definition identifier
        rev_reg_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Rev Reg Id
          description: Revocation registry identifier
        schema_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Schema Id
          description: Schema identifier
        timestamp:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: Timestamp
          description: Timestamp epoch
      type: object
      title: ProofIdentifier
    ProofProof:
      properties:
        aggregated_proof:
          anyOf:
            - $ref: '#/components/schemas/ProofProofAggregatedProof'
            - type: 'null'
          description: Proof aggregated proof
        proofs:
          anyOf:
            - items:
                $ref: '#/components/schemas/ProofProofProofsProof'
              type: array
            - type: 'null'
          title: Proofs
          description: Proof proofs
      type: object
      title: ProofProof
    ProofProofAggregatedProof:
      properties:
        c_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: C Hash
          description: c_hash value
        c_list:
          anyOf:
            - items:
                items:
                  type: integer
                type: array
              type: array
            - type: 'null'
          title: C List
          description: c_list value
      type: object
      title: ProofProofAggregatedProof
    ProofProofProofsProof:
      properties:
        non_revoc_proof:
          anyOf:
            - $ref: '#/components/schemas/NonRevocProof'
            - type: 'null'
          description: Non-revocation proof
        primary_proof:
          anyOf:
            - $ref: '#/components/schemas/PrimaryProof'
            - type: 'null'
          description: Primary proof
      type: object
      title: ProofProofProofsProof
    ProofReqAttrSpec:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Attribute name
        names:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Names
          description: Attribute name group
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/ProofReqAttrSpecNonRevoked'
            - type: 'null'
        restrictions:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: 'null'
          title: Restrictions
          description: 'If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name'
      type: object
      title: ProofReqAttrSpec
    ProofReqAttrSpecNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: ProofReqAttrSpecNonRevoked
    ProofReqPredSpec:
      properties:
        name:
          type: string
          title: Name
          description: Attribute name
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/ProofReqPredSpecNonRevoked'
            - type: 'null'
        p_type:
          type: string
          title: P Type
          description: Predicate type ('<', '<=', '>=', or '>')
        p_value:
          type: integer
          title: P Value
          description: Threshold value
        restrictions:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: 'null'
          title: Restrictions
          description: 'If present, credential must satisfy one of given restrictions: specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did, cred_def_id, and/or attr::<attribute-name>::value where <attribute-name> represents a credential attribute name'
      type: object
      required:
        - name
        - p_type
        - p_value
      title: ProofReqPredSpec
    ProofReqPredSpecNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: ProofReqPredSpecNonRevoked
    ProofRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Proof request name
        non_revoked:
          anyOf:
            - $ref: '#/components/schemas/ProofRequestNonRevoked'
            - type: 'null'
        nonce:
          anyOf:
            - type: string
            - type: 'null'
          title: Nonce
          description: Nonce
        requested_attributes:
          additionalProperties:
            $ref: '#/components/schemas/ProofReqAttrSpec'
          type: object
          title: Requested Attributes
          description: Requested attribute specifications of proof request
        requested_predicates:
          additionalProperties:
            $ref: '#/components/schemas/ProofReqPredSpec'
          type: object
          title: Requested Predicates
          description: Requested predicate specifications of proof request
        version:
          anyOf:
            - type: string
            - type: 'null'
          title: Version
          description: Proof request version
      type: object
      required:
        - requested_attributes
        - requested_predicates
      title: ProofRequest
    ProofRequestNonRevoked:
      properties:
        from:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: From
          description: Earliest time of interest in non-revocation interval
        to:
          anyOf:
            - type: integer
              maximum: 1.8446744073709552e+19
              minimum: 0.0
            - type: 'null'
          title: To
          description: Latest time of interest in non-revocation interval
      type: object
      title: ProofRequestNonRevoked
    ProofRequestedProof:
      properties:
        predicates:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/ProofRequestedProofPredicate'
              type: object
            - type: 'null'
          title: Predicates
          description: Proof requested proof predicates.
        revealed_attr_groups:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/ProofRequestedProofRevealedAttrGroup'
              type: object
            - type: 'null'
          title: Revealed Attr Groups
          description: Proof requested proof revealed attribute groups
        revealed_attrs:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/ProofRequestedProofRevealedAttr'
              type: object
            - type: 'null'
          title: Revealed Attrs
          description: Proof requested proof revealed attributes
        self_attested_attrs:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Self Attested Attrs
          description: Proof requested proof self-attested attributes
        unrevealed_attrs:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Unrevealed Attrs
          description: Unrevealed attributes
      type: object
      title: ProofRequestedProof
    ProofRequestedProofPredicate:
      properties:
        sub_proof_index:
          anyOf:
            - type: integer
            - type: 'null'
          title: Sub Proof Index
          description: Sub-proof index
      type: object
      title: ProofRequestedProofPredicate
    ProofRequestedProofRevealedAttr:
      properties:
        encoded:
          anyOf:
            - type: string
            - type: 'null'
          title: Encoded
          description: Encoded value
        raw:
          anyOf:
            - type: string
            - type: 'null'
          title: Raw
          description: Raw value
        sub_proof_index:
          anyOf:
            - type: integer
            - type: 'null'
          title: Sub Proof Index
          description: Sub-proof index
      type: object
      title: ProofRequestedProofRevealedAttr
    ProofRequestedProofRevealedAttrGroup:
      properties:
        sub_proof_index:
          anyOf:
            - type: integer
            - type: 'null'
          title: Sub Proof Index
          description: Sub-proof index
        values:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/RawEncoded'
              type: object
            - type: 'null'
          title: Values
          description: Proof requested proof revealed attr groups group value
      type: object
      title: ProofRequestedProofRevealedAttrGroup
    PublishRevocationsRequest:
      properties:
        revocation_registry_credential_map:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          title: Revocation Registry Credential Map
          description: A map of revocation registry IDs to lists of credential revocation IDs that should be published. Providing an empty list for a registry ID publishes all pending revocations for that ID. An empty dictionary signifies that the action should be applied to all pending revocations across all registry IDs.
          default: {}
      type: object
      title: PublishRevocationsRequest
    RawEncoded:
      properties:
        encoded:
          anyOf:
            - type: string
            - type: 'null'
          title: Encoded
          description: Encoded value
        raw:
          anyOf:
            - type: string
            - type: 'null'
          title: Raw
          description: Raw value
      type: object
      title: RawEncoded
      description: RawEncoded
    RejectProofRequest:
      properties:
        proof_id:
          type: string
          title: Proof Id
        problem_report:
          type: string
          title: Problem Report
          description: Message to send with the rejection
          default: Rejected
        delete_proof_record:
          type: boolean
          title: Delete Proof Record
          description: (True) delete the proof exchange record after rejecting, or (default, False) preserve the record after rejecting
          default: false
      type: object
      required:
        - proof_id
      title: RejectProofRequest
    RevRegWalletUpdatedResult:
      properties:
        accum_calculated:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Accum Calculated
          description: Calculated accumulator for phantom revocations
        accum_fixed:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Accum Fixed
          description: Applied ledger transaction to fix revocations
        rev_reg_delta:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Rev Reg Delta
          description: Revocation registry delta
      type: object
      title: RevRegWalletUpdatedResult
    RevocationStatus:
      type: string
      enum:
        - active
        - revoked
        - not-checked
        - check-failed
      title: RevocationStatus
    RevokeCredential:
      properties:
        credential_exchange_id:
          type: string
          title: Credential Exchange Id
        auto_publish_on_ledger:
          type: boolean
          title: Auto Publish On Ledger
          default: false
      type: object
      required:
        - credential_exchange_id
      title: RevokeCredential
    RevokedResponse:
      properties:
        cred_rev_ids_published:
          additionalProperties:
            items:
              type: integer
            type: array
          type: object
          title: Cred Rev Ids Published
          description: A map of revocation registry IDs to lists of credential revocation IDs (as integers) that have been revoked.When cred_rev_ids_published is empty no revocations were published.This will happen when revoke is called with auto_publish_on_ledger=False.
      type: object
      title: RevokedResponse
    Rotate:
      properties:
        '@id':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Id'
          description: Message identifier
        '@type':
          anyOf:
            - type: string
            - type: 'null'
          title: '@Type'
          description: Message type
        to_did:
          type: string
          title: To Did
          description: The DID the rotating party is rotating to
      type: object
      required:
        - to_did
      title: Rotate
      description: Rotate
    SDJWSCreateRequest:
      properties:
        did:
          anyOf:
            - type: string
            - type: 'null'
          title: Did
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
        headers:
          additionalProperties: true
          type: object
          title: Headers
          default: {}
        payload:
          additionalProperties: true
          type: object
          title: Payload
          description: Payload to sign
        verification_method:
          anyOf:
            - type: string
            - type: 'null'
          title: Verification Method
          description: Information used for proof verification
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
        non_sd_list:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Non Sd List
          default: []
          examples:
            - - name
              - address
              - address.street_address
              - nationalities[1:3]
      type: object
      required:
        - payload
      title: SDJWSCreateRequest
    SDJWSCreateResponse:
      properties:
        sd_jws:
          type: string
          title: Sd Jws
          examples:
            - eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk~WyJEM3BUSFdCYWNRcFdpREc2TWZKLUZnIiwgIkRFIl0~WyJPMTFySVRjRTdHcXExYW9oRkd0aDh3IiwgIlNBIl0~WyJkVmEzX1JlTGNsWTU0R1FHZm5oWlRnIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ
      type: object
      required:
        - sd_jws
      title: SDJWSCreateResponse
    SDJWSVerifyRequest:
      properties:
        sd_jws:
          type: string
          title: Sd Jws
          examples:
            - eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk~WyJEM3BUSFdCYWNRcFdpREc2TWZKLUZnIiwgIkRFIl0~WyJPMTFySVRjRTdHcXExYW9oRkd0aDh3IiwgIlNBIl0~WyJkVmEzX1JlTGNsWTU0R1FHZm5oWlRnIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ
      type: object
      required:
        - sd_jws
      title: SDJWSVerifyRequest
    SDJWSVerifyResponse:
      properties:
        error:
          anyOf:
            - type: string
            - type: 'null'
          title: Error
          description: Error text
        headers:
          additionalProperties: true
          type: object
          title: Headers
          description: Headers from verified JWT.
          examples:
            - alg: EdDSA
              kid: did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
              typ: JWT
        kid:
          type: string
          title: Kid
          description: kid of signer
          examples:
            - did:key:z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq#z6MkjCjxuTXxVPWS9JYj2ZiKtKvSS1srC6kBRes4WCB2mSWq
        payload:
          additionalProperties: true
          type: object
          title: Payload
          description: Payload from verified JWT
        valid:
          type: boolean
          title: Valid
        disclosures:
          items:
            items:
              anyOf:
                - type: string
                - additionalProperties: true
                  type: object
            type: array
          type: array
          title: Disclosures
          description: Disclosure arrays associated with the SD-JWT
          examples:
            - - - fx1iT_mETjGiC-JzRARnVg
                - name
                - Alice
              - - n4-t3mlh8jSS6yMIT7QHnA
                - street_address
                - _sd:
                    - kLZrLK7enwfqeOzJ9-Ss88YS3mhjOAEk9lr_ix2Heng
      type: object
      required:
        - headers
        - kid
        - payload
        - valid
        - disclosures
      title: SDJWSVerifyResponse
    SchemaInputDescriptor:
      properties:
        required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Required
          description: Required
        uri:
          anyOf:
            - type: string
            - type: 'null'
          title: Uri
          description: URI
      type: object
      title: SchemaInputDescriptor
      description: SchemaInputDescriptor
    SchemaType:
      type: string
      enum:
        - anoncreds
      title: SchemaType
    SchemasInputDescriptorFilter:
      properties:
        oneof_filter:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Oneof Filter
          description: oneOf
        uri_groups:
          anyOf:
            - items:
                items:
                  $ref: '#/components/schemas/SchemaInputDescriptor'
                type: array
              type: array
            - type: 'null'
          title: Uri Groups
      type: object
      title: SchemasInputDescriptorFilter
      description: SchemasInputDescriptorFilter
    SendCredential:
      properties:
        save_exchange_record:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
        ld_credential_detail:
          anyOf:
            - $ref: '#/components/schemas/LDProofVCDetail'
            - type: 'null'
        anoncreds_credential_detail:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsCredential'
            - type: 'null'
        connection_id:
          type: string
          title: Connection Id
      type: object
      required:
        - connection_id
      title: SendCredential
    SendProofRequest:
      properties:
        save_exchange_record:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Save Exchange Record
          description: Controls exchange record retention after exchange is complete. None uses wallet default (typically to delete), true forces save, false forces delete.
        comment:
          anyOf:
            - type: string
            - type: 'null'
          title: Comment
        anoncreds_proof_request:
          anyOf:
            - $ref: '#/components/schemas/AnonCredsPresentationRequest'
            - type: 'null'
        dif_proof_request:
          anyOf:
            - $ref: '#/components/schemas/DIFProofRequest'
            - type: 'null'
        connection_id:
          type: string
          title: Connection Id
      type: object
      required:
        - connection_id
      title: SendProofRequest
    ServiceDecorator:
      properties:
        recipientKeys:
          items:
            type: string
          type: array
          title: Recipientkeys
          description: List of recipient keys
        routingKeys:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Routingkeys
          description: List of routing keys
        serviceEndpoint:
          type: string
          title: Serviceendpoint
          description: Service endpoint at which to reach this agent
      type: object
      required:
        - recipientKeys
        - serviceEndpoint
      title: ServiceDecorator
      description: ServiceDecorator
    SetDidEndpointRequest:
      properties:
        endpoint:
          type: string
          title: Endpoint
      type: object
      required:
        - endpoint
      title: SetDidEndpointRequest
    SignResponse:
      properties:
        error:
          anyOf:
            - type: string
            - type: 'null'
          title: Error
          description: Error text
        signed_doc:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Signed Doc
          description: Signed document
      type: object
      title: SignResponse
      description: SignResponse
    SignatureOptions:
      properties:
        challenge:
          anyOf:
            - type: string
            - type: 'null'
          title: Challenge
        domain:
          anyOf:
            - type: string
            - type: 'null'
          title: Domain
        proofPurpose:
          type: string
          title: Proofpurpose
        type:
          anyOf:
            - type: string
            - type: 'null'
          title: Type
        verificationMethod:
          type: string
          title: Verificationmethod
      type: object
      required:
        - proofPurpose
        - verificationMethod
      title: SignatureOptions
      description: SignatureOptions
    SubmissionRequirements:
      properties:
        count:
          anyOf:
            - type: integer
            - type: 'null'
          title: Count
          description: Count Value
        from:
          anyOf:
            - type: string
            - type: 'null'
          title: From
          description: From
        from_nested:
          anyOf:
            - items:
                $ref: '#/components/schemas/SubmissionRequirements'
              type: array
            - type: 'null'
          title: From Nested
        max:
          anyOf:
            - type: integer
            - type: 'null'
          title: Max
          description: Max Value
        min:
          anyOf:
            - type: integer
            - type: 'null'
          title: Min
          description: Min Value
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: Name
        purpose:
          anyOf:
            - type: string
            - type: 'null'
          title: Purpose
          description: Purpose
        rule:
          anyOf:
            - type: string
            - type: 'null'
          title: Rule
          description: Selection
      type: object
      title: SubmissionRequirements
      description: SubmissionRequirements
    TrustPingMsg:
      properties:
        connection_id:
          type: string
          title: Connection Id
        comment:
          type: string
          title: Comment
      type: object
      required:
        - connection_id
        - comment
      title: TrustPingMsg
    VCRecord:
      properties:
        contexts:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Contexts
        cred_tags:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Cred Tags
        cred_value:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Cred Value
          description: (JSON-serializable) credential value
        expanded_types:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Expanded Types
        given_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Given Id
          description: Credential identifier
        issuer_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Issuer Id
          description: Issuer identifier
        proof_types:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Proof Types
        schema_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Schema Ids
        subject_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Subject Ids
        credential_id:
          type: string
          title: Credential Id
          description: Credential identifier
      type: object
      required:
        - credential_id
      title: VCRecord
    VCRecordList:
      properties:
        results:
          anyOf:
            - items:
                $ref: '#/components/schemas/VCRecord'
              type: array
            - type: 'null'
          title: Results
      type: object
      title: VCRecordList
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: x-api-key
