fullnameOverride: multitenant-web

replicaCount: 1

podAnnotations:
  sidecar.istio.io/proxyCPU: 10m
  ad.datadoghq.com/multitenant-web.logs: >-
    [{
      "source": "python.uvicorn",
      "service": "multitenant-web",
      "log_processing_rules": [{
        "type": "exclude_at_match",
        "name": "exclude_health_probes",
        "pattern": "GET /docs HTTP/\\d\\.\\d\"\\s+200\\s+OK"
      }]
    }]

image:
  name: acapy-cloud/app
  pullPolicy: Always
  tag: master

command:
  - poetry
  - run
  - uvicorn
  - app.main:app
  - --log-config=/tmp/log_conf.yaml
  - --workers
  - 1
  - --host
  - 0.0.0.0
  - --port
  - 8000

ingressDomain: acapy-cloud.dev.didxtech.com
ingress:
  internal:
    enabled: true
    className: nginx-internal
    rules:
      - host: multitenant-web-{{ .Values.ingressDomain }}
        paths:
          - path: /tenant-admin
  cloudapi-internal:
    enabled: true
    className: nginx-internal
    annotations:
      # Retool needs the below
      nginx.ingress.kubernetes.io/cors-allow-headers: x-api-key
      nginx.ingress.kubernetes.io/enable-cors: "true"
    rules:
      - host: '{{ .Values.ingressDomain }}'
        paths:
          - path: /tenant-admin

service:
  # if set, will run Pods on Node Network
  hostNetwork: false
  port: 8000
  containerPort: 8000
  appProtocol: http

livenessProbe:
  httpGet:
    path: /docs
    port: "{{ trunc 15 .Release.Name }}"
readinessProbe:
  httpGet:
    path: /docs
    port: "{{ trunc 15 .Release.Name }}"

# resources:
#   requests:
#     cpu: 50m
#     memory: 256Mi
#   limits:
#     cpu: 250m
#     memory: 256Mi

initContainers:
  - name: wait-multitenant-agent
    image: curlimages/curl
    command:
      - sh
      - -c
      - |
        until curl -s {{ .Values.env.ACAPY_TENANT_AGENT_URL }} -o /dev/null; do
          echo "waiting for multitenant-agent to be healthy"
          sleep 2
        done

persistence:
  enabled: false

autoscaling:
  enabled: false

podLabels:
  admission.datadoghq.com/enabled: "true"
  sidecar.istio.io/inject: "true"

secretData:
  ACAPY_MULTITENANT_JWT_SECRET: verySecretMultitenantJwtSecret
  ACAPY_TENANT_AGENT_API_KEY: adminApiKey

env:
  LOG_LEVEL: info
  ACAPY_GOVERNANCE_AGENT_URL: http://governance-agent:3021
  ACAPY_TENANT_AGENT_URL: http://multitenant-agent:3021
  TRUST_REGISTRY_URL: http://trust-registry:8000
  OPENAPI_NAME: CloudAPI Multitenant Admin
  PYTHONPATH: /
  ACAPY_ENDORSER_ALIAS: endorser
  ROLE: tenant-admin
  ROOT_PATH: /tenant-admin
  ENABLE_SERIALIZE_LOGS: "TRUE"
  GOVERNANCE_ACAPY_LABEL: Governance

podSecurityContext:
  fsGroup: 65534
securityContext:
  runAsUser: 65534

extraVolumes:
  - name: logs
    emptyDir: {}
extraVolumeMounts:
  - name: logs
    mountPath: /logs

lifecycle:
  preStop:
    exec:
      command:
        - /bin/sh
        - -c
        - sleep 15

podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: soft
  key: node.kubernetes.io/lifecycle
  values:
    - spot

configFiles:
  log_conf.yaml:
    path: /tmp/log_conf.yaml
    content: |-
      version: 1
      disable_existing_loggers: False
      formatters:
        default:
          "()": uvicorn.logging.DefaultFormatter
          format: '%(asctime)s %(name)s %(levelname)s %(message)s'
          use_colors: null
        access:
          "()": uvicorn.logging.AccessFormatter
          format: '%(asctime)s %(name)s %(levelname)s %(client_addr)s - "%(request_line)s" %(status_code)s'
      handlers:
        default:
          formatter: default
          class: logging.StreamHandler
          stream: ext://sys.stderr
        access:
          formatter: access
          class: logging.StreamHandler
          stream: ext://sys.stdout
      loggers:
        uvicorn:
          level: INFO
          handlers:
            - default
          propagate: no
        uvicorn.error:
          level: INFO
        uvicorn.access:
          level: INFO
          handlers:
            - access
          propagate: no
