fullnameOverride: endorser

replicaCount: 2

podAnnotations:
  sidecar.istio.io/proxyCPU: 10m
  ad.datadoghq.com/endorser.logs: '[{"source": "python.uvicorn", "service": "endorser"}]'
  proxy.istio.io/config: |-
    proxyMetadata:
      ISTIO_META_IDLE_TIMEOUT: 0s
podLabels:
  admission.datadoghq.com/enabled: "true"

image:
  name: d-cloud/endorser
  pullPolicy: Always
  tag: master

command:
  - poetry
  - run
  - uvicorn
  - endorser.main:app
  - --log-config=/tmp/log_conf.yaml
  - --reload
  - --host
  - 0.0.0.0
  - --port
  - 3009

service:
  name: endorser
  port: 3009
  containerPort: 3009
  appProtocol: http

livenessProbe:
  httpGet:
    path: /health/live
    port: endorser
readinessProbe:
  httpGet:
    path: /health/ready
    port: endorser

autoscaling:
  enabled: false

# resources:
#   requests:
#     cpu: 50m
#     memory: 128Mi
#   limits:
#     cpu: 250m
#     memory: 256Mi

secretData:
  ACAPY_GOVERNANCE_AGENT_API_KEY: adminApiKey

env:
  LOG_LEVEL: info
  PYTHONPATH: /

  ACAPY_GOVERNANCE_AGENT_URL: http://governance-agent:3021

  # Trust registry
  TRUST_REGISTRY_URL: http://trust-registry:8000

  GOVERNANCE_ACAPY_LABEL: Governance
  ENABLE_SERIALIZE_LOGS: "FALSE"

podSecurityContext:
  fsGroup: 65534
securityContext:
  runAsUser: 0

extraVolumes:
  - name: logs
    emptyDir: {}
extraVolumeMounts:
  - name: logs
    mountPath: /logs

podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: soft
  key: node.kubernetes.io/lifecycle
  values:
    - spot

configFiles:
  log_conf.yaml:
    path: /tmp/log_conf.yaml
    content: |-
      version: 1
      disable_existing_loggers: False
      formatters:
        default:
          "()": uvicorn.logging.DefaultFormatter
          format: '%(asctime)s %(name)s %(levelname)s %(message)s'
          use_colors: null
        access:
          "()": uvicorn.logging.AccessFormatter
          format: '%(asctime)s %(name)s %(levelname)s %(client_addr)s - "%(request_line)s" %(status_code)s'
      handlers:
        default:
          formatter: default
          class: logging.StreamHandler
          stream: ext://sys.stderr
        access:
          formatter: access
          class: logging.StreamHandler
          stream: ext://sys.stdout
      loggers:
        uvicorn:
          level: INFO
          handlers:
            - default
          propagate: no
        uvicorn.error:
          level: INFO
        uvicorn.access:
          level: INFO
          handlers:
            - access
          propagate: no
