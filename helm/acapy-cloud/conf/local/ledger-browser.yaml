fullnameOverride: ledger-browser

replicaCount: 1

strategy:
  type: Recreate

podAnnotations:
  sidecar.istio.io/proxyCPU: 10m
  ad.datadoghq.com/ledger-browser.logs: '[{"source": "grok.ledger-browser", "service": "ledger-browser", "auto_multi_line_detection": true}]'

podLabels:
  admission.datadoghq.com/enabled: "false"
  sidecar.istio.io/inject: "false"

image:
  name: acapy-cloud/ledger-nodes
  pullPolicy: Always
  tag: latest

ingressDomain: cloudapi.127.0.0.1.nip.io
ingress:
  internal:
    enabled: true
    className: nginx
    rules:
      - host: ledger-browser.{{ .Values.ingressDomain }}
        paths:
          - path: /
            port: 8000

service:
  hostNetwork: false
  port: 8000
  containerPort: 8000
  appProtocol: tcp

command:
  - bash
  - -c
  - |
    cp ./config/sample_aml.json ./config/aml.json
    cp ./config/sample_taa.json ./config/taa.json

    if [ ! -f "/home/indy/ledger/sandbox/pool_transactions_genesis" ] && [ -z "${GENESIS_URL}" ] && [ -z "${GENESIS_FILE}" ]; then
      echo "Ledger does not exist - Creating genesis data..."
      bash ./scripts/init_genesis.sh
    fi

    # Remap ports
    sed -i \
      's/"client_port":[0-9]\+/"client_port":9702/g; s/"node_port":[0-9]\+/"node_port":9701/g' \
      /home/indy/ledger/sandbox/pool_transactions_genesis

    python -m server.server

livenessProbe:
  httpGet:
    path: /status
    port: "{{ trunc 15 .Release.Name }}"
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /status
    port: "{{ trunc 15 .Release.Name }}"

terminationGracePeriodSeconds: 10

# resources:
#   requests:
#     cpu: 100m
#     memory: 386Mi
#   limits:
#     cpu: 500m
#     memory: 386Mi

secretData:
  LEDGER_SEED: 000000000000000000000000Trustee1

env:
  LOG_LEVEL: info
  MAX_FETCH: 50000
  RESYNC_TIME: 120
  REGISTER_NEW_DIDS: True
  LEDGER_INSTANCE_NAME: Indy Ledger Browser

extraConfigmapNamesForEnvFrom:
  - ledger-nodes-ips
