{
	"info": {
		"_postman_id": "e18d43f8-0481-4a99-aab2-0c58a8d77d2a",
		"name": "CloudAPI",
		"description": "\nWelcome to the Aries CloudAPI Python project.\n\nIn addition to the traditional HTTP-based endpoints described below, we also offer WebSocket endpoints for real-time interfacing with webhook events.\n\nWebSocket endpoints are authenticated. This means that only users with valid authentication tokens can establish a WebSocket connection, and they can only subscribe to their own wallet's events. However, Admin users have the ability to subscribe by topic, or to any wallet.\n\nOur WebSocket endpoints are as follows:\n\n1. `/ws/topic/{topic}`: (Admin only) This endpoint allows admins to receive all webhook events on a specific topic (e.g. `connections`, `credentials`, `proofs`, `endorsements`).\n\n2. `/ws/{wallet_id}`: This endpoint allows authenticated users to receive webhook events associated with a specific wallet ID.\n\n3. `/ws/{wallet_id}/{topic}`: Similar to above, but with topic-specific subscription.\n\nFor authentication, the WebSocket headers should include `x-api-key`: `<your key>`.\n\nPlease refer to our API documentation for more details about our authentication mechanism, as well as for information about the available topics.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29066716"
	},
	"item": [
		{
			"name": "admin/tenants",
			"item": [
				{
					"name": "{tenant_id}",
					"item": [
						{
							"name": "Get Tenant",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants",
										":tenant_id"
									],
									"variable": [
										{
											"key": "tenant_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Get tenant by id."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"tenant_id\": \"<string>\",\n  \"tenant_name\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"image_url\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"group_id\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Tenant",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"image_url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants",
										":tenant_id"
									],
									"variable": [
										{
											"key": "tenant_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Update tenant by id."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"tenant_id\": \"<string>\",\n  \"tenant_name\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"image_url\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"group_id\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete Tenant By Id",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants",
										":tenant_id"
									],
									"variable": [
										{
											"key": "tenant_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete tenant by id."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get Tenant Auth Token",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/tenants/:tenant_id/access-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants",
										":tenant_id",
										"access-token"
									],
									"variable": [
										{
											"key": "tenant_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id/access-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id",
												"access-token"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/admin/tenants/:tenant_id/access-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"tenants",
												":tenant_id",
												"access-token"
											],
											"variable": [
												{
													"key": "tenant_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Tenants",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/tenants?group_id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tenants"
							],
							"query": [
								{
									"key": "group_id",
									"value": "<string>"
								}
							]
						},
						"description": "Get tenants (by group id.)"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/tenants?group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants"
									],
									"query": [
										{
											"key": "group_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"tenant_id\": \"<string>\",\n    \"tenant_name\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"group_id\": \"<string>\"\n  },\n  {\n    \"tenant_id\": \"<string>\",\n    \"tenant_name\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"image_url\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"group_id\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/tenants?group_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants"
									],
									"query": [
										{
											"key": "group_id",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Tenant",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"image_url\": \"<uri>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/tenants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tenants"
							]
						},
						"description": "Create a new tenant."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"image_url\": \"<uri>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/tenants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\": \"<string>\",\n  \"tenant_id\": \"<string>\",\n  \"tenant_name\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"image_url\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"group_id\": \"<string>\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"image_url\": \"<uri>\",\n  \"roles\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"group_id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/tenants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"tenants"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "generic",
			"item": [
				{
					"name": "connections",
					"item": [
						{
							"name": "{connection_id}",
							"item": [
								{
									"name": "Get Connection By Id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/connections/:connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												":connection_id"
											],
											"variable": [
												{
													"key": "connection_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve connection by id.\n\nParameters:\n-----------\nconnection_id: str"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/connections/:connection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"connections",
														":connection_id"
													],
													"variable": [
														{
															"key": "connection_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"alias\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"connection_protocol\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"invitation_key\": \"<string>\",\n  \"invitation_mode\": \"<string>\",\n  \"invitation_msg_id\": \"<string>\",\n  \"my_did\": \"<string>\",\n  \"state\": \"<string>\",\n  \"their_did\": \"<string>\",\n  \"their_label\": \"<string>\",\n  \"their_public_did\": \"<string>\",\n  \"their_role\": \"<string>\",\n  \"updated_at\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/connections/:connection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"connections",
														":connection_id"
													],
													"variable": [
														{
															"key": "connection_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Connection By Id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/connections/:connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												":connection_id"
											],
											"variable": [
												{
													"key": "connection_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete connection by id.\n\nParameters:\n-----------\nconnection_id: str\n\nReturns:\n------------\nEmpty dict: {}"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/connections/:connection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"connections",
														":connection_id"
													],
													"variable": [
														{
															"key": "connection_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/connections/:connection_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"connections",
														":connection_id"
													],
													"variable": [
														{
															"key": "connection_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Connections",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/generic/connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"connections"
									]
								},
								"description": "Retrieve list of connections.\n\nReturns:\n---------\nJSON object with connections (key), a list of connections (ids)"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/connections",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"alias\": \"<string>\",\n    \"connection_id\": \"<string>\",\n    \"connection_protocol\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"invitation_key\": \"<string>\",\n    \"invitation_mode\": \"<string>\",\n    \"invitation_msg_id\": \"<string>\",\n    \"my_did\": \"<string>\",\n    \"state\": \"<string>\",\n    \"their_did\": \"<string>\",\n    \"their_label\": \"<string>\",\n    \"their_public_did\": \"<string>\",\n    \"their_role\": \"<string>\",\n    \"updated_at\": \"<string>\"\n  },\n  {\n    \"alias\": \"<string>\",\n    \"connection_id\": \"<string>\",\n    \"connection_protocol\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"invitation_key\": \"<string>\",\n    \"invitation_mode\": \"<string>\",\n    \"invitation_msg_id\": \"<string>\",\n    \"my_did\": \"<string>\",\n    \"state\": \"<string>\",\n    \"their_did\": \"<string>\",\n    \"their_label\": \"<string>\",\n    \"their_public_did\": \"<string>\",\n    \"their_role\": \"<string>\",\n    \"updated_at\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create Invitation",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/connections/create-invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"connections",
										"create-invitation"
									]
								},
								"description": "Create connection invitation."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/connections/create-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												"create-invitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"connection_id\": \"<string>\",\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"did\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"recipientKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"routingKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"serviceEndpoint\": \"<string>\"\n  },\n  \"invitation_url\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/connections/create-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												"create-invitation"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Accept Invitation",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"did\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"recipientKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"routingKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"serviceEndpoint\": \"<string>\"\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/connections/accept-invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"connections",
										"accept-invitation"
									]
								},
								"description": "Accept connection invitation.\n\nParameters:\n------------\ninvitation: ReceiveInvitationRequest\n    the invitation object obtained from create_invitation."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"did\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"recipientKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"routingKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"serviceEndpoint\": \"<string>\"\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/connections/accept-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												"accept-invitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alias\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"connection_protocol\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"invitation_key\": \"<string>\",\n  \"invitation_mode\": \"<string>\",\n  \"invitation_msg_id\": \"<string>\",\n  \"my_did\": \"<string>\",\n  \"state\": \"<string>\",\n  \"their_did\": \"<string>\",\n  \"their_label\": \"<string>\",\n  \"their_public_did\": \"<string>\",\n  \"their_role\": \"<string>\",\n  \"updated_at\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"did\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"recipientKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"routingKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"serviceEndpoint\": \"<string>\"\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/connections/accept-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"connections",
												"accept-invitation"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "definitions",
					"item": [
						{
							"name": "credentials",
							"item": [
								{
									"name": "Get Credential Definitions",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/credentials?issuer_did=<string>&credential_definition_id=<string>&schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"credentials"
											],
											"query": [
												{
													"key": "issuer_did",
													"value": "<string>"
												},
												{
													"key": "credential_definition_id",
													"value": "<string>"
												},
												{
													"key": "schema_id",
													"value": "<string>"
												},
												{
													"key": "schema_issuer_did",
													"value": "<string>"
												},
												{
													"key": "schema_name",
													"value": "<string>"
												},
												{
													"key": "schema_version",
													"value": "<string>"
												}
											]
										},
										"description": "Get agent-created credential definitions\n\nParameters:\n---\n    issuer_did: Optional[str]\n    credential_definition_id: Optional[str]\n    schema_id: Optional[str]\n    schema_issuer_id: Optional[str]\n    schema_version: Optional[str]\n\nReturns:\n---\n    Created credential definitions"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials?issuer_did=<string>&credential_definition_id=<string>&schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials"
													],
													"query": [
														{
															"key": "issuer_did",
															"value": "<string>"
														},
														{
															"key": "credential_definition_id",
															"value": "<string>"
														},
														{
															"key": "schema_id",
															"value": "<string>"
														},
														{
															"key": "schema_issuer_did",
															"value": "<string>"
														},
														{
															"key": "schema_name",
															"value": "<string>"
														},
														{
															"key": "schema_version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"schema_id\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"schema_id\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials?issuer_did=<string>&credential_definition_id=<string>&schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials"
													],
													"query": [
														{
															"key": "issuer_did",
															"value": "<string>"
														},
														{
															"key": "credential_definition_id",
															"value": "<string>"
														},
														{
															"key": "schema_id",
															"value": "<string>"
														},
														{
															"key": "schema_issuer_did",
															"value": "<string>"
														},
														{
															"key": "schema_name",
															"value": "<string>"
														},
														{
															"key": "schema_version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Credential Definition",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"support_revocation\": true,\n  \"revocation_registry_size\": 32767\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"credentials"
											]
										},
										"description": "Create a credential definition.\n\nParameters:\n-----------\n    credential_definition: CreateCredentialDefinition\n        Payload for creating a credential definition.\n\nReturns:\n--------\n    Credential Definition"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tag\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"support_revocation\": true,\n  \"revocation_registry_size\": 32767\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"schema_id\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tag\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"support_revocation\": true,\n  \"revocation_registry_size\": 32767\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Credential Definition By Id",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/credentials/:credential_definition_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"credentials",
												":credential_definition_id"
											],
											"variable": [
												{
													"key": "credential_definition_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Get credential definition by id.\n\nParameters:\n-----------\n    credential_definition_id: str\n        credential definition id"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials/:credential_definition_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials",
														":credential_definition_id"
													],
													"variable": [
														{
															"key": "credential_definition_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"schema_id\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/credentials/:credential_definition_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"credentials",
														":credential_definition_id"
													],
													"variable": [
														{
															"key": "credential_definition_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "schemas",
							"item": [
								{
									"name": "Get Schemas",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/schemas?schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"schemas"
											],
											"query": [
												{
													"key": "schema_id",
													"value": "<string>"
												},
												{
													"key": "schema_issuer_did",
													"value": "<string>"
												},
												{
													"key": "schema_name",
													"value": "<string>"
												},
												{
													"key": "schema_version",
													"value": "<string>"
												}
											]
										},
										"description": "Retrieve schemas that the current agent created.\n\nParameters:\n-----------\n    schema_id: str (Optional)\n    schema_issuer_did: str (Optional)\n    schema_name: str (Optional)\n    schema_version: str (Optional)\n\nReturns:\n--------\n    son response with created schemas from ledger."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas?schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas"
													],
													"query": [
														{
															"key": "schema_id",
															"value": "<string>"
														},
														{
															"key": "schema_issuer_did",
															"value": "<string>"
														},
														{
															"key": "schema_name",
															"value": "<string>"
														},
														{
															"key": "schema_version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\",\n    \"attribute_names\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\",\n    \"attribute_names\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas?schema_id=<string>&schema_issuer_did=<string>&schema_name=<string>&schema_version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas"
													],
													"query": [
														{
															"key": "schema_id",
															"value": "<string>"
														},
														{
															"key": "schema_issuer_did",
															"value": "<string>"
														},
														{
															"key": "schema_name",
															"value": "<string>"
														},
														{
															"key": "schema_version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Schema",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"attribute_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"schemas"
											]
										},
										"description": "Create a new schema.\n\nParameters:\n------------\n    schema: CreateSchema\n        Payload for creating a schema.\n\nReturns:\n--------\n    The response object from creating a schema."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"attribute_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"attribute_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"attribute_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Schema",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/definitions/schemas/:schema_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"definitions",
												"schemas",
												":schema_id"
											],
											"variable": [
												{
													"key": "schema_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve schema by id.\n\nParameters:\n-----------\n    schema_id: str\n        schema id"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas/:schema_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas",
														":schema_id"
													],
													"variable": [
														{
															"key": "schema_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<string>\",\n  \"attribute_names\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/definitions/schemas/:schema_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"definitions",
														"schemas",
														":schema_id"
													],
													"variable": [
														{
															"key": "schema_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "issuer/credentials",
					"item": [
						{
							"name": "{credential_id}",
							"item": [
								{
									"name": "Get Credential",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												":credential_id"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a credential by credential id.\n\nParameters:\n-----------\n    credential_id: str\n        credential identifier"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created_at\": \"<string>\",\n  \"credential_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"attributes\": {\n    \"in_d\": \"<string>\"\n  },\n  \"connection_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"did\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"type\": \"indy\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove Credential",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												":credential_id"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove a credential.\n\nParameters:\n-----------\n    credential_id: str\n        credential identifier\n\nReturns:\n--------\n    payload: None\n    status_code: 204"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Request Credential",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												":credential_id",
												"request"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Send a credential request.\n\nParameters:\n-----------\n    credential_id: str\n        the credential id"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id",
														"request"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created_at\": \"<string>\",\n  \"credential_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"attributes\": {\n    \"in_d\": \"<string>\"\n  },\n  \"connection_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"did\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"type\": \"indy\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id",
														"request"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Store Credential",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												":credential_id",
												"store"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Store a credential.\n\nParameters:\n-----------\n    credential_id: str\n        credential identifier"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id",
														"store"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created_at\": \"<string>\",\n  \"credential_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"attributes\": {\n    \"in_d\": \"<string>\"\n  },\n  \"connection_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"did\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"type\": \"indy\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/issuer/credentials/:credential_id/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"issuer",
														"credentials",
														":credential_id",
														"store"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Credentials",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/generic/issuer/credentials?connection_id=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"issuer",
										"credentials"
									],
									"query": [
										{
											"key": "connection_id",
											"value": "<string>"
										}
									]
								},
								"description": "Get a list of credential records.\n\nParameters:\n------------\n    connection_id: str (Optional)"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials?connection_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials"
											],
											"query": [
												{
													"key": "connection_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"created_at\": \"<string>\",\n    \"credential_id\": \"<string>\",\n    \"protocol_version\": \"<string>\",\n    \"role\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"attributes\": {\n      \"officiab9c\": \"<string>\"\n    },\n    \"connection_id\": \"<string>\",\n    \"credential_definition_id\": \"<string>\",\n    \"did\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"schema_id\": \"<string>\",\n    \"state\": \"<string>\",\n    \"thread_id\": \"<string>\",\n    \"type\": \"indy\"\n  },\n  {\n    \"created_at\": \"<string>\",\n    \"credential_id\": \"<string>\",\n    \"protocol_version\": \"<string>\",\n    \"role\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"attributes\": {\n      \"dolor_2\": \"<string>\",\n      \"laboris_1_e\": \"<string>\"\n    },\n    \"connection_id\": \"<string>\",\n    \"credential_definition_id\": \"<string>\",\n    \"did\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"schema_id\": \"<string>\",\n    \"state\": \"<string>\",\n    \"thread_id\": \"<string>\",\n    \"type\": \"indy\"\n  }\n]"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials?connection_id=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials"
											],
											"query": [
												{
													"key": "connection_id",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Send Credential",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connection_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"consequat5\": \"<string>\",\n      \"ipsum247\": \"<string>\",\n      \"mollit0a7\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/issuer/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"issuer",
										"credentials"
									]
								},
								"description": "Create and send a credential. Automating the entire flow.\n\nParameters:\n------------\n    credential: Credential\n        payload for sending a credential\n\nReturns:\n--------\n    payload: CredentialExchange\n        The response object from sending a credential\n    status_code: 200"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"consequat5\": \"<string>\",\n      \"ipsum247\": \"<string>\",\n      \"mollit0a7\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"credential_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"attributes\": {\n    \"in_d\": \"<string>\"\n  },\n  \"connection_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"did\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"type\": \"indy\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"consequat5\": \"<string>\",\n      \"ipsum247\": \"<string>\",\n      \"mollit0a7\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Offer",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"eu27\": \"<string>\",\n      \"esse7f5\": \"<string>\",\n      \"ad_e\": \"<string>\",\n      \"incididunt75\": \"<string>\",\n      \"dolor_0c\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/issuer/credentials/create-offer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"issuer",
										"credentials",
										"create-offer"
									]
								},
								"description": "Create a credential offer not bound to any connection.\n\nParameters:\n------------\n    credential: Credential\n        payload for sending a credential\n\nReturns:\n--------\n    The response object from sending a credential"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"eu27\": \"<string>\",\n      \"esse7f5\": \"<string>\",\n      \"ad_e\": \"<string>\",\n      \"incididunt75\": \"<string>\",\n      \"dolor_0c\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/create-offer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												"create-offer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"credential_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"attributes\": {\n    \"in_d\": \"<string>\"\n  },\n  \"connection_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"did\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"schema_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"type\": \"indy\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"indy\",\n  \"indy_credential_detail\": {\n    \"credential_definition_id\": \"<string>\",\n    \"attributes\": {\n      \"eu27\": \"<string>\",\n      \"esse7f5\": \"<string>\",\n      \"ad_e\": \"<string>\",\n      \"incididunt75\": \"<string>\",\n      \"dolor_0c\": \"<string>\"\n    }\n  },\n  \"ld_credential_detail\": {\n    \"credential\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"issuanceDate\": \"<string>\",\n      \"issuer\": \"<string>\",\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"expirationDate\": \"<string>\",\n      \"id\": \"<string>\",\n      \"proof\": {\n        \"created\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"type\": \"<string>\",\n        \"verificationMethod\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"nonce\": \"<string>\",\n        \"proofValue\": \"<string>\"\n      }\n    },\n    \"options\": {\n      \"proofType\": \"<string>\",\n      \"challenge\": \"<string>\",\n      \"created\": \"<string>\",\n      \"credentialStatus\": {\n        \"type\": \"<string>\"\n      },\n      \"domain\": \"<string>\",\n      \"proofPurpose\": \"<string>\"\n    }\n  },\n  \"protocol_version\": \"v2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/create-offer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												"create-offer"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Revoke Credential",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credential_exchange_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"auto_publish_on_ledger\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/issuer/credentials/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"issuer",
										"credentials",
										"revoke"
									]
								},
								"description": "Revoke a credential.\n\nParameters:\n-----------\n    credential_exchange_id: str\n        The credential exchange id\n\nReturns:\n--------\n    payload: None\n    status_code: 204"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credential_exchange_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"auto_publish_on_ledger\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												"revoke"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credential_exchange_id\": \"<string>\",\n  \"credential_definition_id\": \"<string>\",\n  \"auto_publish_on_ledger\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/issuer/credentials/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"issuer",
												"credentials",
												"revoke"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "jsonld",
					"item": [
						{
							"name": "Sign Jsonld",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credential_id\": \"<string>\",\n  \"credential\": \"<object>\",\n  \"verkey\": \"<string>\",\n  \"pub_did\": \"<string>\",\n  \"signature_options\": {\n    \"proofPurpose\": \"<string>\",\n    \"verificationMethod\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/jsonld/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"jsonld",
										"sign"
									]
								},
								"description": "Sign a JSON-LD structure"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credential_id\": \"<string>\",\n  \"credential\": \"<object>\",\n  \"verkey\": \"<string>\",\n  \"pub_did\": \"<string>\",\n  \"signature_options\": {\n    \"proofPurpose\": \"<string>\",\n    \"verificationMethod\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/jsonld/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"jsonld",
												"sign"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"signed_doc\": \"<object>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credential_id\": \"<string>\",\n  \"credential\": \"<object>\",\n  \"verkey\": \"<string>\",\n  \"pub_did\": \"<string>\",\n  \"signature_options\": {\n    \"proofPurpose\": \"<string>\",\n    \"verificationMethod\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/jsonld/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"jsonld",
												"sign"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Verify Jsonld",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"doc\": \"<object>\",\n  \"public_did\": \"<string>\",\n  \"verkey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/jsonld/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"jsonld",
										"verify"
									]
								},
								"description": "Verify a JSON-LD structure"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"doc\": \"<object>\",\n  \"public_did\": \"<string>\",\n  \"verkey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/jsonld/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"jsonld",
												"verify"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"doc\": \"<object>\",\n  \"public_did\": \"<string>\",\n  \"verkey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/jsonld/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"jsonld",
												"verify"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "messaging",
					"item": [
						{
							"name": "Send Messages",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connection_id\": \"<string>\",\n  \"content\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/messaging/send-message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"messaging",
										"send-message"
									]
								},
								"description": "Send basic message.\n\nParameters:\n-----------\nmessage: Message\n    payload for sending a message\n\nReturns:\n---------\nThe response object obtained when sending a message."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"content\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/messaging/send-message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"messaging",
												"send-message"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"content\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/messaging/send-message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"messaging",
												"send-message"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Send Trust Ping",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connection_id\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/messaging/trust-ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"messaging",
										"trust-ping"
									]
								},
								"description": "Trust ping\n\nParameters:\n-----------\ntrustping_msg : TrustPingMsg\n    payload for sending a trust ping\n\nReturns:\n--------\nThe response object obtained when sending a trust ping."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/messaging/trust-ping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"messaging",
												"trust-ping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"thread_id\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/messaging/trust-ping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"messaging",
												"trust-ping"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "oob",
					"item": [
						{
							"name": "Create Oob Invitation",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"handshake_protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"create_connection\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/oob/create-invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"oob",
										"create-invitation"
									]
								},
								"description": "Create connection invitation out-of-band."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"handshake_protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"create_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/create-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"create-invitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"invi_msg_id\": \"<string>\",\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"accept\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"goal\": \"<string>\",\n    \"goal_code\": \"<string>\",\n    \"handshake_protocols\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"requests~attach\": [\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      },\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      }\n    ],\n    \"services\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"invitation_id\": \"<string>\",\n  \"invitation_url\": \"<string>\",\n  \"oob_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"updated_at\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"<string>\",\n  \"multi_use\": \"<boolean>\",\n  \"use_public_did\": \"<boolean>\",\n  \"attachments\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"handshake_protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"create_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/create-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"create-invitation"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Accept Oob Invitation",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"accept\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"goal\": \"<string>\",\n    \"goal_code\": \"<string>\",\n    \"handshake_protocols\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"requests~attach\": [\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      },\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      }\n    ],\n    \"services\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/oob/accept-invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"oob",
										"accept-invitation"
									]
								},
								"description": "Receive out-of-band invitation."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"accept\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"goal\": \"<string>\",\n    \"goal_code\": \"<string>\",\n    \"handshake_protocols\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"requests~attach\": [\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      },\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      }\n    ],\n    \"services\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/accept-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"accept-invitation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"invi_msg_id\": \"<string>\",\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"accept\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"goal\": \"<string>\",\n    \"goal_code\": \"<string>\",\n    \"handshake_protocols\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"requests~attach\": [\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      },\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      }\n    ],\n    \"services\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"oob_id\": \"<string>\",\n  \"state\": \"<string>\",\n  \"attach_thread_id\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"our_recipient_key\": \"<string>\",\n  \"role\": \"<string>\",\n  \"their_service\": {\n    \"recipientKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"serviceEndpoint\": \"<string>\",\n    \"routingKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"trace\": \"<boolean>\",\n  \"updated_at\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"invitation\": {\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"accept\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"goal\": \"<string>\",\n    \"goal_code\": \"<string>\",\n    \"handshake_protocols\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"imageUrl\": \"<string>\",\n    \"label\": \"<string>\",\n    \"requests~attach\": [\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      },\n      {\n        \"data\": {\n          \"base64\": \"<string>\",\n          \"json\": \"<object>\",\n          \"jws\": {\n            \"header\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"protected\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signature\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"signatures\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"links\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"sha256\": \"<string>\"\n        },\n        \"@id\": \"<string>\",\n        \"byte_count\": \"<integer>\",\n        \"description\": \"<string>\",\n        \"filename\": \"<string>\",\n        \"lastmod_time\": \"<string>\",\n        \"mime-type\": \"<string>\"\n      }\n    ],\n    \"services\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alias\": \"<string>\",\n  \"use_existing_connection\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/accept-invitation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"accept-invitation"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Connect To Public Did",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"public_did\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/oob/connect-public-did",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"oob",
										"connect-public-did"
									]
								},
								"description": "Connect using public DID as implicit invitation.\n\nParameters:\n---\ntheir_public_did: str\n    Public DID of target entity\n\nbody: Optional[CreateConnFromDIDRequest]\n    Additional request info\n\nReturns:\n---\nConnRecord\n    The connection record"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_did\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/connect-public-did",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"connect-public-did"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"alias\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"connection_protocol\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"invitation_key\": \"<string>\",\n  \"invitation_mode\": \"<string>\",\n  \"invitation_msg_id\": \"<string>\",\n  \"my_did\": \"<string>\",\n  \"state\": \"<string>\",\n  \"their_did\": \"<string>\",\n  \"their_label\": \"<string>\",\n  \"their_public_did\": \"<string>\",\n  \"their_role\": \"<string>\",\n  \"updated_at\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_did\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/oob/connect-public-did",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"oob",
												"connect-public-did"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "verifier",
					"item": [
						{
							"name": "proofs",
							"item": [
								{
									"name": "{proof_id}",
									"item": [
										{
											"name": "Get Proof Record",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"verifier",
														"proofs",
														":proof_id"
													],
													"variable": [
														{
															"key": "proof_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Get a specific proof record\n\nParameters:\n----------\nproof_id: str\n    The proof ID\n\nReturns:\n--------\npresentation_exchange_record: PresentationExchange\n    The of presentation exchange record for the proof ID"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"created_at\": \"<string>\",\n  \"proof_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"parent_thread_id\": \"<string>\",\n  \"presentation\": {\n    \"identifiers\": [\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    ],\n    \"proof\": {\n      \"aggregated_proof\": {\n        \"c_hash\": \"<string>\",\n        \"c_list\": [\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        ]\n      },\n      \"proofs\": [\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"requested_proof\": {\n      \"predicates\": {\n        \"laborum3c\": {\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"laborisf46\": {\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"revealed_attr_groups\": {\n        \"commodo_a5b\": {\n          \"sub_proof_index\": \"<integer>\",\n          \"values\": {\n            \"in_14c\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"revealed_attrs\": {\n        \"nisi_b1_\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"nostrud_5d7\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"tempor_0b5\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"self_attested_attrs\": \"<object>\",\n      \"unrevealed_attrs\": \"<object>\"\n    }\n  },\n  \"presentation_request\": {\n    \"requested_attributes\": {\n      \"sunt9c\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consectetur9\": \"<string>\",\n            \"minima77\": \"<string>\",\n            \"labore90\": \"<string>\"\n          },\n          {\n            \"irure_5\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"ut_b\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolore3b\": \"<string>\"\n          },\n          {\n            \"est833\": \"<string>\",\n            \"nostrud0\": \"<string>\",\n            \"fugiat_53\": \"<string>\",\n            \"reprehenderit_2c\": \"<string>\"\n          }\n        ]\n      },\n      \"exa18\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consequat_1\": \"<string>\"\n          },\n          {\n            \"consectetur676\": \"<string>\",\n            \"eaec\": \"<string>\"\n          }\n        ]\n      },\n      \"in_7f\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"sed_20c\": \"<string>\",\n            \"site62\": \"<string>\",\n            \"sunt_517\": \"<string>\",\n            \"dolor_78\": \"<string>\"\n          },\n          {\n            \"et_918\": \"<string>\",\n            \"labore_10\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"verified\": \"<boolean>\"\n}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Proof",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"verifier",
														"proofs",
														":proof_id"
													],
													"variable": [
														{
															"key": "proof_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete proofs record for proof_id (pres_ex_id including prepending version hint 'v1-' or 'v2-')\n\nParameters:\n----------\nproof_id: str\n    The proof ID - starting with v1- or v2-\n\nReturns:\n--------\nNone"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get Credentials By Proof Id",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"verifier",
														"proofs",
														":proof_id",
														"credentials"
													],
													"variable": [
														{
															"key": "proof_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Get matching credentials for presentation exchange\n\nParameters:\n----------\nproof_id: str\n     The proof ID\n\nReturns:\n--------\npresentation_exchange_list: [IndyCredPrecis]\n    The list of Indy presentation credentials"
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id/credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id",
																"credentials"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"cred_info\": {\n      \"attrs\": {\n        \"veniamb0c\": \"<string>\",\n        \"anim21\": \"<string>\",\n        \"eiusmod_a\": \"<string>\"\n      },\n      \"cred_def_id\": \"<string>\",\n      \"cred_rev_id\": \"<string>\",\n      \"referent\": \"<string>\",\n      \"rev_reg_id\": \"<string>\",\n      \"schema_id\": \"<string>\"\n    },\n    \"interval\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"presentation_referents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"cred_info\": {\n      \"attrs\": {\n        \"reprehenderit4\": \"<string>\",\n        \"nostrud_\": \"<string>\",\n        \"ipsum5\": \"<string>\"\n      },\n      \"cred_def_id\": \"<string>\",\n      \"cred_rev_id\": \"<string>\",\n      \"referent\": \"<string>\",\n      \"rev_reg_id\": \"<string>\",\n      \"schema_id\": \"<string>\"\n    },\n    \"interval\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"presentation_referents\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/generic/verifier/proofs/:proof_id/credentials",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"generic",
																"verifier",
																"proofs",
																":proof_id",
																"credentials"
															],
															"variable": [
																{
																	"key": "proof_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Proof Records",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/proofs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"proofs"
											]
										},
										"description": "Get all proof records\n\nReturns:\n--------\npresentation_exchange_list: [PresentationExchange]\n    The list of presentation exchange records"
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/generic/verifier/proofs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"generic",
														"verifier",
														"proofs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"created_at\": \"<string>\",\n    \"proof_id\": \"<string>\",\n    \"protocol_version\": \"<string>\",\n    \"role\": \"<string>\",\n    \"connection_id\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"parent_thread_id\": \"<string>\",\n    \"presentation\": {\n      \"identifiers\": [\n        {\n          \"cred_def_id\": \"<string>\",\n          \"rev_reg_id\": \"<string>\",\n          \"schema_id\": \"<string>\",\n          \"timestamp\": \"<integer>\"\n        },\n        {\n          \"cred_def_id\": \"<string>\",\n          \"rev_reg_id\": \"<string>\",\n          \"schema_id\": \"<string>\",\n          \"timestamp\": \"<integer>\"\n        }\n      ],\n      \"proof\": {\n        \"aggregated_proof\": {\n          \"c_hash\": \"<string>\",\n          \"c_list\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"proofs\": [\n          {\n            \"non_revoc_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"primary_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"non_revoc_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"primary_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"requested_proof\": {\n        \"predicates\": {\n          \"nisi_23\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"revealed_attr_groups\": {\n          \"irure8b\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"values\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"adipisicing3d8\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"values\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"revealed_attrs\": {\n          \"reprehenderitf88\": {\n            \"encoded\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"self_attested_attrs\": \"<object>\",\n        \"unrevealed_attrs\": \"<object>\"\n      }\n    },\n    \"presentation_request\": {\n      \"requested_attributes\": {\n        \"enim_e\": {\n          \"name\": \"<string>\",\n          \"names\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"quisc\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"consectetur691\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"pariatur_328\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"consequat_72\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      },\n      \"requested_predicates\": {\n        \"dolore1ea\": {\n          \"name\": \"<string>\",\n          \"p_type\": \"<string>\",\n          \"p_value\": \"<integer>\",\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"mollit_f8_\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"adipisicingc1e\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"veniamf9\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        },\n        \"velit_f9\": {\n          \"name\": \"<string>\",\n          \"p_type\": \"<string>\",\n          \"p_value\": \"<integer>\",\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"eub\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"adipisicing_d\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"doloreac\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"deserunt13_\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        },\n        \"aliqua3\": {\n          \"name\": \"<string>\",\n          \"p_type\": \"<string>\",\n          \"p_value\": \"<integer>\",\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"nulla_147\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"nisi___\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"cillum0\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"qui8\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      },\n      \"name\": \"<string>\",\n      \"non_revoked\": {\n        \"from\": \"<integer>\",\n        \"to\": \"<integer>\"\n      },\n      \"nonce\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    \"state\": \"<string>\",\n    \"thread_id\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  },\n  {\n    \"created_at\": \"<string>\",\n    \"proof_id\": \"<string>\",\n    \"protocol_version\": \"<string>\",\n    \"role\": \"<string>\",\n    \"connection_id\": \"<string>\",\n    \"error_msg\": \"<string>\",\n    \"parent_thread_id\": \"<string>\",\n    \"presentation\": {\n      \"identifiers\": [\n        {\n          \"cred_def_id\": \"<string>\",\n          \"rev_reg_id\": \"<string>\",\n          \"schema_id\": \"<string>\",\n          \"timestamp\": \"<integer>\"\n        },\n        {\n          \"cred_def_id\": \"<string>\",\n          \"rev_reg_id\": \"<string>\",\n          \"schema_id\": \"<string>\",\n          \"timestamp\": \"<integer>\"\n        }\n      ],\n      \"proof\": {\n        \"aggregated_proof\": {\n          \"c_hash\": \"<string>\",\n          \"c_list\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"proofs\": [\n          {\n            \"non_revoc_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"primary_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"non_revoc_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"primary_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"requested_proof\": {\n        \"predicates\": {\n          \"consecteturc\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"dolore_6\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"minim_4\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"dolore_78_\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"Lorem_2\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"revealed_attr_groups\": {\n          \"laborisb_\": {\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"values\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"revealed_attrs\": {\n          \"reprehenderit_da\": {\n            \"encoded\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"ullamco_d\": {\n            \"encoded\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"in_12\": {\n            \"encoded\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sub_proof_index\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        \"self_attested_attrs\": \"<object>\",\n        \"unrevealed_attrs\": \"<object>\"\n      }\n    },\n    \"presentation_request\": {\n      \"requested_attributes\": {\n        \"reprehenderit_521\": {\n          \"name\": \"<string>\",\n          \"names\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"eu_b\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"eiusmodd9_\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"elit2\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"amet_9\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"ut_8ba\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      },\n      \"requested_predicates\": {\n        \"consecteturdf\": {\n          \"name\": \"<string>\",\n          \"p_type\": \"<string>\",\n          \"p_value\": \"<integer>\",\n          \"non_revoked\": {\n            \"from\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"to\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"restrictions\": [\n            {\n              \"consectetur_8\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"laborumf\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"incididunt2\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ]\n        }\n      },\n      \"name\": \"<string>\",\n      \"non_revoked\": {\n        \"from\": \"<integer>\",\n        \"to\": \"<integer>\"\n      },\n      \"nonce\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    \"state\": \"<string>\",\n    \"thread_id\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"verified\": \"<boolean>\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "Create Proof Request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"cupidatat_b\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"veniam_f\": \"<string>\",\n            \"nisi8\": \"<string>\"\n          },\n          {\n            \"labore8e\": \"<string>\"\n          }\n        ]\n      },\n      \"ipsum_d2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"anim8\": \"<string>\",\n            \"elit72\": \"<string>\"\n          },\n          {\n            \"in_e\": \"<string>\",\n            \"auteb\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"Ut_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"in3\": \"<string>\",\n            \"reprehenderit293\": \"<string>\",\n            \"et_b81\": \"<string>\",\n            \"culpa_b\": \"<string>\",\n            \"nostrud_a\": \"<string>\"\n          },\n          {\n            \"fugiat_c2\": \"<string>\",\n            \"anime\": \"<string>\",\n            \"aliquip_f1\": \"<string>\"\n          }\n        ]\n      },\n      \"eu_a3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"labore8b6\": \"<string>\",\n            \"eiusmod_8\": \"<string>\"\n          },\n          {\n            \"elitdc\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/verifier/create-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"verifier",
										"create-request"
									]
								},
								"description": "Create proof request.\n\nParameters:\n-----------\nbody: CreateProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"cupidatat_b\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"veniam_f\": \"<string>\",\n            \"nisi8\": \"<string>\"\n          },\n          {\n            \"labore8e\": \"<string>\"\n          }\n        ]\n      },\n      \"ipsum_d2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"anim8\": \"<string>\",\n            \"elit72\": \"<string>\"\n          },\n          {\n            \"in_e\": \"<string>\",\n            \"auteb\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"Ut_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"in3\": \"<string>\",\n            \"reprehenderit293\": \"<string>\",\n            \"et_b81\": \"<string>\",\n            \"culpa_b\": \"<string>\",\n            \"nostrud_a\": \"<string>\"\n          },\n          {\n            \"fugiat_c2\": \"<string>\",\n            \"anime\": \"<string>\",\n            \"aliquip_f1\": \"<string>\"\n          }\n        ]\n      },\n      \"eu_a3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"labore8b6\": \"<string>\",\n            \"eiusmod_8\": \"<string>\"\n          },\n          {\n            \"elitdc\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/create-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"create-request"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"proof_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"parent_thread_id\": \"<string>\",\n  \"presentation\": {\n    \"identifiers\": [\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    ],\n    \"proof\": {\n      \"aggregated_proof\": {\n        \"c_hash\": \"<string>\",\n        \"c_list\": [\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        ]\n      },\n      \"proofs\": [\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"requested_proof\": {\n      \"predicates\": {\n        \"laborum3c\": {\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"laborisf46\": {\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"revealed_attr_groups\": {\n        \"commodo_a5b\": {\n          \"sub_proof_index\": \"<integer>\",\n          \"values\": {\n            \"in_14c\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"revealed_attrs\": {\n        \"nisi_b1_\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"nostrud_5d7\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"tempor_0b5\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"self_attested_attrs\": \"<object>\",\n      \"unrevealed_attrs\": \"<object>\"\n    }\n  },\n  \"presentation_request\": {\n    \"requested_attributes\": {\n      \"sunt9c\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consectetur9\": \"<string>\",\n            \"minima77\": \"<string>\",\n            \"labore90\": \"<string>\"\n          },\n          {\n            \"irure_5\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"ut_b\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolore3b\": \"<string>\"\n          },\n          {\n            \"est833\": \"<string>\",\n            \"nostrud0\": \"<string>\",\n            \"fugiat_53\": \"<string>\",\n            \"reprehenderit_2c\": \"<string>\"\n          }\n        ]\n      },\n      \"exa18\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consequat_1\": \"<string>\"\n          },\n          {\n            \"consectetur676\": \"<string>\",\n            \"eaec\": \"<string>\"\n          }\n        ]\n      },\n      \"in_7f\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"sed_20c\": \"<string>\",\n            \"site62\": \"<string>\",\n            \"sunt_517\": \"<string>\",\n            \"dolor_78\": \"<string>\"\n          },\n          {\n            \"et_918\": \"<string>\",\n            \"labore_10\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"verified\": \"<boolean>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"cupidatat_b\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"veniam_f\": \"<string>\",\n            \"nisi8\": \"<string>\"\n          },\n          {\n            \"labore8e\": \"<string>\"\n          }\n        ]\n      },\n      \"ipsum_d2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"anim8\": \"<string>\",\n            \"elit72\": \"<string>\"\n          },\n          {\n            \"in_e\": \"<string>\",\n            \"auteb\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"Ut_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"in3\": \"<string>\",\n            \"reprehenderit293\": \"<string>\",\n            \"et_b81\": \"<string>\",\n            \"culpa_b\": \"<string>\",\n            \"nostrud_a\": \"<string>\"\n          },\n          {\n            \"fugiat_c2\": \"<string>\",\n            \"anime\": \"<string>\",\n            \"aliquip_f1\": \"<string>\"\n          }\n        ]\n      },\n      \"eu_a3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"labore8b6\": \"<string>\",\n            \"eiusmod_8\": \"<string>\"\n          },\n          {\n            \"elitdc\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/create-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"create-request"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Send Proof Request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"connection_id\": \"<string>\",\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"consecteturd2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"aliquip1\": \"<string>\",\n            \"voluptateb\": \"<string>\"\n          },\n          {\n            \"iruref\": \"<string>\",\n            \"exercitation_26\": \"<string>\",\n            \"ex_ec\": \"<string>\",\n            \"qui42\": \"<string>\"\n          }\n        ]\n      },\n      \"non_0f\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"tempor_f\": \"<string>\",\n            \"ut_398\": \"<string>\"\n          },\n          {\n            \"do44\": \"<string>\",\n            \"enim_90b\": \"<string>\"\n          }\n        ]\n      },\n      \"ullamco_a90\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"minim_d67\": \"<string>\",\n            \"ut_4\": \"<string>\"\n          },\n          {\n            \"inf\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"nostrud_3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolor_fdd\": \"<string>\",\n            \"et_d_d\": \"<string>\",\n            \"eiusmod_7\": \"<string>\",\n            \"ut_cbc\": \"<string>\"\n          },\n          {\n            \"dolor_5\": \"<string>\"\n          }\n        ]\n      },\n      \"tempor_77\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"voluptate_1\": \"<string>\",\n            \"irure985\": \"<string>\"\n          },\n          {\n            \"aliqua_d88\": \"<string>\"\n          }\n        ]\n      },\n      \"doc6d\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"temporc\": \"<string>\"\n          },\n          {\n            \"minim0\": \"<string>\",\n            \"sint6\": \"<string>\"\n          }\n        ]\n      },\n      \"sed9\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"ut6\": \"<string>\",\n            \"dolor604\": \"<string>\",\n            \"labore_1\": \"<string>\",\n            \"Loremdbc\": \"<string>\",\n            \"exercitatione8\": \"<string>\"\n          },\n          {\n            \"officia725\": \"<string>\",\n            \"anim_900\": \"<string>\"\n          }\n        ]\n      },\n      \"ex_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"nostrud_4\": \"<string>\",\n            \"aliqua_dd\": \"<string>\"\n          },\n          {\n            \"esse_6\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/verifier/send-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"verifier",
										"send-request"
									]
								},
								"description": "Send proof request.\n\nParameters:\n-----------\nbody: SendProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"consecteturd2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"aliquip1\": \"<string>\",\n            \"voluptateb\": \"<string>\"\n          },\n          {\n            \"iruref\": \"<string>\",\n            \"exercitation_26\": \"<string>\",\n            \"ex_ec\": \"<string>\",\n            \"qui42\": \"<string>\"\n          }\n        ]\n      },\n      \"non_0f\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"tempor_f\": \"<string>\",\n            \"ut_398\": \"<string>\"\n          },\n          {\n            \"do44\": \"<string>\",\n            \"enim_90b\": \"<string>\"\n          }\n        ]\n      },\n      \"ullamco_a90\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"minim_d67\": \"<string>\",\n            \"ut_4\": \"<string>\"\n          },\n          {\n            \"inf\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"nostrud_3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolor_fdd\": \"<string>\",\n            \"et_d_d\": \"<string>\",\n            \"eiusmod_7\": \"<string>\",\n            \"ut_cbc\": \"<string>\"\n          },\n          {\n            \"dolor_5\": \"<string>\"\n          }\n        ]\n      },\n      \"tempor_77\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"voluptate_1\": \"<string>\",\n            \"irure985\": \"<string>\"\n          },\n          {\n            \"aliqua_d88\": \"<string>\"\n          }\n        ]\n      },\n      \"doc6d\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"temporc\": \"<string>\"\n          },\n          {\n            \"minim0\": \"<string>\",\n            \"sint6\": \"<string>\"\n          }\n        ]\n      },\n      \"sed9\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"ut6\": \"<string>\",\n            \"dolor604\": \"<string>\",\n            \"labore_1\": \"<string>\",\n            \"Loremdbc\": \"<string>\",\n            \"exercitatione8\": \"<string>\"\n          },\n          {\n            \"officia725\": \"<string>\",\n            \"anim_900\": \"<string>\"\n          }\n        ]\n      },\n      \"ex_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"nostrud_4\": \"<string>\",\n            \"aliqua_dd\": \"<string>\"\n          },\n          {\n            \"esse_6\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/send-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"send-request"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"proof_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"parent_thread_id\": \"<string>\",\n  \"presentation\": {\n    \"identifiers\": [\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    ],\n    \"proof\": {\n      \"aggregated_proof\": {\n        \"c_hash\": \"<string>\",\n        \"c_list\": [\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        ]\n      },\n      \"proofs\": [\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"requested_proof\": {\n      \"predicates\": {\n        \"laborum3c\": {\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"laborisf46\": {\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"revealed_attr_groups\": {\n        \"commodo_a5b\": {\n          \"sub_proof_index\": \"<integer>\",\n          \"values\": {\n            \"in_14c\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"revealed_attrs\": {\n        \"nisi_b1_\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"nostrud_5d7\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"tempor_0b5\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"self_attested_attrs\": \"<object>\",\n      \"unrevealed_attrs\": \"<object>\"\n    }\n  },\n  \"presentation_request\": {\n    \"requested_attributes\": {\n      \"sunt9c\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consectetur9\": \"<string>\",\n            \"minima77\": \"<string>\",\n            \"labore90\": \"<string>\"\n          },\n          {\n            \"irure_5\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"ut_b\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolore3b\": \"<string>\"\n          },\n          {\n            \"est833\": \"<string>\",\n            \"nostrud0\": \"<string>\",\n            \"fugiat_53\": \"<string>\",\n            \"reprehenderit_2c\": \"<string>\"\n          }\n        ]\n      },\n      \"exa18\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consequat_1\": \"<string>\"\n          },\n          {\n            \"consectetur676\": \"<string>\",\n            \"eaec\": \"<string>\"\n          }\n        ]\n      },\n      \"in_7f\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"sed_20c\": \"<string>\",\n            \"site62\": \"<string>\",\n            \"sunt_517\": \"<string>\",\n            \"dolor_78\": \"<string>\"\n          },\n          {\n            \"et_918\": \"<string>\",\n            \"labore_10\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"verified\": \"<boolean>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"connection_id\": \"<string>\",\n  \"protocol_version\": \"v2\",\n  \"auto_verify\": \"<boolean>\",\n  \"comment\": \"<string>\",\n  \"trace\": \"<boolean>\",\n  \"type\": \"indy\",\n  \"indy_proof_request\": {\n    \"requested_attributes\": {\n      \"consecteturd2\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"aliquip1\": \"<string>\",\n            \"voluptateb\": \"<string>\"\n          },\n          {\n            \"iruref\": \"<string>\",\n            \"exercitation_26\": \"<string>\",\n            \"ex_ec\": \"<string>\",\n            \"qui42\": \"<string>\"\n          }\n        ]\n      },\n      \"non_0f\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"tempor_f\": \"<string>\",\n            \"ut_398\": \"<string>\"\n          },\n          {\n            \"do44\": \"<string>\",\n            \"enim_90b\": \"<string>\"\n          }\n        ]\n      },\n      \"ullamco_a90\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"minim_d67\": \"<string>\",\n            \"ut_4\": \"<string>\"\n          },\n          {\n            \"inf\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"nostrud_3\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolor_fdd\": \"<string>\",\n            \"et_d_d\": \"<string>\",\n            \"eiusmod_7\": \"<string>\",\n            \"ut_cbc\": \"<string>\"\n          },\n          {\n            \"dolor_5\": \"<string>\"\n          }\n        ]\n      },\n      \"tempor_77\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"voluptate_1\": \"<string>\",\n            \"irure985\": \"<string>\"\n          },\n          {\n            \"aliqua_d88\": \"<string>\"\n          }\n        ]\n      },\n      \"doc6d\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"temporc\": \"<string>\"\n          },\n          {\n            \"minim0\": \"<string>\",\n            \"sint6\": \"<string>\"\n          }\n        ]\n      },\n      \"sed9\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"ut6\": \"<string>\",\n            \"dolor604\": \"<string>\",\n            \"labore_1\": \"<string>\",\n            \"Loremdbc\": \"<string>\",\n            \"exercitatione8\": \"<string>\"\n          },\n          {\n            \"officia725\": \"<string>\",\n            \"anim_900\": \"<string>\"\n          }\n        ]\n      },\n      \"ex_\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"nostrud_4\": \"<string>\",\n            \"aliqua_dd\": \"<string>\"\n          },\n          {\n            \"esse_6\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"dif_proof_request\": {\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"options\": {\n      \"challenge\": \"<string>\",\n      \"domain\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/send-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"send-request"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Accept Proof Request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"proof_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_presentation_spec\": {\n    \"requested_attributes\": {\n      \"exercitation_670\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"veniam__\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"dolore_ba\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      }\n    },\n    \"requested_predicates\": {\n      \"veniamb\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      \"laboris_0\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    },\n    \"self_attested_attributes\": {\n      \"aliqua__5\": \"<string>\",\n      \"deserunt_e\": \"<string>\",\n      \"amet_3f7\": \"<string>\",\n      \"utdcd\": \"<string>\"\n    },\n    \"trace\": \"<boolean>\"\n  },\n  \"dif_presentation_spec\": {\n    \"issuer_id\": \"<string>\",\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"record_ids\": \"<object>\",\n    \"reveal_doc\": \"<object>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/verifier/accept-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"verifier",
										"accept-request"
									]
								},
								"description": "Accept proof request.\n\nParameters:\n-----------\nbody: AcceptProofRequest\n    The proof request object\n\nReturns:\n--------\npresentation_exchange: PresentationExchange\n    The presentation exchange record"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"proof_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_presentation_spec\": {\n    \"requested_attributes\": {\n      \"exercitation_670\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"veniam__\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"dolore_ba\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      }\n    },\n    \"requested_predicates\": {\n      \"veniamb\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      \"laboris_0\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    },\n    \"self_attested_attributes\": {\n      \"aliqua__5\": \"<string>\",\n      \"deserunt_e\": \"<string>\",\n      \"amet_3f7\": \"<string>\",\n      \"utdcd\": \"<string>\"\n    },\n    \"trace\": \"<boolean>\"\n  },\n  \"dif_presentation_spec\": {\n    \"issuer_id\": \"<string>\",\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"record_ids\": \"<object>\",\n    \"reveal_doc\": \"<object>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/accept-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"accept-request"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_at\": \"<string>\",\n  \"proof_id\": \"<string>\",\n  \"protocol_version\": \"<string>\",\n  \"role\": \"<string>\",\n  \"connection_id\": \"<string>\",\n  \"error_msg\": \"<string>\",\n  \"parent_thread_id\": \"<string>\",\n  \"presentation\": {\n    \"identifiers\": [\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      {\n        \"cred_def_id\": \"<string>\",\n        \"rev_reg_id\": \"<string>\",\n        \"schema_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    ],\n    \"proof\": {\n      \"aggregated_proof\": {\n        \"c_hash\": \"<string>\",\n        \"c_list\": [\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        ]\n      },\n      \"proofs\": [\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"non_revoc_proof\": {\n            \"c_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"x_list\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"primary_proof\": {\n            \"eq_proof\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ge_proofs\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    \"requested_proof\": {\n      \"predicates\": {\n        \"laborum3c\": {\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"laborisf46\": {\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"revealed_attr_groups\": {\n        \"commodo_a5b\": {\n          \"sub_proof_index\": \"<integer>\",\n          \"values\": {\n            \"in_14c\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      },\n      \"revealed_attrs\": {\n        \"nisi_b1_\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"nostrud_5d7\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        },\n        \"tempor_0b5\": {\n          \"encoded\": \"<string>\",\n          \"raw\": \"<string>\",\n          \"sub_proof_index\": \"<integer>\"\n        }\n      },\n      \"self_attested_attrs\": \"<object>\",\n      \"unrevealed_attrs\": \"<object>\"\n    }\n  },\n  \"presentation_request\": {\n    \"requested_attributes\": {\n      \"sunt9c\": {\n        \"name\": \"<string>\",\n        \"names\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consectetur9\": \"<string>\",\n            \"minima77\": \"<string>\",\n            \"labore90\": \"<string>\"\n          },\n          {\n            \"irure_5\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"requested_predicates\": {\n      \"ut_b\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"dolore3b\": \"<string>\"\n          },\n          {\n            \"est833\": \"<string>\",\n            \"nostrud0\": \"<string>\",\n            \"fugiat_53\": \"<string>\",\n            \"reprehenderit_2c\": \"<string>\"\n          }\n        ]\n      },\n      \"exa18\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"consequat_1\": \"<string>\"\n          },\n          {\n            \"consectetur676\": \"<string>\",\n            \"eaec\": \"<string>\"\n          }\n        ]\n      },\n      \"in_7f\": {\n        \"name\": \"<string>\",\n        \"p_type\": \"<string>\",\n        \"p_value\": \"<integer>\",\n        \"non_revoked\": {\n          \"from\": \"<integer>\",\n          \"to\": \"<integer>\"\n        },\n        \"restrictions\": [\n          {\n            \"sed_20c\": \"<string>\",\n            \"site62\": \"<string>\",\n            \"sunt_517\": \"<string>\",\n            \"dolor_78\": \"<string>\"\n          },\n          {\n            \"et_918\": \"<string>\",\n            \"labore_10\": \"<string>\"\n          }\n        ]\n      }\n    },\n    \"name\": \"<string>\",\n    \"non_revoked\": {\n      \"from\": \"<integer>\",\n      \"to\": \"<integer>\"\n    },\n    \"nonce\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  \"state\": \"<string>\",\n  \"thread_id\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"verified\": \"<boolean>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"proof_id\": \"<string>\",\n  \"type\": \"indy\",\n  \"indy_presentation_spec\": {\n    \"requested_attributes\": {\n      \"exercitation_670\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"veniam__\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      },\n      \"dolore_ba\": {\n        \"cred_id\": \"<string>\",\n        \"revealed\": \"<boolean>\"\n      }\n    },\n    \"requested_predicates\": {\n      \"veniamb\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      },\n      \"laboris_0\": {\n        \"cred_id\": \"<string>\",\n        \"timestamp\": \"<integer>\"\n      }\n    },\n    \"self_attested_attributes\": {\n      \"aliqua__5\": \"<string>\",\n      \"deserunt_e\": \"<string>\",\n      \"amet_3f7\": \"<string>\",\n      \"utdcd\": \"<string>\"\n    },\n    \"trace\": \"<boolean>\"\n  },\n  \"dif_presentation_spec\": {\n    \"issuer_id\": \"<string>\",\n    \"presentation_definition\": {\n      \"format\": {\n        \"jwt\": \"<object>\",\n        \"jwt_vc\": \"<object>\",\n        \"jwt_vp\": \"<object>\",\n        \"ldp\": \"<object>\",\n        \"ldp_vc\": \"<object>\",\n        \"ldp_vp\": \"<object>\"\n      },\n      \"id\": \"<string>\",\n      \"input_descriptors\": [\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"constraints\": {\n            \"fields\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_holder\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"limit_disclosure\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_revoked\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"status_suspended\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"subject_is_issuer\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"group\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<string>\",\n          \"metadata\": \"<object>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"schema\": {\n            \"oneof_filter\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"uri_groups\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"purpose\": \"<string>\",\n      \"submission_requirements\": [\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        },\n        {\n          \"count\": \"<integer>\",\n          \"from\": \"<string>\",\n          \"from_nested\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/SubmissionRequirements detected>\"\n            }\n          ],\n          \"max\": \"<integer>\",\n          \"min\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"purpose\": \"<string>\",\n          \"rule\": \"<string>\"\n        }\n      ]\n    },\n    \"record_ids\": \"<object>\",\n    \"reveal_doc\": \"<object>\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/accept-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"accept-request"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Reject Proof Request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"proof_id\": \"<string>\",\n  \"problem_report\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/generic/verifier/reject-request",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"generic",
										"verifier",
										"reject-request"
									]
								},
								"description": "Reject proof request.\n\nParameters:\n-----------\nbody: RejectProofRequest\n    The proof request object\n\nReturns:\n--------\nNone"
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"proof_id\": \"<string>\",\n  \"problem_report\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/reject-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"reject-request"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"proof_id\": \"<string>\",\n  \"problem_report\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/generic/verifier/reject-request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"generic",
												"verifier",
												"reject-request"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "wallet",
			"item": [
				{
					"name": "credentials",
					"item": [
						{
							"name": "{credential_id}",
							"item": [
								{
									"name": "Get Credential Record",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials",
												":credential_id"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Fetch a specific credential by ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attrs\": {\n    \"pariatur_62\": \"<string>\",\n    \"voluptate33b\": \"<string>\",\n    \"Utc43\": \"<string>\"\n  },\n  \"cred_def_id\": \"<string>\",\n  \"cred_rev_id\": \"<string>\",\n  \"referent\": \"<string>\",\n  \"rev_reg_id\": \"<string>\",\n  \"schema_id\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Credential",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials",
												":credential_id"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove a specific credential from the wallet by ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Credential Mime Types",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials/:credential_id/mime-types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials",
												":credential_id",
												"mime-types"
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Retrieve attribute MIME types of a specific credential by ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id/mime-types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id",
														"mime-types"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"exercitationfff\": \"<string>\",\n    \"cupidatat_c2e\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id/mime-types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id",
														"mime-types"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Credential Revocation Status",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials/:credential_id/revocation-status?from_=<string>&to=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials",
												":credential_id",
												"revocation-status"
											],
											"query": [
												{
													"key": "from_",
													"value": "<string>"
												},
												{
													"key": "to",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "credential_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Query the revocation status of a specific credential by ID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id/revocation-status?from_=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id",
														"revocation-status"
													],
													"query": [
														{
															"key": "from_",
															"value": "<string>"
														},
														{
															"key": "to",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"revoked\": \"<boolean>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/:credential_id/revocation-status?from_=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														":credential_id",
														"revocation-status"
													],
													"query": [
														{
															"key": "from_",
															"value": "<string>"
														},
														{
															"key": "to",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "w3c",
							"item": [
								{
									"name": "{credential_id}",
									"item": [
										{
											"name": "Get W3C Credential",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														"w3c",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Fetch a specific W3C credential by ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"credentials",
																"w3c",
																":credential_id"
															],
															"variable": [
																{
																	"key": "credential_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"cred_tags\": {\n    \"labore_2\": \"<string>\"\n  },\n  \"cred_value\": \"<object>\",\n  \"expanded_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"given_id\": \"<string>\",\n  \"issuer_id\": \"<string>\",\n  \"proof_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"record_id\": \"<string>\",\n  \"schema_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"credentials",
																"w3c",
																":credential_id"
															],
															"variable": [
																{
																	"key": "credential_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete W3C Credential",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														"w3c",
														":credential_id"
													],
													"variable": [
														{
															"key": "credential_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Remove a specific W3C credential from the wallet by ID."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"credentials",
																"w3c",
																":credential_id"
															],
															"variable": [
																{
																	"key": "credential_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/credentials/w3c/:credential_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"credentials",
																"w3c",
																":credential_id"
															],
															"variable": [
																{
																	"key": "credential_id",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List W3C Credentials",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"given_id\": \"<string>\",\n  \"issuer_id\": \"<string>\",\n  \"max_results\": \"<integer>\",\n  \"proof_types\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"schema_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject_ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tag_query\": {\n    \"suntdd\": \"<string>\"\n  },\n  \"types\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials/w3c?count=<string>&start=<string>&wql=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials",
												"w3c"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "start",
													"value": "<string>"
												},
												{
													"key": "wql",
													"value": "<string>"
												}
											]
										},
										"description": "Fetch a list of W3C credentials from the wallet."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/w3c?count=<string>&start=<string>&wql=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														"w3c"
													],
													"query": [
														{
															"key": "count",
															"value": "<string>"
														},
														{
															"key": "start",
															"value": "<string>"
														},
														{
															"key": "wql",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": [\n    {\n      \"contexts\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"cred_tags\": {\n        \"dolor_3\": \"<string>\"\n      },\n      \"cred_value\": \"<object>\",\n      \"expanded_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"given_id\": \"<string>\",\n      \"issuer_id\": \"<string>\",\n      \"proof_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"record_id\": \"<string>\",\n      \"schema_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"subject_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"contexts\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"cred_tags\": {\n        \"occaecat__\": \"<string>\"\n      },\n      \"cred_value\": \"<object>\",\n      \"expanded_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"given_id\": \"<string>\",\n      \"issuer_id\": \"<string>\",\n      \"proof_types\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"record_id\": \"<string>\",\n      \"schema_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"subject_ids\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/credentials/w3c?count=<string>&start=<string>&wql=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"credentials",
														"w3c"
													],
													"query": [
														{
															"key": "count",
															"value": "<string>"
														},
														{
															"key": "start",
															"value": "<string>"
														},
														{
															"key": "wql",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Credentials",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wallet/credentials?count=<string>&start=<string>&wql=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wallet",
										"credentials"
									],
									"query": [
										{
											"key": "count",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<string>"
										},
										{
											"key": "wql",
											"value": "<string>"
										}
									]
								},
								"description": "Fetch a list of credentials from the wallet."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials?count=<string>&start=<string>&wql=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "start",
													"value": "<string>"
												},
												{
													"key": "wql",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"results\": [\n    {\n      \"attrs\": {\n        \"nostrud_0\": \"<string>\"\n      },\n      \"cred_def_id\": \"<string>\",\n      \"cred_rev_id\": \"<string>\",\n      \"referent\": \"<string>\",\n      \"rev_reg_id\": \"<string>\",\n      \"schema_id\": \"<string>\"\n    },\n    {\n      \"attrs\": {\n        \"ametb\": \"<string>\",\n        \"culpa_2a5\": \"<string>\"\n      },\n      \"cred_def_id\": \"<string>\",\n      \"cred_rev_id\": \"<string>\",\n      \"referent\": \"<string>\",\n      \"rev_reg_id\": \"<string>\",\n      \"schema_id\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/credentials?count=<string>&start=<string>&wql=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"credentials"
											],
											"query": [
												{
													"key": "count",
													"value": "<string>"
												},
												{
													"key": "start",
													"value": "<string>"
												},
												{
													"key": "wql",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "dids",
					"item": [
						{
							"name": "public",
							"item": [
								{
									"name": "Get Public Did",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/dids/public",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids",
												"public"
											]
										},
										"description": "Fetch the current public DID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														"public"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"did\": \"<string>\",\n  \"key_type\": \"<string>\",\n  \"method\": \"<string>\",\n  \"posture\": \"<string>\",\n  \"verkey\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Set Public Did",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/dids/public?did=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids",
												"public"
											],
											"query": [
												{
													"key": "did",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Set the current public DID."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/public?did=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														"public"
													],
													"query": [
														{
															"key": "did",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"did\": \"<string>\",\n  \"key_type\": \"<string>\",\n  \"method\": \"<string>\",\n  \"posture\": \"<string>\",\n  \"verkey\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/public?did=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														"public"
													],
													"query": [
														{
															"key": "did",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{did}",
							"item": [
								{
									"name": "endpoint",
									"item": [
										{
											"name": "Get Did Endpoint",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														":did",
														"endpoint"
													],
													"variable": [
														{
															"key": "did",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Get DID endpoint."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"dids",
																":did",
																"endpoint"
															],
															"variable": [
																{
																	"key": "did",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"did\": \"<string>\",\n  \"endpoint\": \"<string>\"\n}"
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"dids",
																":did",
																"endpoint"
															],
															"variable": [
																{
																	"key": "did",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Set Did Endpoint",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "x-api-key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														":did",
														"endpoint"
													],
													"variable": [
														{
															"key": "did",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Update Endpoint in wallet and on ledger if posted to it."
											},
											"response": [
												{
													"name": "Successful Response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"endpoint\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"dids",
																":did",
																"endpoint"
															],
															"variable": [
																{
																	"key": "did",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Validation Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"endpoint\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/wallet/dids/:did/endpoint",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"wallet",
																"dids",
																":did",
																"endpoint"
															],
															"variable": [
																{
																	"key": "did",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Rotate Keypair",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/dids/:did/rotate-keypair",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids",
												":did",
												"rotate-keypair"
											],
											"variable": [
												{
													"key": "did",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/:did/rotate-keypair",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														":did",
														"rotate-keypair"
													],
													"variable": [
														{
															"key": "did",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/wallet/dids/:did/rotate-keypair",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"wallet",
														"dids",
														":did",
														"rotate-keypair"
													],
													"variable": [
														{
															"key": "did",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Dids",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/wallet/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wallet",
										"dids"
									]
								},
								"description": "Retrieve list of DIDs."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/wallet/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"did\": \"<string>\",\n    \"key_type\": \"<string>\",\n    \"method\": \"<string>\",\n    \"posture\": \"<string>\",\n    \"verkey\": \"<string>\"\n  },\n  {\n    \"did\": \"<string>\",\n    \"key_type\": \"<string>\",\n    \"method\": \"<string>\",\n    \"posture\": \"<string>\",\n    \"verkey\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create Did",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"key_type\": \"<string>\",\n    \"did\": \"<string>\"\n  },\n  \"seed\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/wallet/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"wallet",
										"dids"
									]
								},
								"description": "Create Local DID."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"key_type\": \"<string>\",\n    \"did\": \"<string>\"\n  },\n  \"seed\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/wallet/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"did\": \"<string>\",\n  \"key_type\": \"<string>\",\n  \"method\": \"<string>\",\n  \"posture\": \"<string>\",\n  \"verkey\": \"<string>\"\n}"
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"key_type\": \"<string>\",\n    \"did\": \"<string>\"\n  },\n  \"seed\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/wallet/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"wallet",
												"dids"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "Get Webhooks For Wallet",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Returns all webhooks per wallet\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"topic\": \"<string>\",\n    \"wallet_id\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"payload\": {}\n  },\n  {\n    \"topic\": \"<string>\",\n    \"wallet_id\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"payload\": {}\n  }\n]"
						}
					]
				},
				{
					"name": "Get Webhooks For Wallet By Topic",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:topic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":topic"
							],
							"variable": [
								{
									"key": "topic",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the webhooks per wallet per topic\n\nThis implicitly extracts the wallet ID and return only items\nbelonging to the wallet.\n\nReturns:\n---------\nList of webhooks belonging to the wallet"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:topic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":topic"
									],
									"variable": [
										{
											"key": "topic",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"topic\": \"<string>\",\n    \"wallet_id\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"payload\": {}\n  },\n  {\n    \"topic\": \"<string>\",\n    \"wallet_id\": \"<string>\",\n    \"origin\": \"<string>\",\n    \"payload\": {}\n  }\n]"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:topic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":topic"
									],
									"variable": [
										{
											"key": "topic",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "sse/{wallet_id}",
			"item": [
				{
					"name": "{topic}",
					"item": [
						{
							"name": "{field}/{field_id}",
							"item": [
								{
									"name": "Subscribe To Wallet Events By Topic And Field",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic",
												":field",
												":field_id"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "field",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "field_id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Subscribe to server-side events for a specific wallet ID and topic, and\nfilter the events for payloads containing a specific field and field ID pair.\n\nArgs:\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sse",
														":wallet_id",
														":topic",
														":field",
														":field_id"
													],
													"variable": [
														{
															"key": "wallet_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "topic",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sse",
														":wallet_id",
														":topic",
														":field",
														":field_id"
													],
													"variable": [
														{
															"key": "wallet_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "topic",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Subscribe To A Wallet Event By Topic, Field, And Desired State",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "x-api-key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id/:desired_state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic",
												":field",
												":field_id",
												":desired_state"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "field",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "field_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "desired_state",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Wait for a desired state to be reached for some event for this wallet and topic,\nfiltering for payloads that contain `field:field_id`.\n\nArgs:\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    field: The field to which the wallet is subscribing.\n    field_id: The ID of the field subscribing to the events.\n    desired_state: The desired state to be reached."
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id/:desired_state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sse",
														":wallet_id",
														":topic",
														":field",
														":field_id",
														":desired_state"
													],
													"variable": [
														{
															"key": "wallet_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "topic",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "desired_state",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:field/:field_id/:desired_state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sse",
														":wallet_id",
														":topic",
														":field",
														":field_id",
														":desired_state"
													],
													"variable": [
														{
															"key": "wallet_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "topic",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "field_id",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "desired_state",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Subscribe To Wallet Events By Topic",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sse/:wallet_id/:topic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sse",
										":wallet_id",
										":topic"
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "topic",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Subscribe to server-side events for a specific wallet ID and topic.\n\nArgs:\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Subscribe To A Wallet Event By Topic And Desired State",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:desired_state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sse",
										":wallet_id",
										":topic",
										":desired_state"
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "topic",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "desired_state",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Subscribe to server-side events for a specific wallet ID and topic,\nand wait for an event that matches the desired state.\n\nArgs:\n    wallet_id: The ID of the wallet subscribing to the events.\n    topic: The topic to which the wallet is subscribing.\n    desired_state: The desired state to be reached."
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:desired_state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic",
												":desired_state"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "desired_state",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sse/:wallet_id/:topic/:desired_state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sse",
												":wallet_id",
												":topic",
												":desired_state"
											],
											"variable": [
												{
													"key": "wallet_id",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "topic",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "desired_state",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Subscribe To Wallet Events",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sse/:wallet_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sse",
								":wallet_id"
							],
							"variable": [
								{
									"key": "wallet_id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Subscribe to server-side events for a specific wallet ID.\n\nArgs:\n    wallet_id: The ID of the wallet subscribing to the events."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sse/:wallet_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sse",
										":wallet_id"
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sse/:wallet_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sse",
										":wallet_id"
									],
									"variable": [
										{
											"key": "wallet_id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get Trust Registry",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/trust-registry",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"trust-registry"
					]
				},
				"description": "Get the trust registry.\n\nReturns:\n---------\nThe trust registry with actors and schemas"
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trust-registry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trust-registry"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"actors\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"did\": \"<string>\",\n      \"didcomm_invitation\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"did\": \"<string>\",\n      \"didcomm_invitation\": \"<string>\"\n    }\n  ],\n  \"schemas\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://cloudapi.test.didxtech.com",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "***",
			"type": "string"
		}
	]
}