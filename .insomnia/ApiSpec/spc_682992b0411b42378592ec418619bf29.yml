_id: spc_682992b0411b42378592ec418619bf29
type: ApiSpec
parentId: wrk_9834320c6b6b40d7a147c5af69483c65
modified: 1626167388581
created: 1626164860892
fileName: CloudApi.yaml
contents: >
  ---

  openapi: 3.0.2

  info:
    title: FastAPI
    version: 0.1.0
  paths:
    "/admin/governance/dids/trusted-registry":
      get:
        tags:
        - admin
        - governance
        - did
        summary: Get Trusted Registry
        description: |-
          Retrieve Trusted partner list from Trust Registry

          Parameters:
          -----------
          api_key: Header(None)
              The admin API key

          Returns:
          --------
          trusted_partners: [dict/JSON]
              List of unique trusted partners
        operationId: get_trusted_registry_admin_governance_dids_trusted_registry_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/dids/trusted-registry/{partner_did}":
      get:
        tags:
        - admin
        - governance
        - did
        summary: Get Trusted Partner
        description: |-
          Retrieve Trusted partner from Trust Registry

          Parameters:
          -----------
          api_key: Header(None)
              The admin API key

          Returns:
          --------
          trusted_partner: dict/JSON
              Unique trusted partner endpoint and DID
        operationId: get_trusted_partner_admin_governance_dids_trusted_registry__partner_did__get
        parameters:
        - required: true
          schema:
            title: Partner Did
            type: string
          name: partner_did
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/schemas/all_schemas":
      get:
        tags:
        - schemas
        summary: Get Schema
        description: |-
          Get all valid schemas from YOMA

          Parameters:
          -----------
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns:
          --------
          created_schema: dict
              The created schema response in JSON
        operationId: get_schema_schemas_all_schemas_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/schemas/write-schema-and-credential-definition":
      post:
        tags:
        - schemas
        - credentials
        summary: Write Credential Schema
        description: |-
          Create schema and credential definition and
          write it to the ledger.

          Parameters:
          ----------
          * schema_name: str
              The name of the schema to be defined
          * schema_version: str
              The version of the schema to be written

              Should be of the form x.x.x where x is an integer
          * schema_attributes: list, optional
              A list of attributes for the schema (default is None)
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns:
          --------
          as json:
          * schema
          * schema_id
          * credential_definition
          * credential_id
        operationId: write_credential_schema_schemas_write_schema_and_credential_definition_post
        parameters:
        - required: true
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: true
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: Schema Attrs
            type: array
            items:
              type: string
          name: schema_attrs
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/SchemaResponse"
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/schemas/{schema_id}":
      get:
        tags:
        - Schemas
        summary: Get Schema
        operationId: get_schema_admin_governance_schemas__schema_id__get
        parameters:
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/schemas/":
      get:
        tags:
        - Schemas
        summary: Get Schemas
        operationId: get_schemas_admin_governance_schemas__get
        parameters:
        - required: false
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: false
          schema:
            title: Schema Issuer Did
            type: string
          name: schema_issuer_did
          in: query
        - required: false
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: false
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
      post:
        tags:
        - Schemas
        summary: Create Schema
        operationId: create_schema_admin_governance_schemas__post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SchemaDefinition"
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/credential-definitions/":
      post:
        tags:
        - CredentialDefinitions
        summary: Create Credential Definition
        operationId: create_credential_definition_admin_governance_credential_definitions__post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CredentialDefinition"
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/credential-definitions/created":
      get:
        tags:
        - CredentialDefinitions
        summary: Get Created Credential Definitions
        operationId: get_created_credential_definitions_admin_governance_credential_definitions_created_get
        parameters:
        - required: false
          schema:
            title: Issuer Did
            type: string
          name: issuer_did
          in: query
        - required: false
          schema:
            title: Cred Def Id
            type: string
          name: cred_def_id
          in: query
        - required: false
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: false
          schema:
            title: Schema Issuer Did
            type: string
          name: schema_issuer_did
          in: query
        - required: false
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: false
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/admin/governance/credential-definitions/{cred_def_id}":
      get:
        tags:
        - CredentialDefinitions
        summary: Get Credential Definition
        operationId: get_credential_definition_admin_governance_credential_definitions__cred_def_id__get
        parameters:
        - required: true
          schema:
            title: Cred Def Id
            type: string
          name: cred_def_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/wallets/create-pub-did":
      get:
        tags:
        - wallets
        - did
        summary: Create Public Did
        description: |-
          Create a new public DID and
          write it to the ledger and
          receive its public info.

          Parameters:
          -----------
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns:
          * DID object (json)
          * Issuer verkey (str)
          * Issuer Endpoint (url)
        operationId: create_public_did_wallets_create_pub_did_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/DidCreationResponse"
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/wallets/create-wallet":
      post:
        tags:
        - wallets
        summary: Create Wallet
        description: |-
          Create a new wallet

          Parameters:
          -----------
          wallet_payload: dict
              The payload for creating the wallet


          Returns:
          --------
          The response object from creating a wallet on the ledger

          Example Request Body:
          {
                  "image_url": "https://aries.ca/images/sample.png",
                  "key_management_mode": "managed",
                  "label": "YOMA",
                  "wallet_dispatch_type": "default",
                  "wallet_key": "MySecretKey1234",
                  "wallet_name": "YOMAsWallet",
                  "wallet_type": "indy"
              }
        operationId: create_wallet_wallets_create_wallet_post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                title: Wallet Payload
                type: object
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/wallets/{wallet_id}":
      get:
        tags:
        - wallets
        summary: Get Subwallet
        operationId: get_subwallet_wallets__wallet_id__get
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
      post:
        tags:
        - wallets
        summary: Update Subwallet
        operationId: update_subwallet_wallets__wallet_id__post
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                title: Payload
                type: object
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
      delete:
        tags:
        - wallets
        summary: Remove Wallet By Id
        operationId: remove_wallet_by_id_wallets__wallet_id__delete
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/wallets/{wallet_id}/auth-token":
      get:
        tags:
        - wallets
        summary: Get Subwallet Auth Token
        operationId: get_subwallet_auth_token_wallets__wallet_id__auth_token_get
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/wallets/query-subwallet":
      get:
        tags:
        - wallets
        summary: Query Subwallet
        operationId: query_subwallet_wallets_query_subwallet_get
        parameters:
        - required: false
          schema:
            title: Wallet Name
            type: string
          name: wallet_name
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/verifier/request-proof-for-schema":
      post:
        tags:
        - proof
        - verifier
        summary: Get Proof Request
        description: |-
          Request proof of a (sub) set of attributes against a schema by ID.
          This may contain zero-knowledge attributes.
          This may contain revocation of the proof.

          Parameters:
          -----------
          connection_id: str
          schema_id: str
          name_proof_request: str
          zero_knowledge_proof: Dict = None
          requested_attrs: List[str] = Query(None)
          self_attested: List[
              str
          ] = None,
          revocation: int = None,
          exchange_tracing: bool = False,
          req_header: Optional[str] = Header(None),

          Returns:
          --------
          presentation_exchange_id: json
              The presentation exchange ID JSON object
        operationId: get_proof_request_verifier_request_proof_for_schema_post
        parameters:
        - required: true
          schema:
            title: Connection Id
            type: string
          name: connection_id
          in: query
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: true
          schema:
            title: Name Proof Request
            type: string
          name: name_proof_request
          in: query
        - required: false
          schema:
            title: Requested Attrs
            type: array
            items:
              type: string
          name: requested_attrs
          in: query
        - required: false
          schema:
            title: Revocation
            type: integer
          name: revocation
          in: query
        - required: false
          schema:
            title: Exchange Tracing
            type: boolean
            default: false
          name: exchange_tracing
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Body_get_proof_request_verifier_request_proof_for_schema_post"
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/verifier/verify-proof-request":
      get:
        tags:
        - verifier
        - proof
        summary: Verify Proof Request
        description: |-
          Verify a proof request against the ledger

          Parameters:
          -----------
          presentation_exchange_id: str
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns:
          --------
          verify: dict
              The json representation of the verify request
        operationId: verify_proof_request_verifier_verify_proof_request_get
        parameters:
        - required: true
          schema:
            title: Presentation Exchange Id
            type: string
          name: presentation_exchange_id
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
        - required: false
          schema:
            title: X-Wallet-Id
          name: x-wallet-id
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/issuer/issue-credential":
      get:
        tags:
        - issue
        - credential
        summary: Issue Credential
        description: |-
          Issues a credential

          Parameters:
          -----------
          schema_id: str
          connection_id: str
          credential_attrs: List[str]
              A list of requested credential attributes
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt
        operationId: issue_credential_issuer_issue_credential_get
        parameters:
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: true
          schema:
            title: Connection Id
            type: string
          name: connection_id
          in: query
        - required: false
          schema:
            title: Credential Attrs
            type: array
            items:
              type: string
          name: credential_attrs
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/IssueCredentialResponse"
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/issuer/connection":
      get:
        tags:
        - connection
        - wallets
        summary: Create Connection
        description: |-
          Creates invitation for the holder to scan

          Parameters:
          ----------
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns: StreamingResponse
              QRCode PNG file from StreamingResponse
        operationId: create_connection_issuer_connection_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Return the JSON item or an image.
            content:
              application/json:
                schema: {}
              image/png: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/issuer/get-connection-id":
      get:
        tags:
        - connection
        summary: Get Connection Ids
        description: |-
          Creates invitation for the holder to scan

          Parameters:
          ----------
          api_key: Header(None)
              The request header object api_key
          wallet_id: Header(None)
              The request header object wallet_id
          tenant_jwt: Header(None)
              The request header object tenant_jwt

          Returns:
          --------
          connection_id: JSON
              The request response from the ledger with all current connections
              The 'results' key holds a [dict].
        operationId: get_connection_ids_issuer_get_connection_id_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ConnectionIdResponse"
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/HTTPValidationError"
    "/":
      get:
        summary: Root
        operationId: root__get
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
  components:
    schemas:
      Body_get_proof_request_verifier_request_proof_for_schema_post:
        title: Body_get_proof_request_verifier_request_proof_for_schema_post
        type: object
        properties:
          zero_knowledge_proof:
            title: Zero Knowledge Proof
            type: array
            items:
              type: object
          self_attested:
            title: Self Attested
            type: array
            items:
              type: string
      ConnectionIdResponse:
        title: ConnectionIdResponse
        required:
        - connection_ids
        type: object
        properties:
          connection_ids:
            title: Connection Ids
            type: object
      CredentialDefinition:
        title: CredentialDefinition
        required:
        - tag
        - schema_id
        type: object
        properties:
          support_revocation:
            title: Support Revocation
            type: boolean
          tag:
            title: Tag
            type: string
          schema_id:
            title: Schema Id
            type: string
      DidCreationResponse:
        title: DidCreationResponse
        required:
        - did_object
        - issuer_verkey
        - issuer_endpoint
        type: object
        properties:
          did_object:
            title: Did Object
            type: object
          issuer_verkey:
            title: Issuer Verkey
            type: string
          issuer_endpoint:
            title: Issuer Endpoint
            type: string
      HTTPValidationError:
        title: HTTPValidationError
        type: object
        properties:
          detail:
            title: Detail
            type: array
            items:
              "$ref": "#/components/schemas/ValidationError"
      IssueCredentialResponse:
        title: IssueCredentialResponse
        required:
        - credential
        type: object
        properties:
          credential:
            title: Credential
            type: object
      SchemaDefinition:
        title: SchemaDefinition
        required:
        - name
        - version
        - attributes
        type: object
        properties:
          name:
            title: Name
            type: string
          version:
            title: Version
            type: string
          attributes:
            title: Attributes
            type: array
            items:
              type: string
      SchemaResponse:
        title: SchemaResponse
        required:
        - schema_resp
        - schema_id
        - credential_definition
        - credential_definition_id
        type: object
        properties:
          schema_resp:
            title: Schema Resp
            type: object
          schema_id:
            title: Schema Id
            type: string
          credential_definition:
            title: Credential Definition
            type: object
          credential_definition_id:
            title: Credential Definition Id
            type: string
      ValidationError:
        title: ValidationError
        required:
        - loc
        - msg
        - type
        type: object
        properties:
          loc:
            title: Location
            type: array
            items:
              type: string
          msg:
            title: Message
            type: string
          type:
            title: Error Type
            type: string
contentType: yaml
