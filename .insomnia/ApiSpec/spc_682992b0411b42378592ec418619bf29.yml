_id: spc_682992b0411b42378592ec418619bf29
type: ApiSpec
parentId: wrk_9834320c6b6b40d7a147c5af69483c65
modified: 1626176838661
created: 1626164860892
fileName: CloudApi.yaml
contents: >-
  openapi: 3.0.2

  info:
    title: FastAPI
    version: 0.1.0
  paths:
    /admin/governance/dids/trusted-registry:
      get:
        tags:
        - 'Admin: Public Dids'
        summary: Get Trusted Registry
        description: "Retrieve Trusted partner list from Trust Registry\n\nParameters:\n\
          -----------\napi_key: Header(None)\n    The admin API key\n\nReturns:\n--------\n\
          trusted_partners: [dict/JSON]\n    List of unique trusted partners"
        operationId: get_trusted_registry_admin_governance_dids_trusted_registry_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/dids/trusted-registry/{partner_did}:
      get:
        tags:
        - 'Admin: Public Dids'
        summary: Get Trusted Partner
        description: "Retrieve Trusted partner from Trust Registry\n\nParameters:\n\
          -----------\napi_key: Header(None)\n    The admin API key\n\nReturns:\n--------\n\
          trusted_partner: dict/JSON\n    Unique trusted partner endpoint and DID"
        operationId: get_trusted_partner_admin_governance_dids_trusted_registry__partner_did__get
        parameters:
        - required: true
          schema:
            title: Partner Did
            type: string
          name: partner_did
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/schemas/{schema_id}:
      get:
        tags:
        - 'Admin: Schemas'
        summary: Get Schema
        operationId: get_schema_admin_governance_schemas__schema_id__get
        parameters:
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/schemas/:
      get:
        tags:
        - 'Admin: Schemas'
        summary: Get Schemas
        operationId: get_schemas_admin_governance_schemas__get
        parameters:
        - required: false
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: false
          schema:
            title: Schema Issuer Did
            type: string
          name: schema_issuer_did
          in: query
        - required: false
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: false
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
      post:
        tags:
        - 'Admin: Schemas'
        summary: Create Schema
        operationId: create_schema_admin_governance_schemas__post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaDefinition'
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/credential-definitions/:
      post:
        tags:
        - 'Admin: CredentialDefinitions'
        summary: Create Credential Definition
        operationId: create_credential_definition_admin_governance_credential_definitions__post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/credential-definitions/created:
      get:
        tags:
        - 'Admin: CredentialDefinitions'
        summary: Get Created Credential Definitions
        operationId: get_created_credential_definitions_admin_governance_credential_definitions_created_get
        parameters:
        - required: false
          schema:
            title: Issuer Did
            type: string
          name: issuer_did
          in: query
        - required: false
          schema:
            title: Cred Def Id
            type: string
          name: cred_def_id
          in: query
        - required: false
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: false
          schema:
            title: Schema Issuer Did
            type: string
          name: schema_issuer_did
          in: query
        - required: false
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: false
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /admin/governance/credential-definitions/{cred_def_id}:
      get:
        tags:
        - 'Admin: CredentialDefinitions'
        summary: Get Credential Definition
        operationId: get_credential_definition_admin_governance_credential_definitions__cred_def_id__get
        parameters:
        - required: true
          schema:
            title: Cred Def Id
            type: string
          name: cred_def_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /wallets/create-pub-did:
      get:
        tags:
        - 'Admin: Wallets'
        summary: Create Public Did
        description: "Create a new public DID and\nwrite it to the ledger and\nreceive\
          \ its public info.\n\nParameters:\n-----------\napi_key: Header(None)\n  \
          \  The request header object api_key\nwallet_id: Header(None)\n    The request\
          \ header object wallet_id\ntenant_jwt: Header(None)\n    The request header\
          \ object tenant_jwt\n\nReturns:\n* DID object (json)\n* Issuer verkey (str)\n\
          * Issuer Endpoint (url)"
        operationId: create_public_did_wallets_create_pub_did_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DidCreationResponse'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /wallets/create-wallet:
      post:
        tags:
        - 'Admin: Wallets'
        summary: Create Wallet
        description: "Create a new wallet\n\nParameters:\n-----------\nwallet_payload:\
          \ dict\n    The payload for creating the wallet\n\n\nReturns:\n--------\n\
          The response object from creating a wallet on the ledger\n\nExample Request\
          \ Body:\n{\n        \"image_url\": \"https://aries.ca/images/sample.png\"\
          ,\n        \"key_management_mode\": \"managed\",\n        \"label\": \"YOMA\"\
          ,\n        \"wallet_dispatch_type\": \"default\",\n        \"wallet_key\"\
          : \"MySecretKey1234\",\n        \"wallet_name\": \"YOMAsWallet\",\n      \
          \  \"wallet_type\": \"indy\"\n    }"
        operationId: create_wallet_wallets_create_wallet_post
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                title: Wallet Payload
                type: object
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /wallets/{wallet_id}:
      get:
        tags:
        - 'Admin: Wallets'
        summary: Get Subwallet
        operationId: get_subwallet_wallets__wallet_id__get
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
      post:
        tags:
        - 'Admin: Wallets'
        summary: Update Subwallet
        operationId: update_subwallet_wallets__wallet_id__post
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                title: Payload
                type: object
          required: true
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
      delete:
        tags:
        - 'Admin: Wallets'
        summary: Remove Wallet By Id
        operationId: remove_wallet_by_id_wallets__wallet_id__delete
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /wallets/{wallet_id}/auth-token:
      get:
        tags:
        - 'Admin: Wallets'
        summary: Get Subwallet Auth Token
        operationId: get_subwallet_auth_token_wallets__wallet_id__auth_token_get
        parameters:
        - required: true
          schema:
            title: Wallet Id
            type: string
          name: wallet_id
          in: path
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /wallets/query-subwallet:
      get:
        tags:
        - 'Admin: Wallets'
        summary: Query Subwallet
        operationId: query_subwallet_wallets_query_subwallet_get
        parameters:
        - required: false
          schema:
            title: Wallet Name
            type: string
          name: wallet_name
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /verifier/request-proof-for-schema:
      post:
        tags:
        - 'Legacy: Verifier'
        summary: Get Proof Request
        description: "Request proof of a (sub) set of attributes against a schema by\
          \ ID.\nThis may contain zero-knowledge attributes.\nThis may contain revocation\
          \ of the proof.\n\nParameters:\n-----------\nconnection_id: str\nschema_id:\
          \ str\nname_proof_request: str\nzero_knowledge_proof: Dict = None\nrequested_attrs:\
          \ List[str] = Query(None)\nself_attested: List[\n    str\n] = None,\nrevocation:\
          \ int = None,\nexchange_tracing: bool = False,\nreq_header: Optional[str]\
          \ = Header(None),\n\nReturns:\n--------\npresentation_exchange_id: json\n\
          \    The presentation exchange ID JSON object"
        operationId: get_proof_request_verifier_request_proof_for_schema_post
        parameters:
        - required: true
          schema:
            title: Connection Id
            type: string
          name: connection_id
          in: query
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: true
          schema:
            title: Name Proof Request
            type: string
          name: name_proof_request
          in: query
        - required: false
          schema:
            title: Requested Attrs
            type: array
            items:
              type: string
          name: requested_attrs
          in: query
        - required: false
          schema:
            title: Revocation
            type: integer
          name: revocation
          in: query
        - required: false
          schema:
            title: Exchange Tracing
            type: boolean
            default: false
          name: exchange_tracing
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Body_get_proof_request_verifier_request_proof_for_schema_post'
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /verifier/verify-proof-request:
      get:
        tags:
        - 'Legacy: Verifier'
        summary: Verify Proof Request
        description: "Verify a proof request against the ledger\n\nParameters:\n-----------\n\
          presentation_exchange_id: str\napi_key: Header(None)\n    The request header\
          \ object api_key\nwallet_id: Header(None)\n    The request header object wallet_id\n\
          tenant_jwt: Header(None)\n    The request header object tenant_jwt\n\nReturns:\n\
          --------\nverify: dict\n    The json representation of the verify request"
        operationId: verify_proof_request_verifier_verify_proof_request_get
        parameters:
        - required: true
          schema:
            title: Presentation Exchange Id
            type: string
          name: presentation_exchange_id
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
        - required: false
          schema:
            title: X-Wallet-Id
          name: x-wallet-id
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /issuer/issue-credential:
      get:
        tags:
        - 'Legacy: Issuer'
        summary: Issue Credential
        description: "Issues a credential\n\nParameters:\n-----------\nschema_id: str\n\
          connection_id: str\ncredential_attrs: List[str]\n    A list of requested credential\
          \ attributes\napi_key: Header(None)\n    The request header object api_key\n\
          wallet_id: Header(None)\n    The request header object wallet_id\ntenant_jwt:\
          \ Header(None)\n    The request header object tenant_jwt"
        operationId: issue_credential_issuer_issue_credential_get
        parameters:
        - required: true
          schema:
            title: Schema Id
            type: string
          name: schema_id
          in: query
        - required: true
          schema:
            title: Connection Id
            type: string
          name: connection_id
          in: query
        - required: false
          schema:
            title: Credential Attrs
            type: array
            items:
              type: string
          name: credential_attrs
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IssueCredentialResponse'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /issuer/connection:
      get:
        tags:
        - 'Legacy: Issuer'
        summary: Create Connection
        description: "Creates invitation for the holder to scan\n\nParameters:\n----------\n\
          api_key: Header(None)\n    The request header object api_key\nwallet_id: Header(None)\n\
          \    The request header object wallet_id\ntenant_jwt: Header(None)\n    The\
          \ request header object tenant_jwt\n\nReturns: StreamingResponse\n    QRCode\
          \ PNG file from StreamingResponse"
        operationId: create_connection_issuer_connection_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Return the JSON item or an image.
            content:
              application/json:
                schema: {}
              image/png: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /issuer/get-connection-id:
      get:
        tags:
        - 'Legacy: Issuer'
        summary: Get Connection Ids
        description: "Creates invitation for the holder to scan\n\nParameters:\n----------\n\
          api_key: Header(None)\n    The request header object api_key\nwallet_id: Header(None)\n\
          \    The request header object wallet_id\ntenant_jwt: Header(None)\n    The\
          \ request header object tenant_jwt\n\nReturns:\n--------\nconnection_id: JSON\n\
          \    The request response from the ledger with all current connections\n \
          \   The 'results' key holds a [dict]."
        operationId: get_connection_ids_issuer_get_connection_id_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ConnectionIdResponse'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /schemas/all_schemas:
      get:
        tags:
        - 'Legacy: Schemas'
        summary: Get Schema
        description: "Get all valid schemas from YOMA\n\nParameters:\n-----------\n\
          api_key: Header(None)\n    The request header object api_key\nwallet_id: Header(None)\n\
          \    The request header object wallet_id\ntenant_jwt: Header(None)\n    The\
          \ request header object tenant_jwt\n\nReturns:\n--------\ncreated_schema:\
          \ dict\n    The created schema response in JSON"
        operationId: get_schema_schemas_all_schemas_get
        parameters:
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /schemas/write-schema-and-credential-definition:
      post:
        tags:
        - 'Legacy: Schemas'
        summary: Write Credential Schema
        description: "Create schema and credential definition and\nwrite it to the ledger.\n\
          \nParameters:\n----------\n* schema_name: str\n    The name of the schema\
          \ to be defined\n* schema_version: str\n    The version of the schema to be\
          \ written\n\n    Should be of the form x.x.x where x is an integer\n* schema_attributes:\
          \ list, optional\n    A list of attributes for the schema (default is None)\n\
          api_key: Header(None)\n    The request header object api_key\nwallet_id: Header(None)\n\
          \    The request header object wallet_id\ntenant_jwt: Header(None)\n    The\
          \ request header object tenant_jwt\n\nReturns:\n--------\nas json:\n* schema\n\
          * schema_id\n* credential_definition\n* credential_id"
        operationId: write_credential_schema_schemas_write_schema_and_credential_definition_post
        parameters:
        - required: true
          schema:
            title: Schema Name
            type: string
          name: schema_name
          in: query
        - required: true
          schema:
            title: Schema Version
            type: string
          name: schema_version
          in: query
        - required: false
          schema:
            title: Schema Attrs
            type: array
            items:
              type: string
          name: schema_attrs
          in: query
        - required: false
          schema:
            title: X-Api-Key
            type: string
          name: x-api-key
          in: header
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SchemaResponse'
          '422':
            description: Validation Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
    /:
      get:
        tags:
        - Root
        summary: Root
        operationId: root__get
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema: {}
  components:
    schemas:
      Body_get_proof_request_verifier_request_proof_for_schema_post:
        title: Body_get_proof_request_verifier_request_proof_for_schema_post
        type: object
        properties:
          zero_knowledge_proof:
            title: Zero Knowledge Proof
            type: array
            items:
              type: object
          self_attested:
            title: Self Attested
            type: array
            items:
              type: string
      ConnectionIdResponse:
        title: ConnectionIdResponse
        required:
        - connection_ids
        type: object
        properties:
          connection_ids:
            title: Connection Ids
            type: object
      CredentialDefinition:
        title: CredentialDefinition
        required:
        - tag
        - schema_id
        type: object
        properties:
          support_revocation:
            title: Support Revocation
            type: boolean
          tag:
            title: Tag
            type: string
          schema_id:
            title: Schema Id
            type: string
      DidCreationResponse:
        title: DidCreationResponse
        required:
        - did_object
        - issuer_verkey
        - issuer_endpoint
        type: object
        properties:
          did_object:
            title: Did Object
            type: object
          issuer_verkey:
            title: Issuer Verkey
            type: string
          issuer_endpoint:
            title: Issuer Endpoint
            type: string
      HTTPValidationError:
        title: HTTPValidationError
        type: object
        properties:
          detail:
            title: Detail
            type: array
            items:
              $ref: '#/components/schemas/ValidationError'
      IssueCredentialResponse:
        title: IssueCredentialResponse
        required:
        - credential
        type: object
        properties:
          credential:
            title: Credential
            type: object
      SchemaDefinition:
        title: SchemaDefinition
        required:
        - name
        - version
        - attributes
        type: object
        properties:
          name:
            title: Name
            type: string
          version:
            title: Version
            type: string
          attributes:
            title: Attributes
            type: array
            items:
              type: string
      SchemaResponse:
        title: SchemaResponse
        required:
        - schema_resp
        - schema_id
        - credential_definition
        - credential_definition_id
        type: object
        properties:
          schema_resp:
            title: Schema Resp
            type: object
          schema_id:
            title: Schema Id
            type: string
          credential_definition:
            title: Credential Definition
            type: object
          credential_definition_id:
            title: Credential Definition Id
            type: string
      ValidationError:
        title: ValidationError
        required:
        - loc
        - msg
        - type
        type: object
        properties:
          loc:
            title: Location
            type: array
            items:
              type: string
          msg:
            title: Message
            type: string
          type:
            title: Error Type
            type: string
contentType: yaml
